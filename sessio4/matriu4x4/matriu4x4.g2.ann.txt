/* 
 * Command line: opannotate --source matriu4x4.g2 
 * 
 * Interpretation of command line:
 * Output annotated source file with samples
 * Output all files
 * 
 * CPU: Intel Ivy Bridge microarchitecture, speed 2.7e+06 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Total samples for file : "/home/albert/Dropbox/UPC/FIB/6eQuatri/PCA/Lab/sessio4/matriu4x4/matriu4x4.c"
 * 
 *  23819 99.3866
 */


               :#include <stdio.h>
               :#include <stdlib.h>
               :#include <assert.h>
               :
               :#define N_ITER 10000000
               :
               :void __attribute__((always_inline)) inline multiplica(int A[4][4], int B[4][4], int C[4][4], unsigned int n_iter)
               :{
               :   int iter;
               :   int i,j,k;
               :
    16  0.0668 :   for (iter=0; iter<n_iter; iter++)
               :   {
    17  0.0709 :      for (i = 0; i < 4; i++)
               :      {
   680  2.8374 :        for (j = 0; j < 4; j++)
               :	{
  5467 22.8115 :           for (k = 0; k < 4; k++)
               :	   {
 17530 73.1453 :              C[i][j] = C[i][j] + A[i][k] * B[k][j];
               :	   }
               :	}
               :      }
               :   }
               :}
               :
               :void print_matriu(int C[][4])
               :{
               :   int i,j,k;
               :
               :   for (i = 0; i < 4; i++)
               :   {
               :     for (j = 0; j < 4; j++)
               :     {
               :       printf("%d ", C[i][j]);
               :     }
               :     printf("\n");
               :   }
               :}
               :
               :int main(int argc, char *argv[])
               :{ /* main total:  23819 99.3866 */
   109  0.4548 :    int A[4][4], B[4][4], C[4][4] = {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
               :    unsigned int n_iter=N_ITER, i,j;
               :
               :    for (i=0; i<4; i++) {
               :        for (j=0; j<4; j++) {
               :            A[i][j] = rand();
               :            B[i][j] = rand();
               :        }
               :    }
               :
               :    if (argc > 1) {
               :	n_iter = atoi(argv[1]);
               :    }
               :
               :    multiplica(A, B, C, n_iter);
               :
               :    print_matriu(C);
               :
               :    return 0;
               :}
/* 
 * Total samples for file : "/build/eglibc-3GlaMS/eglibc-2.19/elf/do-rel.h"
 * 
 *      2  0.0083
 */


/* 
 * Total samples for file : "/build/eglibc-3GlaMS/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../cacheinfo.c"
 * 
 *      1  0.0042
 */


 /* intel_check_word total:      1  0.0042 */
/* 
 * Total samples for file : "/build/eglibc-3GlaMS/eglibc-2.19/string/../sysdeps/x86_64/memcpy.S"
 * 
 *      1  0.0042
 */


 /* __GI___mempcpy total:      1  0.0042 */
/* 
 * Total samples for file : "/build/eglibc-3GlaMS/eglibc-2.19/elf/dl-object.c"
 * 
 *      1  0.0042
 */


 /* _dl_add_to_namespace_list total:      1  0.0042 */
/* 
 * Total samples for file : "/build/eglibc-3GlaMS/eglibc-2.19/elf/dl-lookup.c"
 * 
 *      1  0.0042
 */


 /* do_lookup_x total:      1  0.0042 */
