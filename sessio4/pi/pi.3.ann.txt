/* 
 * Command line: opannotate --assembly pi.3 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Ivy Bridge microarchitecture, speed 3600 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/dades/albert.segarra.roca/Q6/PCA/lab/sessio4/pi/pi.3:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004009a0 <calculate>: /* calculate total: 102217 99.6238 */
               :  4009a0:	push   %r15
               :  4009a2:	xor    %esi,%esi
               :  4009a4:	mov    $0x607140,%edi
               :  4009a9:	push   %r14
               :  4009ab:	push   %r13
               :  4009ad:	push   %r12
               :  4009af:	push   %rbp
               :  4009b0:	push   %rbx
               :  4009b1:	sub    $0x8,%rsp
               :  4009b5:	mov    0x2016e5(%rip),%eax        # 6020a0 <N>
               :  4009bb:	lea    0x4(%rax),%r15d
               :  4009bf:	add    $0x5,%eax
               :  4009c2:	mov    %r15d,0x208f77(%rip)        # 609940 <N4>
               :  4009c9:	lea    0x1(%r15,%r15,1),%r12d
               :  4009ce:	movslq %eax,%rbx
               :  4009d1:	mov    %rbx,%rdx
               :  4009d4:	callq  400610 <memset@plt>
               :  4009d9:	xor    %esi,%esi
               :  4009db:	mov    %rbx,%rdx
               :  4009de:	mov    $0x6020c0,%edi
               :  4009e3:	movb   $0x0,0x206756(%rip)        # 607140 <a>
               :  4009ea:	callq  400610 <memset@plt>
               :  4009ef:	cmp    $0x2,%r12d
               :  4009f3:	movb   $0x0,0x2016c6(%rip)        # 6020c0 <b>
               :  4009fa:	jle    400e23 <calculate+0x483>
               :  400a00:	xor    %ebx,%ebx
               :  400a02:	movslq %r12d,%rbp
               :  400a05:	mov    $0x51eb851f,%r14d
               :  400a0b:	mov    $0x891ac73b,%r13d
               :  400a11:	nopl   0x0(%rax)
               :  400a18:	lea    0x1(%r15),%edx
               :  400a1c:	xor    %esi,%esi
               :  400a1e:	mov    $0x604940,%edi
               :  400a23:	movslq %edx,%rdx
               :  400a26:	callq  400610 <memset@plt>
     1 9.7e-04 :  400a2b:	cmp    $0x1998,%r12d
               :  400a32:	movb   $0x1,0x203f07(%rip)        # 604940 <c>
     1 9.7e-04 :  400a39:	jle    400c20 <calculate+0x280>
               :  400a3f:	test   %r15d,%r15d
               :  400a42:	js     400aba <calculate+0x11a>
               :  400a44:	movslq %r15d,%r15
               :  400a47:	mov    $0x604940,%ecx
               :  400a4c:	xor    %edx,%edx
               :  400a4e:	lea    (%rbx,%rbp,1),%r8
               :  400a52:	add    $0x604941,%r15
               :  400a59:	jmp    400a87 <calculate+0xe7>
               :  400a5b:	nopl   0x0(%rax,%rax,1)
   879  0.8567 :  400a60:	movsbl (%rcx),%eax
   656  0.6394 :  400a63:	lea    (%rdx,%rdx,4),%edx
     1 9.7e-04 :  400a66:	add    $0x1,%rcx
               :  400a6a:	lea    (%rax,%rdx,2),%edi
   434  0.4230 :  400a6d:	xor    %edx,%edx
               :  400a6f:	mov    %edi,%eax
               :  400a71:	div    %r12d
  8150  7.9432 :  400a74:	mov    %eax,%esi
     1 9.7e-04 :  400a76:	imul   %r12d,%eax
  1120  1.0916 :  400a7a:	mov    %sil,-0x1(%rcx)
               :  400a7e:	sub    %eax,%edi
   404  0.3938 :  400a80:	cmp    %r15,%rcx
               :  400a83:	mov    %edi,%edx
               :  400a85:	je     400aba <calculate+0x11a>
     6  0.0058 :  400a87:	cmp    $0x1998,%edx
               :  400a8d:	jbe    400a60 <calculate+0xc0>
   744  0.7251 :  400a8f:	movsbq (%rcx),%rax
   534  0.5205 :  400a93:	lea    (%rdx,%rdx,4),%rdx
    40  0.0390 :  400a97:	add    $0x1,%rcx
               :  400a9b:	lea    (%rax,%rdx,2),%rdi
   314  0.3060 :  400a9f:	mov    %rdi,%rax
     1 9.7e-04 :  400aa2:	cqto   
   294  0.2865 :  400aa4:	idiv   %r8
 13499 13.1565 :  400aa7:	mov    %eax,%esi
   289  0.2817 :  400aa9:	imul   %r12d,%eax
   164  0.1598 :  400aad:	mov    %sil,-0x1(%rcx)
               :  400ab1:	mov    %edi,%edx
     3  0.0029 :  400ab3:	sub    %eax,%edx
   304  0.2963 :  400ab5:	cmp    %r15,%rcx
               :  400ab8:	jne    400a87 <calculate+0xe7>
               :  400aba:	mov    0x208e80(%rip),%esi        # 609940 <N4>
               :  400ac0:	test   %esi,%esi
               :  400ac2:	js     400b7d <calculate+0x1dd>
               :  400ac8:	movslq %esi,%r8
               :  400acb:	lea    0x604940(%r8),%rdi
               :  400ad2:	lea    0x607140(%r8),%rdx
               :  400ad9:	mov    %rdi,%rcx
               :  400adc:	jmp    400af7 <calculate+0x157>
               :  400ade:	xchg   %ax,%ax
  2489  2.4259 :  400ae0:	mov    %al,(%rdx)
  2714  2.6451 :  400ae2:	sub    $0x1,%rcx
   118  0.1150 :  400ae6:	sub    $0x1,%rdx
     2  0.0019 :  400aea:	cmp    $0x60493f,%rcx
               :  400af1:	je     400ba8 <calculate+0x208>
   580  0.5653 :  400af7:	movzbl (%rcx),%eax
   516  0.5029 :  400afa:	sub    (%rdx),%al
  3000  2.9239 :  400afc:	jns    400ae0 <calculate+0x140>
  2372  2.3118 :  400afe:	addb   $0x1,-0x1(%rdx)
  2835  2.7631 :  400b02:	add    $0xa,%eax
    91  0.0887 :  400b05:	mov    %al,(%rdx)
   717  0.6988 :  400b07:	jmp    400ae2 <calculate+0x142>
               :  400b09:	nopl   0x0(%rax)
               :  400b10:	xor    %ecx,%ecx
               :  400b12:	xor    %eax,%eax
               :  400b14:	nopl   0x0(%rax)
               :  400b18:	movsbl 0x6020c0(%rcx),%edx
  1019  0.9931 :  400b1f:	lea    (%rax,%rax,4),%eax
               :  400b22:	add    $0x1,%rcx
               :  400b26:	lea    (%rdx,%rax,2),%edi
   971  0.9464 :  400b29:	mov    %edi,%eax
               :  400b2b:	mul    %r13d
  4402  4.2903 :  400b2e:	shr    $0x7,%edx
   850  0.8284 :  400b31:	imul   $0xef,%edx,%eax
  3083  3.0048 :  400b37:	mov    %dl,0x6020bf(%rcx)
     1 9.7e-04 :  400b3d:	sub    %eax,%edi
  1017  0.9912 :  400b3f:	cmp    %ecx,%esi
               :  400b41:	mov    %edi,%eax
               :  400b43:	jge    400b18 <calculate+0x178>
               :  400b45:	xor    %ecx,%ecx
               :  400b47:	xor    %eax,%eax
               :  400b49:	nopl   0x0(%rax)
               :  400b50:	movsbl 0x6020c0(%rcx),%edx
  1026  1.0000 :  400b57:	lea    (%rax,%rax,4),%eax
               :  400b5a:	add    $0x1,%rcx
               :  400b5e:	lea    (%rdx,%rax,2),%edi
  1060  1.0331 :  400b61:	mov    %edi,%eax
               :  400b63:	mul    %r13d
  4418  4.3059 :  400b66:	shr    $0x7,%edx
   786  0.7661 :  400b69:	imul   $0xef,%edx,%eax
  3073  2.9950 :  400b6f:	mov    %dl,0x6020bf(%rcx)
               :  400b75:	sub    %eax,%edi
  1035  1.0087 :  400b77:	cmp    %ecx,%esi
               :  400b79:	mov    %edi,%eax
               :  400b7b:	jge    400b50 <calculate+0x1b0>
               :  400b7d:	mov    $0x2e,%edi
               :  400b82:	sub    $0x2,%r12d
               :  400b86:	sub    $0x2,%rbx
               :  400b8a:	callq  4005f0 <putchar@plt>
               :  400b8f:	cmp    $0x2,%r12d
               :  400b93:	jle    400c60 <calculate+0x2c0>
               :  400b99:	mov    0x208da0(%rip),%r15d        # 609940 <N4>
               :  400ba0:	jmpq   400a18 <calculate+0x78>
               :  400ba5:	nopl   (%rax)
     1 9.7e-04 :  400ba8:	xor    %ecx,%ecx
               :  400baa:	xor    %eax,%eax
               :  400bac:	nopl   0x0(%rax)
               :  400bb0:	movsbl 0x607140(%rcx),%edx
  1014  0.9883 :  400bb7:	lea    (%rax,%rax,4),%eax
               :  400bba:	add    $0x1,%rcx
     1 9.7e-04 :  400bbe:	lea    (%rdx,%rax,2),%r9d
  1011  0.9854 :  400bc2:	mov    %r9d,%eax
               :  400bc5:	mul    %r14d
  4310  4.2007 :  400bc8:	shr    $0x3,%edx
   843  0.8216 :  400bcb:	lea    (%rdx,%rdx,4),%eax
  1031  1.0048 :  400bce:	mov    %dl,0x60713f(%rcx)
               :  400bd4:	lea    (%rax,%rax,4),%eax
  1078  1.0507 :  400bd7:	sub    %eax,%r9d
  1034  1.0078 :  400bda:	cmp    %ecx,%esi
     1 9.7e-04 :  400bdc:	mov    %r9d,%eax
               :  400bdf:	jge    400bb0 <calculate+0x210>
               :  400be1:	lea    0x6020c0(%r8),%rax
               :  400be8:	mov    %rdi,%rdx
               :  400beb:	jmp    400c07 <calculate+0x267>
               :  400bed:	nopl   (%rax)
  3838  3.7406 :  400bf0:	mov    %cl,(%rax)
  2681  2.6130 :  400bf2:	sub    $0x1,%rdx
   287  0.2797 :  400bf6:	sub    $0x1,%rax
     6  0.0058 :  400bfa:	cmp    $0x60493f,%rdx
               :  400c01:	je     400b10 <calculate+0x170>
   424  0.4132 :  400c07:	movzbl (%rdx),%ecx
   702  0.6842 :  400c0a:	sub    (%rax),%cl
  3029  2.9522 :  400c0c:	jns    400bf0 <calculate+0x250>
  2350  2.2904 :  400c0e:	addb   $0x1,-0x1(%rax)
  3010  2.9336 :  400c12:	add    $0xa,%ecx
    28  0.0273 :  400c15:	mov    %cl,(%rax)
   247  0.2407 :  400c17:	jmp    400bf2 <calculate+0x252>
               :  400c19:	nopl   0x0(%rax)
               :  400c20:	test   %r15d,%r15d
               :  400c23:	js     400aba <calculate+0x11a>
               :  400c29:	xor    %ecx,%ecx
               :  400c2b:	xor    %esi,%esi
               :  400c2d:	nopl   (%rax)
               :  400c30:	movsbl 0x604940(%rcx),%eax
               :  400c37:	lea    (%rsi,%rsi,4),%edx
   305  0.2973 :  400c3a:	add    $0x1,%rcx
               :  400c3e:	lea    (%rax,%rdx,2),%esi
   342  0.3333 :  400c41:	xor    %edx,%edx
               :  400c43:	mov    %esi,%eax
               :  400c45:	div    %r12d
  7291  7.1060 :  400c48:	mov    %eax,%edx
               :  400c4a:	mov    %al,0x60493f(%rcx)
   310  0.3021 :  400c50:	imul   %r12d,%edx
   666  0.6491 :  400c54:	sub    %edx,%esi
   356  0.3470 :  400c56:	cmp    %ecx,%r15d
               :  400c59:	jge    400c30 <calculate+0x290>
               :  400c5b:	jmpq   400aba <calculate+0x11a>
               :  400c60:	mov    0x208cda(%rip),%ebx        # 609940 <N4>
               :  400c66:	lea    0x1(%rbx),%edx
               :  400c69:	xor    %esi,%esi
               :  400c6b:	mov    $0x604940,%edi
               :  400c70:	movslq %edx,%rdx
               :  400c73:	callq  400610 <memset@plt>
               :  400c78:	test   %ebx,%ebx
               :  400c7a:	movb   $0x1,0x203cbf(%rip)        # 604940 <c>
               :  400c81:	js     400cf1 <calculate+0x351>
               :  400c83:	movslq %ebx,%r8
               :  400c86:	lea    0x604940(%r8),%r9
               :  400c8d:	lea    0x607140(%r8),%rcx
               :  400c94:	mov    %r9,%rdi
               :  400c97:	mov    %rcx,%rax
               :  400c9a:	jmp    400cb3 <calculate+0x313>
               :  400c9c:	nopl   0x0(%rax)
               :  400ca0:	mov    %dl,(%rax)
               :  400ca2:	sub    $0x1,%rdi
               :  400ca6:	sub    $0x1,%rax
     1 9.7e-04 :  400caa:	cmp    $0x60493f,%rdi
               :  400cb1:	je     400d09 <calculate+0x369>
               :  400cb3:	movzbl (%rdi),%edx
               :  400cb6:	sub    (%rax),%dl
               :  400cb8:	jns    400ca0 <calculate+0x300>
               :  400cba:	addb   $0x1,-0x1(%rax)
               :  400cbe:	add    $0xa,%edx
               :  400cc1:	mov    %dl,(%rax)
               :  400cc3:	jmp    400ca2 <calculate+0x302>
               :  400cc5:	xor    %edx,%edx
               :  400cc7:	mov    $0xcccccccd,%edi
               :  400ccc:	nopl   0x0(%rax)
               :  400cd0:	movsbl (%rcx),%eax
               :  400cd3:	sub    $0x1,%rcx
               :  400cd7:	lea    (%rdx,%rax,4),%esi
               :  400cda:	mov    %esi,%eax
               :  400cdc:	mul    %edi
     1 9.7e-04 :  400cde:	shr    $0x3,%edx
               :  400ce1:	lea    (%rdx,%rdx,4),%eax
               :  400ce4:	add    %eax,%eax
               :  400ce6:	sub    %eax,%esi
               :  400ce8:	mov    %sil,0x1(%rcx)
               :  400cec:	cmp    %rcx,%r9
               :  400cef:	jne    400cd0 <calculate+0x330>
               :  400cf1:	add    $0x8,%rsp
               :  400cf5:	mov    $0x2e,%edi
               :  400cfa:	pop    %rbx
               :  400cfb:	pop    %rbp
               :  400cfc:	pop    %r12
               :  400cfe:	pop    %r13
               :  400d00:	pop    %r14
               :  400d02:	pop    %r15
               :  400d04:	jmpq   4005f0 <putchar@plt>
               :  400d09:	xor    %esi,%esi
               :  400d0b:	xor    %eax,%eax
               :  400d0d:	mov    $0xcccccccd,%r10d
               :  400d13:	nopl   0x0(%rax,%rax,1)
               :  400d18:	movsbl 0x607140(%rsi),%edx
               :  400d1f:	lea    (%rax,%rax,4),%eax
               :  400d22:	add    $0x1,%rsi
               :  400d26:	lea    (%rdx,%rax,2),%edi
               :  400d29:	mov    %edi,%eax
               :  400d2b:	mul    %r10d
               :  400d2e:	shr    $0x2,%edx
     1 9.7e-04 :  400d31:	lea    (%rdx,%rdx,4),%eax
               :  400d34:	mov    %dl,0x60713f(%rsi)
               :  400d3a:	sub    %eax,%edi
               :  400d3c:	cmp    %esi,%ebx
               :  400d3e:	mov    %edi,%eax
               :  400d40:	jge    400d18 <calculate+0x378>
               :  400d42:	lea    0x6020c0(%r8),%rax
               :  400d49:	mov    %r9,%rsi
               :  400d4c:	jmp    400d63 <calculate+0x3c3>
               :  400d4e:	xchg   %ax,%ax
               :  400d50:	mov    %dl,(%rax)
               :  400d52:	sub    $0x1,%rsi
               :  400d56:	sub    $0x1,%rax
               :  400d5a:	cmp    $0x60493f,%rsi
               :  400d61:	je     400d75 <calculate+0x3d5>
               :  400d63:	movzbl (%rsi),%edx
               :  400d66:	sub    (%rax),%dl
               :  400d68:	jns    400d50 <calculate+0x3b0>
               :  400d6a:	addb   $0x1,-0x1(%rax)
               :  400d6e:	add    $0xa,%edx
               :  400d71:	mov    %dl,(%rax)
               :  400d73:	jmp    400d52 <calculate+0x3b2>
               :  400d75:	xor    %esi,%esi
               :  400d77:	xor    %eax,%eax
               :  400d79:	mov    $0x891ac73b,%r9d
               :  400d7f:	nop
               :  400d80:	movsbl 0x6020c0(%rsi),%edx
               :  400d87:	lea    (%rax,%rax,4),%eax
               :  400d8a:	add    $0x1,%rsi
               :  400d8e:	lea    (%rdx,%rax,2),%edi
               :  400d91:	mov    %edi,%eax
               :  400d93:	mul    %r9d
     1 9.7e-04 :  400d96:	shr    $0x7,%edx
               :  400d99:	imul   $0xef,%edx,%eax
               :  400d9f:	mov    %dl,0x6020bf(%rsi)
               :  400da5:	sub    %eax,%edi
               :  400da7:	cmp    %esi,%ebx
               :  400da9:	mov    %edi,%eax
               :  400dab:	jge    400d80 <calculate+0x3e0>
               :  400dad:	mov    $0x60713f,%r9d
               :  400db3:	mov    %rcx,%rsi
               :  400db6:	xor    %edx,%edx
               :  400db8:	mov    $0xcccccccd,%r10d
               :  400dbe:	xchg   %ax,%ax
               :  400dc0:	movsbl (%rsi),%eax
               :  400dc3:	sub    $0x1,%rsi
               :  400dc7:	lea    (%rdx,%rax,4),%edi
     1 9.7e-04 :  400dca:	mov    %edi,%eax
               :  400dcc:	mul    %r10d
               :  400dcf:	shr    $0x3,%edx
               :  400dd2:	lea    (%rdx,%rdx,4),%eax
               :  400dd5:	add    %eax,%eax
               :  400dd7:	sub    %eax,%edi
               :  400dd9:	mov    %dil,0x1(%rsi)
               :  400ddd:	cmp    $0x60713f,%rsi
               :  400de4:	jne    400dc0 <calculate+0x420>
               :  400de6:	lea    0x6020bf(%r8),%rdx
               :  400ded:	mov    %rcx,%rax
               :  400df0:	jmp    400e0f <calculate+0x46f>
               :  400df2:	nopw   0x0(%rax,%rax,1)
     1 9.7e-04 :  400df8:	mov    %sil,(%rax)
               :  400dfb:	sub    $0x1,%rax
               :  400dff:	sub    $0x1,%rdx
               :  400e03:	cmp    $0x60713f,%rax
               :  400e09:	je     400cc5 <calculate+0x325>
     1 9.7e-04 :  400e0f:	movzbl (%rax),%esi
               :  400e12:	sub    0x1(%rdx),%sil
               :  400e16:	jns    400df8 <calculate+0x458>
               :  400e18:	addb   $0x1,(%rdx)
               :  400e1b:	add    $0xa,%esi
               :  400e1e:	mov    %sil,(%rax)
               :  400e21:	jmp    400dfb <calculate+0x45b>
               :  400e23:	mov    %r15d,%ebx
               :  400e26:	jmpq   400c66 <calculate+0x2c6>
               :  400e2b:	nopl   0x0(%rax,%rax,1)
               :
               :/dades/albert.segarra.roca/Q6/PCA/lab/sessio4/pi/pi.3:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400e40 <epilog>: /* epilog total:      1 9.7e-04 */
               :  400e40:	mov    0x201239(%rip),%rcx        # 602080 <stdout@@GLIBC_2.2.5>
               :  400e47:	push   %r12
               :  400e49:	mov    $0x4,%edx
               :  400e4e:	push   %rbp
               :  400e4f:	mov    $0x1,%esi
               :  400e54:	mov    $0x401004,%edi
               :  400e59:	push   %rbx
               :  400e5a:	callq  400670 <fwrite@plt>
               :  400e5f:	mov    0x20123b(%rip),%edx        # 6020a0 <N>
               :  400e65:	test   %edx,%edx
               :  400e67:	jle    400f70 <epilog+0x130>
               :  400e6d:	movsbl 0x2062cd(%rip),%edx        # 607141 <a+0x1>
               :  400e74:	mov    $0x401009,%esi
               :  400e79:	xor    %eax,%eax
               :  400e7b:	mov    $0x607142,%ebp
               :  400e80:	mov    $0x1,%ebx
               :  400e85:	mov    $0x66666667,%r12d
               :  400e8b:	mov    0x2011ee(%rip),%rdi        # 602080 <stdout@@GLIBC_2.2.5>
               :  400e92:	callq  400640 <fprintf@plt>
               :  400e97:	jmp    400ebc <epilog+0x7c>
               :  400e99:	nopl   0x0(%rax)
               :  400ea0:	mov    0x2011d9(%rip),%rdi        # 602080 <stdout@@GLIBC_2.2.5>
               :  400ea7:	mov    %ebx,%edx
               :  400ea9:	mov    $0x40100c,%esi
               :  400eae:	xor    %eax,%eax
               :  400eb0:	callq  400640 <fprintf@plt>
               :  400eb5:	nopl   (%rax)
               :  400eb8:	add    $0x1,%rbp
               :  400ebc:	add    $0x1,%ebx
               :  400ebf:	cmp    %ebx,0x2011db(%rip)        # 6020a0 <N>
               :  400ec5:	jl     400f70 <epilog+0x130>
               :  400ecb:	movsbl 0x0(%rbp),%edx
               :  400ecf:	xor    %eax,%eax
               :  400ed1:	mov    $0x401009,%esi
               :  400ed6:	mov    0x2011a3(%rip),%rdi        # 602080 <stdout@@GLIBC_2.2.5>
     1 9.7e-04 :  400edd:	callq  400640 <fprintf@plt>
               :  400ee2:	mov    %ebx,%eax
               :  400ee4:	mov    %ebx,%ecx
               :  400ee6:	imul   %r12d
               :  400ee9:	sar    $0x1f,%ecx
               :  400eec:	sar    %edx
               :  400eee:	sub    %ecx,%edx
               :  400ef0:	lea    (%rdx,%rdx,4),%eax
               :  400ef3:	cmp    %eax,%ebx
               :  400ef5:	jne    400eb8 <epilog+0x78>
               :  400ef7:	mov    %ebx,%eax
               :  400ef9:	mov    $0x51eb851f,%edx
               :  400efe:	imul   %edx
               :  400f00:	mov    $0x32,%eax
               :  400f05:	sar    $0x4,%edx
               :  400f08:	sub    %ecx,%edx
               :  400f0a:	imul   %eax,%edx
               :  400f0d:	cmp    %edx,%ebx
               :  400f0f:	jne    400f50 <epilog+0x110>
               :  400f11:	mov    $0x10624dd3,%edx
               :  400f16:	mov    %ebx,%eax
               :  400f18:	imul   %edx
               :  400f1a:	sar    $0x4,%edx
               :  400f1d:	sub    %ecx,%edx
               :  400f1f:	imul   $0xfa,%edx,%edx
               :  400f25:	cmp    %edx,%ebx
               :  400f27:	je     400ea0 <epilog+0x60>
               :  400f2d:	mov    $0x4,%edx
               :  400f32:	mov    $0x1,%esi
               :  400f37:	mov    $0x401015,%edi
               :  400f3c:	mov    0x20113d(%rip),%rcx        # 602080 <stdout@@GLIBC_2.2.5>
               :  400f43:	callq  400670 <fwrite@plt>
               :  400f48:	jmpq   400eb8 <epilog+0x78>
               :  400f4d:	nopl   (%rax)
               :  400f50:	mov    0x201129(%rip),%rsi        # 602080 <stdout@@GLIBC_2.2.5>
               :  400f57:	mov    $0x20,%edi
               :  400f5c:	callq  400620 <fputc@plt>
               :  400f61:	jmpq   400eb8 <epilog+0x78>
               :  400f66:	nopw   %cs:0x0(%rax,%rax,1)
               :  400f70:	pop    %rbx
               :  400f71:	pop    %rbp
               :  400f72:	pop    %r12
               :  400f74:	retq   
               :  400f75:	nopw   %cs:0x0(%rax,%rax,1)
               :  400f7f:	nop
/* 
 * Command line: opannotate --assembly pi.3 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Ivy Bridge microarchitecture, speed 3600 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/lib64/ld-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000009590 <_dl_lookup_symbol_x>: /* _dl_lookup_symbol_x total:      1 9.7e-04 */
               :    9590:	push   %rbp
     1 9.7e-04 :    9591:	mov    %rsp,%rbp
               :    9594:	push   %r15
               :    9596:	mov    %r9d,%r15d
               :    9599:	push   %r14
               :    959b:	mov    %rsi,%r14
               :    959e:	push   %r13
               :    95a0:	mov    %rdx,%r13
               :    95a3:	push   %r12
               :    95a5:	push   %rbx
               :    95a6:	mov    %r8,%rbx
               :    95a9:	sub    $0xf8,%rsp
               :    95b0:	movzbl (%rdi),%eax
               :    95b3:	mov    %rdi,-0xa8(%rbp)
               :    95ba:	mov    %rcx,-0xc8(%rbp)
               :    95c1:	test   %al,%al
               :    95c3:	je     9850 <_dl_lookup_symbol_x+0x2c0>
               :    95c9:	mov    %rdi,%rdx
               :    95cc:	mov    $0x1505,%r12d
               :    95d2:	nopw   0x0(%rax,%rax,1)
               :    95d8:	mov    %r12,%rcx
               :    95db:	add    $0x1,%rdx
               :    95df:	shl    $0x5,%rcx
               :    95e3:	add    %rcx,%r12
               :    95e6:	add    %rax,%r12
               :    95e9:	movzbl (%rdx),%eax
               :    95ec:	test   %al,%al
               :    95ee:	jne    95d8 <_dl_lookup_symbol_x+0x48>
               :    95f0:	mov    %r12d,%eax
               :    95f3:	mov    %rax,-0xb0(%rbp)
               :    95fa:	mov    $0xffffffff,%eax
               :    95ff:	addq   $0x1,0x218371(%rip)        # 221978 <_rtld_global+0x978>
               :    9607:	test   %rbx,%rbx
               :    960a:	mov    %rax,-0xa0(%rbp)
               :    9611:	movq   $0x0,-0x90(%rbp)
               :    961c:	movq   $0x0,-0x88(%rbp)
               :    9627:	je     9636 <_dl_lookup_symbol_x+0xa6>
               :    9629:	testl  $0xfffffffa,0x10(%rbp)
               :    9630:	jne    a47c <_dl_lookup_symbol_x+0xeec>
               :    9636:	cmpq   $0x0,0x18(%rbp)
               :    963b:	mov    -0xc8(%rbp),%rax
               :    9642:	mov    (%rax),%r9
               :    9645:	jne    99d0 <_dl_lookup_symbol_x+0x440>
               :    964b:	test   %r9,%r9
               :    964e:	movq   $0x0,-0xd0(%rbp)
               :    9659:	je     9e21 <_dl_lookup_symbol_x+0x891>
               :    965f:	lea    -0x90(%rbp),%rdx
               :    9666:	lea    -0xa0(%rbp),%rsi
               :    966d:	mov    -0xd0(%rbp),%rax
               :    9674:	mov    -0xc8(%rbp),%r12
               :    967b:	mov    %rdx,-0xc0(%rbp)
               :    9682:	mov    %rsi,-0xb8(%rbp)
               :    9689:	jmp    96a5 <_dl_lookup_symbol_x+0x115>
               :    968b:	nopl   0x0(%rax,%rax,1)
               :    9690:	jne    9890 <_dl_lookup_symbol_x+0x300>
               :    9696:	add    $0x8,%r12
               :    969a:	mov    (%r12),%r9
               :    969e:	test   %r9,%r9
               :    96a1:	je     96f2 <_dl_lookup_symbol_x+0x162>
               :    96a3:	xor    %eax,%eax
               :    96a5:	mov    0x18(%rbp),%rdi
               :    96a9:	mov    0x10(%rbp),%esi
               :    96ac:	mov    -0xc0(%rbp),%r8
               :    96b3:	mov    0x0(%r13),%rcx
               :    96b7:	mov    -0xb8(%rbp),%rdx
               :    96be:	mov    %r14,0x28(%rsp)
               :    96c3:	mov    %rdi,0x18(%rsp)
               :    96c8:	mov    %esi,0x10(%rsp)
               :    96cc:	mov    -0xa8(%rbp),%rdi
               :    96d3:	mov    -0xb0(%rbp),%rsi
               :    96da:	mov    %r15d,0x20(%rsp)
               :    96df:	mov    %rbx,0x8(%rsp)
               :    96e4:	mov    %rax,(%rsp)
               :    96e8:	callq  8c20 <do_lookup_x>
               :    96ed:	cmp    $0x0,%eax
               :    96f0:	jle    9690 <_dl_lookup_symbol_x+0x100>
               :    96f2:	cmpq   $0x0,-0x90(%rbp)
               :    96fa:	je     9e21 <_dl_lookup_symbol_x+0x891>
               :    9700:	mov    0x0(%r13),%rcx
               :    9704:	test   %rcx,%rcx
               :    9707:	je     9714 <_dl_lookup_symbol_x+0x184>
               :    9709:	movzbl 0x5(%rcx),%eax
               :    970d:	and    $0x3,%eax
               :    9710:	cmp    $0x3,%al
               :    9712:	je     9770 <_dl_lookup_symbol_x+0x1e0>
               :    9714:	mov    -0x88(%rbp),%r12
               :    971b:	xor    %r9d,%r9d
               :    971e:	movzbl 0x314(%r12),%eax
               :    9727:	and    $0x3,%eax
               :    972a:	cmp    $0x2,%al
               :    972c:	mov    %r12,%rax
               :    972f:	je     9a44 <_dl_lookup_symbol_x+0x4b4>
               :    9735:	mov    0x3cc(%rax),%edx
               :    973b:	test   %edx,%edx
               :    973d:	je     9a35 <_dl_lookup_symbol_x+0x4a5>
               :    9743:	mov    0x217517(%rip),%edx        # 220c60 <_rtld_global_ro>
               :    9749:	test   $0x804,%edx
               :    974f:	jne    9abe <_dl_lookup_symbol_x+0x52e>
               :    9755:	mov    -0x90(%rbp),%rdx
               :    975c:	mov    %rdx,0x0(%r13)
               :    9760:	lea    -0x28(%rbp),%rsp
               :    9764:	pop    %rbx
               :    9765:	pop    %r12
               :    9767:	pop    %r13
               :    9769:	pop    %r14
               :    976b:	pop    %r15
               :    976d:	pop    %rbp
               :    976e:	retq   
               :    976f:	nop
               :    9770:	cmp    $0x1,%r15d
               :    9774:	je     9860 <_dl_lookup_symbol_x+0x2d0>
               :    977a:	mov    -0xc8(%rbp),%rax
               :    9781:	movq   $0x0,-0x70(%rbp)
               :    9789:	movq   $0x0,-0x68(%rbp)
               :    9791:	mov    (%rax),%r9
               :    9794:	test   %r9,%r9
               :    9797:	je     9ecd <_dl_lookup_symbol_x+0x93d>
               :    979d:	mov    %rax,%r10
               :    97a0:	lea    -0x70(%rbp),%r12
               :    97a4:	mov    -0xd0(%rbp),%rax
               :    97ab:	jmp    97c2 <_dl_lookup_symbol_x+0x232>
               :    97ad:	nopl   (%rax)
               :    97b0:	add    $0x8,%r10
               :    97b4:	mov    (%r10),%r9
               :    97b7:	test   %r9,%r9
               :    97ba:	je     981b <_dl_lookup_symbol_x+0x28b>
               :    97bc:	mov    0x0(%r13),%rcx
               :    97c0:	xor    %eax,%eax
               :    97c2:	mov    0x18(%rbp),%rdx
               :    97c6:	mov    -0xb0(%rbp),%rsi
               :    97cd:	mov    %r12,%r8
               :    97d0:	mov    -0xa8(%rbp),%rdi
               :    97d7:	movq   $0x0,0x28(%rsp)
               :    97e0:	movl   $0x1,0x20(%rsp)
               :    97e8:	mov    %rbx,0x8(%rsp)
               :    97ed:	mov    %rdx,0x18(%rsp)
               :    97f2:	mov    0x10(%rbp),%edx
               :    97f5:	mov    %rax,(%rsp)
               :    97f9:	mov    %r10,-0xc0(%rbp)
               :    9800:	mov    %edx,0x10(%rsp)
               :    9804:	mov    -0xb8(%rbp),%rdx
               :    980b:	callq  8c20 <do_lookup_x>
               :    9810:	test   %eax,%eax
               :    9812:	mov    -0xc0(%rbp),%r10
               :    9819:	je     97b0 <_dl_lookup_symbol_x+0x220>
               :    981b:	cmpq   $0x0,-0x70(%rbp)
               :    9820:	je     9ecd <_dl_lookup_symbol_x+0x93d>
               :    9826:	cmp    %r14,-0x68(%rbp)
               :    982a:	je     9ecd <_dl_lookup_symbol_x+0x93d>
               :    9830:	mov    0x0(%r13),%rax
               :    9834:	mov    %r14,-0x88(%rbp)
               :    983b:	mov    %r14,%r12
               :    983e:	mov    %rax,-0x90(%rbp)
               :    9845:	jmpq   9a1a <_dl_lookup_symbol_x+0x48a>
               :    984a:	nopw   0x0(%rax,%rax,1)
               :    9850:	movq   $0x1505,-0xb0(%rbp)
               :    985b:	jmpq   95fa <_dl_lookup_symbol_x+0x6a>
               :    9860:	cmp    %r14,-0x88(%rbp)
               :    9867:	je     9a17 <_dl_lookup_symbol_x+0x487>
               :    986d:	mov    %rcx,-0x90(%rbp)
               :    9874:	mov    %r14,-0x88(%rbp)
               :    987b:	mov    %r14,%r12
               :    987e:	mov    $0x1,%r9d
               :    9884:	jmpq   971e <_dl_lookup_symbol_x+0x18e>
               :    9889:	nopl   0x0(%rax)
               :    9890:	cmpq   $0x0,0x18(%rbp)
               :    9895:	jne    9696 <_dl_lookup_symbol_x+0x106>
               :    989b:	test   %rbx,%rbx
               :    989e:	je     99f8 <_dl_lookup_symbol_x+0x468>
               :    98a4:	test   %r14,%r14
               :    98a7:	lea    0x1060c(%rip),%r12        # 19eba <__GI__itoa_lower_digits+0x31a>
               :    98ae:	je     98b4 <_dl_lookup_symbol_x+0x324>
               :    98b0:	mov    0x8(%r14),%r12
               :    98b4:	lea    0x109ec(%rip),%rdx        # 1a2a7 <__PRETTY_FUNCTION__.9424+0x31>
               :    98bb:	cmp    $0xfffffffe,%eax
               :    98be:	lea    0x105f5(%rip),%rax        # 19eba <__GI__itoa_lower_digits+0x31a>
               :    98c5:	lea    -0x30(%rbp),%r14
               :    98c9:	mov    $0x1,%r15d
               :    98cf:	mov    %rdx,-0x70(%rbp)
               :    98d3:	mov    -0xa8(%rbp),%rdx
               :    98da:	mov    %rdx,-0x68(%rbp)
               :    98de:	lea    0x109ca(%rip),%rdx        # 1a2af <__PRETTY_FUNCTION__.9424+0x39>
               :    98e5:	mov    %rdx,-0x60(%rbp)
               :    98e9:	mov    (%rbx),%rdx
               :    98ec:	mov    %rdx,-0x58(%rbp)
               :    98f0:	lea    0x109eb(%rip),%rdx        # 1a2e2 <__PRETTY_FUNCTION__.9424+0x6c>
               :    98f7:	mov    %rdx,-0x50(%rbp)
               :    98fb:	mov    0x10(%rbx),%rdx
               :    98ff:	lea    0x109f2(%rip),%rbx        # 1a2f8 <__PRETTY_FUNCTION__.9424+0x82>
               :    9906:	mov    %rbx,-0x40(%rbp)
               :    990a:	mov    %rdx,-0x48(%rbp)
               :    990e:	lea    0x1097c(%rip),%rdx        # 1a291 <__PRETTY_FUNCTION__.9424+0x1b>
               :    9915:	cmovne %rax,%rdx
               :    9919:	mov    $0x7,%eax
               :    991e:	mov    %rdx,-0x38(%rbp)
               :    9922:	lea    -0x68(%rbp),%rdx
               :    9926:	mov    %rdx,%rbx
               :    9929:	jmp    994a <_dl_lookup_symbol_x+0x3ba>
               :    992b:	nopl   0x0(%rax,%rax,1)
               :    9930:	mov    (%rbx),%rdi
               :    9933:	mov    %rdx,-0xa8(%rbp)
               :    993a:	add    $0x8,%rbx
               :    993e:	callq  17810 <strlen>
               :    9943:	mov    -0xa8(%rbp),%rdx
               :    994a:	add    %rax,%r15
               :    994d:	cmp    %r14,%rbx
               :    9950:	jne    9930 <_dl_lookup_symbol_x+0x3a0>
               :    9952:	add    $0x1e,%r15
               :    9956:	lea    0x1094a(%rip),%rsi        # 1a2a7 <__PRETTY_FUNCTION__.9424+0x31>
               :    995d:	and    $0xfffffffffffffff0,%r15
               :    9961:	sub    %r15,%rsp
               :    9964:	mov    %rdx,%r15
               :    9967:	lea    0x3f(%rsp),%rbx
               :    996c:	and    $0xfffffffffffffff0,%rbx
               :    9970:	mov    %rbx,%rax
               :    9973:	jmp    997f <_dl_lookup_symbol_x+0x3ef>
               :    9975:	nopl   (%rax)
               :    9978:	mov    (%r15),%rsi
               :    997b:	add    $0x8,%r15
               :    997f:	mov    %rax,%rdi
               :    9982:	callq  18660 <__stpcpy>
               :    9987:	cmp    %r14,%r15
               :    998a:	jne    9978 <_dl_lookup_symbol_x+0x3e8>
               :    998c:	cmpb   $0x0,(%r12)
               :    9991:	mov    %r12,%rsi
               :    9994:	jne    99ae <_dl_lookup_symbol_x+0x41e>
               :    9996:	mov    0x217403(%rip),%rax        # 220da0 <_dl_argv>
               :    999d:	lea    0x102a3(%rip),%rsi        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    99a4:	mov    (%rax),%rax
               :    99a7:	test   %rax,%rax
               :    99aa:	cmovne %rax,%rsi
               :    99ae:	lea    0x1095d(%rip),%rdx        # 1a312 <__PRETTY_FUNCTION__.9424+0x9c>
               :    99b5:	mov    %rbx,%rcx
               :    99b8:	xor    %edi,%edi
               :    99ba:	callq  e6f0 <_dl_signal_cerror>
               :    99bf:	movq   $0x0,0x0(%r13)
               :    99c7:	xor    %eax,%eax
               :    99c9:	jmpq   9760 <_dl_lookup_symbol_x+0x1d0>
               :    99ce:	xchg   %ax,%ax
               :    99d0:	mov    (%r9),%rax
               :    99d3:	mov    0x18(%rbp),%rdx
               :    99d7:	cmp    %rdx,(%rax)
               :    99da:	je     9a25 <_dl_lookup_symbol_x+0x495>
               :    99dc:	xor    %edx,%edx
               :    99de:	add    $0x1,%rdx
               :    99e2:	mov    0x18(%rbp),%rsi
               :    99e6:	cmp    %rsi,(%rax,%rdx,8)
               :    99ea:	jne    99de <_dl_lookup_symbol_x+0x44e>
               :    99ec:	mov    %rdx,-0xd0(%rbp)
               :    99f3:	jmpq   965f <_dl_lookup_symbol_x+0xcf>
               :    99f8:	lea    0x13571(%rip),%rcx        # 1cf70 <__PRETTY_FUNCTION__.9640>
               :    99ff:	lea    0x1087f(%rip),%rsi        # 1a285 <__PRETTY_FUNCTION__.9424+0xf>
               :    9a06:	lea    0x108be(%rip),%rdi        # 1a2cb <__PRETTY_FUNCTION__.9424+0x55>
               :    9a0d:	mov    $0x2ec,%edx
               :    9a12:	callq  15970 <__GI___assert_fail>
               :    9a17:	mov    %r14,%r12
               :    9a1a:	mov    $0x1,%r9d
               :    9a20:	jmpq   971e <_dl_lookup_symbol_x+0x18e>
               :    9a25:	movq   $0x0,-0xd0(%rbp)
               :    9a30:	jmpq   965f <_dl_lookup_symbol_x+0xcf>
               :    9a35:	movl   $0x1,0x3cc(%rax)
               :    9a3f:	jmpq   9743 <_dl_lookup_symbol_x+0x1b3>
               :    9a44:	testb  $0x1,0x10(%rbp)
               :    9a48:	je     9735 <_dl_lookup_symbol_x+0x1a5>
               :    9a4e:	cmp    %r12,%r14
               :    9a51:	je     9f15 <_dl_lookup_symbol_x+0x985>
               :    9a57:	testb  $0x8,0x3d4(%r12)
               :    9a60:	jne    9735 <_dl_lookup_symbol_x+0x1a5>
               :    9a66:	mov    0x3c0(%r14),%r8
               :    9a6d:	mov    0x3b8(%r14),%rax
               :    9a74:	test   %rax,%rax
               :    9a77:	mov    %rax,-0xc0(%rbp)
               :    9a7e:	je     9ed9 <_dl_lookup_symbol_x+0x949>
               :    9a84:	mov    (%rax),%rax
               :    9a87:	test   %rax,%rax
               :    9a8a:	je     9ed9 <_dl_lookup_symbol_x+0x949>
               :    9a90:	cmp    %rax,%r12
               :    9a93:	je     a008 <_dl_lookup_symbol_x+0xa78>
               :    9a99:	xor    %eax,%eax
               :    9a9b:	mov    -0xc0(%rbp),%rsi
               :    9aa2:	add    $0x1,%eax
               :    9aa5:	mov    %eax,%edx
               :    9aa7:	mov    (%rsi,%rdx,8),%rdx
               :    9aab:	test   %rdx,%rdx
               :    9aae:	je     9ed9 <_dl_lookup_symbol_x+0x949>
               :    9ab4:	cmp    %r12,%rdx
               :    9ab7:	jne    9a9b <_dl_lookup_symbol_x+0x50b>
               :    9ab9:	jmpq   a008 <_dl_lookup_symbol_x+0xa78>
               :    9abe:	test   $0x4,%dl
               :    9ac1:	mov    0x8(%r14),%rsi
               :    9ac5:	je     9b62 <_dl_lookup_symbol_x+0x5d2>
               :    9acb:	mov    0x8(%rax),%rcx
               :    9acf:	lea    0x107e4(%rip),%rdi        # 1a2ba <__PRETTY_FUNCTION__.9424+0x44>
               :    9ad6:	lea    0x107e7(%rip),%rdx        # 1a2c4 <__PRETTY_FUNCTION__.9424+0x4e>
               :    9add:	test   %r9d,%r9d
               :    9ae0:	mov    0x30(%rax),%r8
               :    9ae4:	cmove  %rdx,%rdi
               :    9ae8:	cmpb   $0x0,(%rcx)
               :    9aeb:	jne    9b05 <_dl_lookup_symbol_x+0x575>
               :    9aed:	mov    0x2172ac(%rip),%rax        # 220da0 <_dl_argv>
               :    9af4:	lea    0x1014c(%rip),%rcx        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    9afb:	mov    (%rax),%rax
               :    9afe:	test   %rax,%rax
               :    9b01:	cmovne %rax,%rcx
               :    9b05:	cmpb   $0x0,(%rsi)
               :    9b08:	mov    0x30(%r14),%rdx
               :    9b0c:	jne    9b26 <_dl_lookup_symbol_x+0x596>
               :    9b0e:	mov    0x21728b(%rip),%rax        # 220da0 <_dl_argv>
               :    9b15:	lea    0x1012b(%rip),%rsi        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    9b1c:	mov    (%rax),%rax
               :    9b1f:	test   %rax,%rax
               :    9b22:	cmovne %rax,%rsi
               :    9b26:	mov    -0xa8(%rbp),%rax
               :    9b2d:	mov    %rdi,%r9
               :    9b30:	lea    0x12691(%rip),%rdi        # 1c1c8 <__PRETTY_FUNCTION__.9007+0x16f9>
               :    9b37:	mov    %rax,(%rsp)
               :    9b3b:	xor    %eax,%eax
               :    9b3d:	callq  f840 <_dl_debug_printf>
               :    9b42:	test   %rbx,%rbx
               :    9b45:	je     9e08 <_dl_lookup_symbol_x+0x878>
               :    9b4b:	mov    (%rbx),%rsi
               :    9b4e:	lea    0x107e2(%rip),%rdi        # 1a337 <__PRETTY_FUNCTION__.9424+0xc1>
               :    9b55:	xor    %eax,%eax
               :    9b57:	callq  f8a0 <_dl_debug_printf_c>
               :    9b5c:	mov    0x2170fe(%rip),%edx        # 220c60 <_rtld_global_ro>
               :    9b62:	and    $0x8,%dh
               :    9b65:	je     9dfc <_dl_lookup_symbol_x+0x86c>
               :    9b6b:	mov    0x21718e(%rip),%rdx        # 220d00 <_rtld_global_ro+0xa0>
               :    9b72:	movq   $0x0,-0x80(%rbp)
               :    9b7a:	movq   $0x0,-0x78(%rbp)
               :    9b82:	mov    0x217477(%rip),%rax        # 221000 <_rtld_global>
               :    9b89:	test   %rdx,%rdx
               :    9b8c:	je     9d19 <_dl_lookup_symbol_x+0x789>
               :    9b92:	cmp    %rax,%rdx
               :    9b95:	je     9d19 <_dl_lookup_symbol_x+0x789>
               :    9b9b:	mov    -0x90(%rbp),%rdx
               :    9ba2:	xor    %eax,%eax
               :    9ba4:	test   %rdx,%rdx
               :    9ba7:	je     9bc2 <_dl_lookup_symbol_x+0x632>
               :    9ba9:	movzbl 0x4(%rdx),%ecx
               :    9bad:	and    $0xf,%ecx
               :    9bb0:	cmp    $0x6,%cl
               :    9bb3:	je     9d0e <_dl_lookup_symbol_x+0x77e>
               :    9bb9:	cmp    $0xa,%cl
               :    9bbc:	jne    9bc2 <_dl_lookup_symbol_x+0x632>
               :    9bbe:	or     $0x8,%r15d
               :    9bc2:	test   %eax,%eax
               :    9bc4:	jne    9be1 <_dl_lookup_symbol_x+0x651>
               :    9bc6:	mov    0x217133(%rip),%rcx        # 220d00 <_rtld_global_ro+0xa0>
               :    9bcd:	cmp    %rcx,%r14
               :    9bd0:	je     9be1 <_dl_lookup_symbol_x+0x651>
               :    9bd2:	test   %rcx,%rcx
               :    9bd5:	je     9be1 <_dl_lookup_symbol_x+0x651>
               :    9bd7:	cmp    $0x3,%r15d
               :    9bdb:	jle    9cb4 <_dl_lookup_symbol_x+0x724>
               :    9be1:	test   %rdx,%rdx
               :    9be4:	je     9cc0 <_dl_lookup_symbol_x+0x730>
               :    9bea:	mov    0x8(%rdx),%rsi
               :    9bee:	mov    -0x88(%rbp),%rdx
               :    9bf5:	mov    0x340(%rdx),%rcx
               :    9bfc:	mov    0x340(%r14),%r8
               :    9c03:	mov    0x0(%r13),%rdx
               :    9c07:	sub    %r8,%rdx
               :    9c0a:	test   %eax,%eax
               :    9c0c:	je     9cc9 <_dl_lookup_symbol_x+0x739>
               :    9c12:	mov    %rsi,0x20(%rsp)
               :    9c17:	mov    %rdx,(%rsp)
               :    9c1b:	lea    0x125de(%rip),%rsi        # 1c200 <__PRETTY_FUNCTION__.9007+0x1731>
               :    9c22:	lea    0x10730(%rip),%rdx        # 1a359 <__PRETTY_FUNCTION__.9424+0xe3>
               :    9c29:	xor    %eax,%eax
               :    9c2b:	mov    %rcx,0x10(%rsp)
               :    9c30:	mov    $0x10,%r9d
               :    9c36:	mov    $0x10,%ecx
               :    9c3b:	movl   $0x10,0x18(%rsp)
               :    9c43:	movl   $0x10,0x8(%rsp)
               :    9c4b:	mov    $0x1,%edi
               :    9c50:	callq  f900 <_dl_dprintf>
               :    9c55:	mov    -0x80(%rbp),%rax
               :    9c59:	xor    %r9d,%r9d
               :    9c5c:	xor    %ecx,%ecx
               :    9c5e:	test   %rax,%rax
               :    9c61:	je     9c72 <_dl_lookup_symbol_x+0x6e2>
               :    9c63:	mov    0x8(%rax),%r9
               :    9c67:	mov    -0x78(%rbp),%rax
               :    9c6b:	mov    0x340(%rax),%rcx
               :    9c72:	lea    0x106c5(%rip),%rsi        # 1a33e <__PRETTY_FUNCTION__.9424+0xc8>
               :    9c79:	mov    $0x10,%r8d
               :    9c7f:	mov    $0x10,%edx
               :    9c84:	mov    $0x1,%edi
               :    9c89:	xor    %eax,%eax
               :    9c8b:	callq  f900 <_dl_dprintf>
               :    9c90:	mov    -0xa8(%rbp),%rcx
               :    9c97:	lea    0x106b3(%rip),%rsi        # 1a351 <__PRETTY_FUNCTION__.9424+0xdb>
               :    9c9e:	mov    %r15d,%edx
               :    9ca1:	mov    $0x1,%edi
               :    9ca6:	xor    %eax,%eax
               :    9ca8:	callq  f900 <_dl_dprintf>
               :    9cad:	mov    -0x90(%rbp),%rdx
               :    9cb4:	mov    -0x88(%rbp),%rax
               :    9cbb:	jmpq   975c <_dl_lookup_symbol_x+0x1cc>
               :    9cc0:	xor    %esi,%esi
               :    9cc2:	xor    %ecx,%ecx
               :    9cc4:	jmpq   9bfc <_dl_lookup_symbol_x+0x66c>
               :    9cc9:	mov    %rsi,0x20(%rsp)
               :    9cce:	mov    %rdx,(%rsp)
               :    9cd2:	lea    0x12527(%rip),%rsi        # 1c200 <__PRETTY_FUNCTION__.9007+0x1731>
               :    9cd9:	lea    0x10682(%rip),%rdx        # 1a362 <__PRETTY_FUNCTION__.9424+0xec>
               :    9ce0:	mov    %rcx,0x10(%rsp)
               :    9ce5:	movl   $0x10,0x18(%rsp)
               :    9ced:	movl   $0x10,0x8(%rsp)
               :    9cf5:	mov    $0x10,%r9d
               :    9cfb:	mov    $0x10,%ecx
               :    9d00:	mov    $0x1,%edi
               :    9d05:	xor    %eax,%eax
               :    9d07:	callq  f900 <_dl_dprintf>
               :    9d0c:	jmp    9c90 <_dl_lookup_symbol_x+0x700>
               :    9d0e:	mov    $0x4,%r15d
               :    9d14:	jmpq   9bc2 <_dl_lookup_symbol_x+0x632>
               :    9d19:	cmp    %rax,%r14
               :    9d1c:	je     9b9b <_dl_lookup_symbol_x+0x60b>
               :    9d22:	mov    -0xa8(%rbp),%rdx
               :    9d29:	mov    $0x1505,%r12d
               :    9d2f:	movzbl (%rdx),%eax
               :    9d32:	test   %al,%al
               :    9d34:	je     9d51 <_dl_lookup_symbol_x+0x7c1>
               :    9d36:	mov    %r12,%rcx
               :    9d39:	add    $0x1,%rdx
               :    9d3d:	shl    $0x5,%rcx
               :    9d41:	add    %rcx,%r12
               :    9d44:	add    %rax,%r12
               :    9d47:	movzbl (%rdx),%eax
               :    9d4a:	test   %al,%al
               :    9d4c:	jne    9d36 <_dl_lookup_symbol_x+0x7a6>
               :    9d4e:	mov    %r12d,%r12d
               :    9d51:	mov    $0xffffffff,%eax
               :    9d56:	mov    %r14,0x28(%rsp)
               :    9d5b:	mov    %r15d,0x20(%rsp)
               :    9d60:	mov    %rax,-0x98(%rbp)
               :    9d67:	mov    0x2172da(%rip),%rax        # 221048 <_rtld_global+0x48>
               :    9d6e:	lea    -0x80(%rbp),%r8
               :    9d72:	movq   $0x0,0x2172cb(%rip)        # 221048 <_rtld_global+0x48>
               :    9d7d:	movq   $0x0,0x18(%rsp)
               :    9d86:	mov    %r12,%rsi
               :    9d89:	movl   $0x0,0x10(%rsp)
               :    9d91:	mov    %rbx,0x8(%rsp)
               :    9d96:	mov    %rax,-0xb8(%rbp)
               :    9d9d:	movq   $0x0,(%rsp)
               :    9da5:	lea    -0x98(%rbp),%rax
               :    9dac:	mov    0x388(%r14),%r9
               :    9db3:	mov    0x0(%r13),%rcx
               :    9db7:	mov    -0xa8(%rbp),%rdi
               :    9dbe:	mov    %rax,%rdx
               :    9dc1:	mov    %rax,-0xc0(%rbp)
               :    9dc8:	callq  8c20 <do_lookup_x>
               :    9dcd:	mov    -0x80(%rbp),%rdx
               :    9dd1:	mov    -0x90(%rbp),%rax
               :    9dd8:	cmp    %rax,%rdx
               :    9ddb:	je     a058 <_dl_lookup_symbol_x+0xac8>
               :    9de1:	mov    %rax,%rdx
               :    9de4:	mov    $0x1,%eax
               :    9de9:	mov    -0xb8(%rbp),%rbx
               :    9df0:	mov    %rbx,0x217251(%rip)        # 221048 <_rtld_global+0x48>
               :    9df7:	jmpq   9ba4 <_dl_lookup_symbol_x+0x614>
               :    9dfc:	mov    -0x88(%rbp),%rax
               :    9e03:	jmpq   9755 <_dl_lookup_symbol_x+0x1c5>
               :    9e08:	lea    0x100aa(%rip),%rdi        # 19eb9 <__GI__itoa_lower_digits+0x319>
               :    9e0f:	xor    %eax,%eax
               :    9e11:	callq  f8a0 <_dl_debug_printf_c>
               :    9e16:	mov    0x216e44(%rip),%edx        # 220c60 <_rtld_global_ro>
               :    9e1c:	jmpq   9b62 <_dl_lookup_symbol_x+0x5d2>
               :    9e21:	mov    0x0(%r13),%rax
               :    9e25:	test   %rax,%rax
               :    9e28:	je     9e35 <_dl_lookup_symbol_x+0x8a5>
               :    9e2a:	movzbl 0x4(%rax),%eax
               :    9e2e:	shr    $0x4,%al
               :    9e31:	cmp    $0x2,%al
               :    9e33:	je     9e3c <_dl_lookup_symbol_x+0x8ac>
               :    9e35:	cmpq   $0x0,0x18(%rbp)
               :    9e3a:	je     9e4b <_dl_lookup_symbol_x+0x8bb>
               :    9e3c:	movq   $0x0,0x0(%r13)
               :    9e44:	xor    %eax,%eax
               :    9e46:	jmpq   9760 <_dl_lookup_symbol_x+0x1d0>
               :    9e4b:	testb  $0x1,0x216e0f(%rip)        # 220c61 <_rtld_global_ro+0x1>
               :    9e52:	jne    9e3c <_dl_lookup_symbol_x+0x8ac>
               :    9e54:	test   %r14,%r14
               :    9e57:	lea    0x1005c(%rip),%r12        # 19eba <__GI__itoa_lower_digits+0x31a>
               :    9e5e:	je     9e64 <_dl_lookup_symbol_x+0x8d4>
               :    9e60:	mov    0x8(%r14),%r12
               :    9e64:	test   %rbx,%rbx
               :    9e67:	je     a5a1 <_dl_lookup_symbol_x+0x1011>
               :    9e6d:	mov    (%rbx),%rax
               :    9e70:	lea    0x10043(%rip),%rcx        # 19eba <__GI__itoa_lower_digits+0x31a>
               :    9e77:	lea    0x10431(%rip),%rdx        # 1a2af <__PRETTY_FUNCTION__.9424+0x39>
               :    9e7e:	test   %rax,%rax
               :    9e81:	cmove  %rcx,%rax
               :    9e85:	lea    0x13104(%rip),%rbx        # 1cf90 <undefined_msg>
               :    9e8c:	mov    %rax,-0x58(%rbp)
               :    9e90:	mov    %rdx,-0x60(%rbp)
               :    9e94:	mov    $0x12,%eax
               :    9e99:	mov    $0x1,%r14d
               :    9e9f:	mov    %rbx,-0x70(%rbp)
               :    9ea3:	mov    -0xa8(%rbp),%rbx
               :    9eaa:	mov    %rbx,-0x68(%rbp)
               :    9eae:	xor    %ebx,%ebx
               :    9eb0:	add    $0x1,%rbx
               :    9eb4:	add    %rax,%r14
               :    9eb7:	cmp    $0x4,%rbx
               :    9ebb:	je     a567 <_dl_lookup_symbol_x+0xfd7>
               :    9ec1:	mov    -0x70(%rbp,%rbx,8),%rdi
               :    9ec6:	callq  17810 <strlen>
               :    9ecb:	jmp    9eb0 <_dl_lookup_symbol_x+0x920>
               :    9ecd:	mov    -0x88(%rbp),%r12
               :    9ed4:	jmpq   9a1a <_dl_lookup_symbol_x+0x48a>
               :    9ed9:	test   %r8,%r8
               :    9edc:	je     9f1d <_dl_lookup_symbol_x+0x98d>
               :    9ede:	mov    (%r8),%eax
               :    9ee1:	test   %eax,%eax
               :    9ee3:	mov    %eax,-0xb0(%rbp)
               :    9ee9:	je     9f27 <_dl_lookup_symbol_x+0x997>
               :    9eeb:	cmp    0x8(%r8),%r12
               :    9eef:	je     a008 <_dl_lookup_symbol_x+0xa78>
               :    9ef5:	lea    0x10(%r8),%rdx
               :    9ef9:	xor    %eax,%eax
               :    9efb:	add    $0x1,%eax
               :    9efe:	cmp    -0xb0(%rbp),%eax
               :    9f04:	je     9f27 <_dl_lookup_symbol_x+0x997>
               :    9f06:	add    $0x8,%rdx
               :    9f0a:	cmp    %r12,-0x8(%rdx)
               :    9f0e:	jne    9efb <_dl_lookup_symbol_x+0x96b>
               :    9f10:	jmpq   a008 <_dl_lookup_symbol_x+0xa78>
               :    9f15:	mov    %r14,%rax
               :    9f18:	jmpq   9735 <_dl_lookup_symbol_x+0x1a5>
               :    9f1d:	movl   $0x0,-0xb0(%rbp)
               :    9f27:	mov    0x468(%r12),%rax
               :    9f2f:	mov    %rax,-0xb8(%rbp)
               :    9f36:	mov    0x10(%rbp),%eax
               :    9f39:	and    $0x4,%eax
               :    9f3c:	mov    %eax,-0xd0(%rbp)
               :    9f42:	cltq   
               :    9f44:	test   %rax,%rax
               :    9f47:	mov    %rax,-0xd8(%rbp)
               :    9f4e:	jne    a083 <_dl_lookup_symbol_x+0xaf3>
               :    9f54:	mov    %r9d,-0xc0(%rbp)
               :    9f5b:	lea    0x2179a6(%rip),%rdi        # 221908 <_rtld_global+0x908>
               :    9f62:	callq  *0x217fa0(%rip)        # 221f08 <_rtld_global+0xf08>
               :    9f68:	mov    -0xc0(%rbp),%r9d
               :    9f6f:	mov    0x30(%r14),%rax
               :    9f73:	lea    0x217086(%rip),%rdx        # 221000 <_rtld_global>
               :    9f7a:	lea    (%rax,%rax,8),%rax
               :    9f7e:	shl    $0x4,%rax
               :    9f82:	mov    (%rdx,%rax,1),%rax
               :    9f86:	cmp    %r12,%rax
               :    9f89:	je     9f99 <_dl_lookup_symbol_x+0xa09>
               :    9f8b:	test   %rax,%rax
               :    9f8e:	je     9f99 <_dl_lookup_symbol_x+0xa09>
               :    9f90:	mov    0x18(%rax),%rax
               :    9f94:	cmp    %r12,%rax
               :    9f97:	jne    9f8b <_dl_lookup_symbol_x+0x9fb>
               :    9f99:	test   %rax,%rax
               :    9f9c:	mov    $0xffffffff,%edx
               :    9fa1:	je     9fc6 <_dl_lookup_symbol_x+0xa36>
               :    9fa3:	mov    0x468(%r12),%rax
               :    9fab:	cmp    %rax,-0xb8(%rbp)
               :    9fb2:	je     a133 <_dl_lookup_symbol_x+0xba3>
               :    9fb8:	xor    %edx,%edx
               :    9fba:	cmp    %rax,-0xb8(%rbp)
               :    9fc1:	setne  %dl
               :    9fc4:	neg    %edx
               :    9fc6:	mov    %r9d,-0xb8(%rbp)
               :    9fcd:	mov    %edx,-0xb0(%rbp)
               :    9fd3:	lea    0x21792e(%rip),%rdi        # 221908 <_rtld_global+0x908>
               :    9fda:	callq  *0x217f30(%rip)        # 221f10 <_rtld_global+0xf10>
               :    9fe0:	cmpq   $0x0,-0xd8(%rbp)
               :    9fe8:	mov    -0xb0(%rbp),%edx
               :    9fee:	mov    -0xb8(%rbp),%r9d
               :    9ff5:	je     a003 <_dl_lookup_symbol_x+0xa73>
               :    9ff7:	movl   $0x1,%fs:0x1c
               :    a003:	cmp    $0xffffffff,%edx
               :    a006:	je     a014 <_dl_lookup_symbol_x+0xa84>
               :    a008:	mov    -0x88(%rbp),%rax
               :    a00f:	jmpq   9735 <_dl_lookup_symbol_x+0x1a5>
               :    a014:	mov    -0xd0(%rbp),%esi
               :    a01a:	mov    -0xc8(%rbp),%rcx
               :    a021:	test   %esi,%esi
               :    a023:	je     a02c <_dl_lookup_symbol_x+0xa9c>
               :    a025:	mov    0x380(%r14),%rcx
               :    a02c:	mov    0x18(%rbp),%rax
               :    a030:	mov    -0xa8(%rbp),%rdi
               :    a037:	mov    %r15d,%r9d
               :    a03a:	mov    %rbx,%r8
               :    a03d:	mov    %r13,%rdx
               :    a040:	mov    %r14,%rsi
               :    a043:	mov    %rax,0x8(%rsp)
               :    a048:	mov    0x10(%rbp),%eax
               :    a04b:	mov    %eax,(%rsp)
               :    a04e:	callq  9590 <_dl_lookup_symbol_x>
               :    a053:	jmpq   9760 <_dl_lookup_symbol_x+0x1d0>
               :    a058:	mov    -0x78(%rbp),%rsi
               :    a05c:	cmp    -0x88(%rbp),%rsi
               :    a063:	mov    $0x1,%eax
               :    a068:	jne    9de9 <_dl_lookup_symbol_x+0x859>
               :    a06e:	cmpb   $0x0,0x315(%r14)
               :    a076:	js     a352 <_dl_lookup_symbol_x+0xdc2>
               :    a07c:	xor    %eax,%eax
               :    a07e:	jmpq   9de9 <_dl_lookup_symbol_x+0x859>
               :    a083:	xor    %eax,%eax
               :    a085:	xchg   %eax,%fs:0x1c
               :    a08d:	cmp    $0x2,%eax
               :    a090:	jne    a0ad <_dl_lookup_symbol_x+0xb1d>
               :    a092:	mov    %fs:0x10,%rdi
               :    a09b:	mov    $0x1,%edx
               :    a0a0:	add    $0x1c,%rdi
               :    a0a4:	mov    $0xca,%al
               :    a0a6:	mov    $0x81,%esi
               :    a0ab:	syscall 
               :    a0ad:	mov    %r8,-0xe8(%rbp)
               :    a0b4:	mov    %r9d,-0xe0(%rbp)
               :    a0bb:	lea    0x217846(%rip),%rdi        # 221908 <_rtld_global+0x908>
               :    a0c2:	callq  *0x217e40(%rip)        # 221f08 <_rtld_global+0xf08>
               :    a0c8:	mov    %r12,%rax
               :    a0cb:	mov    0x3b8(%r14),%rdx
               :    a0d2:	mov    -0xe0(%rbp),%r9d
               :    a0d9:	cmp    %rdx,-0xc0(%rbp)
               :    a0e0:	mov    %rax,%r12
               :    a0e3:	mov    -0xe8(%rbp),%r8
               :    a0ea:	je     a4a7 <_dl_lookup_symbol_x+0xf17>
               :    a0f0:	test   %rdx,%rdx
               :    a0f3:	je     a4a7 <_dl_lookup_symbol_x+0xf17>
               :    a0f9:	mov    (%rdx),%rcx
               :    a0fc:	test   %rcx,%rcx
               :    a0ff:	je     a4a7 <_dl_lookup_symbol_x+0xf17>
               :    a105:	cmp    %rcx,%rax
               :    a108:	je     a49b <_dl_lookup_symbol_x+0xf0b>
               :    a10e:	xor    %ecx,%ecx
               :    a110:	add    $0x1,%ecx
               :    a113:	mov    %ecx,%esi
               :    a115:	mov    (%rdx,%rsi,8),%rsi
               :    a119:	test   %rsi,%rsi
               :    a11c:	je     a4a7 <_dl_lookup_symbol_x+0xf17>
               :    a122:	cmp    %rsi,%rax
               :    a125:	jne    a110 <_dl_lookup_symbol_x+0xb80>
               :    a127:	mov    0x468(%rax),%rax
               :    a12e:	jmpq   9fb8 <_dl_lookup_symbol_x+0xa28>
               :    a133:	mov    0x3d4(%r12),%edx
               :    a13b:	test   $0x8,%dl
               :    a13e:	jne    a15a <_dl_lookup_symbol_x+0xbca>
               :    a140:	movzbl 0x314(%r14),%eax
               :    a148:	and    $0x3,%eax
               :    a14b:	cmp    $0x2,%al
               :    a14d:	je     a161 <_dl_lookup_symbol_x+0xbd1>
               :    a14f:	or     $0x8,%edx
               :    a152:	mov    %edx,0x3d4(%r12)
               :    a15a:	xor    %edx,%edx
               :    a15c:	jmpq   9fc6 <_dl_lookup_symbol_x+0xa36>
               :    a161:	testb  $0x8,0x3d4(%r14)
               :    a169:	jne    a14f <_dl_lookup_symbol_x+0xbbf>
               :    a16b:	mov    0x3c8(%r14),%eax
               :    a172:	cmp    -0xb0(%rbp),%eax
               :    a178:	jbe    a218 <_dl_lookup_symbol_x+0xc88>
               :    a17e:	mov    -0xb0(%rbp),%esi
               :    a184:	mov    0x3c0(%r14),%rax
               :    a18b:	mov    %esi,%edx
               :    a18d:	mov    %r12,0x8(%rax,%rdx,8)
               :    a192:	mov    0x3c0(%r14),%rdx
               :    a199:	mov    %esi,%eax
               :    a19b:	add    $0x1,%eax
               :    a19e:	mov    %eax,(%rdx)
               :    a1a0:	testb  $0x40,0x216ab9(%rip)        # 220c60 <_rtld_global_ro>
               :    a1a7:	je     a15a <_dl_lookup_symbol_x+0xbca>
               :    a1a9:	mov    0x8(%r14),%rcx
               :    a1ad:	mov    0x30(%r14),%r8
               :    a1b1:	cmpb   $0x0,(%rcx)
               :    a1b4:	jne    a1ce <_dl_lookup_symbol_x+0xc3e>
               :    a1b6:	mov    0x216be3(%rip),%rax        # 220da0 <_dl_argv>
               :    a1bd:	lea    0xfa83(%rip),%rcx        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    a1c4:	mov    (%rax),%rax
               :    a1c7:	test   %rax,%rax
               :    a1ca:	cmovne %rax,%rcx
               :    a1ce:	mov    0x8(%r12),%rsi
               :    a1d3:	mov    0x30(%r12),%rdx
               :    a1d8:	cmpb   $0x0,(%rsi)
               :    a1db:	jne    a1f5 <_dl_lookup_symbol_x+0xc65>
               :    a1dd:	mov    0x216bbc(%rip),%rax        # 220da0 <_dl_argv>
               :    a1e4:	lea    0xfa5c(%rip),%rsi        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    a1eb:	mov    (%rax),%rax
               :    a1ee:	test   %rax,%rax
               :    a1f1:	cmovne %rax,%rsi
               :    a1f5:	lea    0x11f8c(%rip),%rdi        # 1c188 <__PRETTY_FUNCTION__.9007+0x16b9>
               :    a1fc:	xor    %eax,%eax
               :    a1fe:	mov    %r9d,-0xb0(%rbp)
               :    a205:	callq  f840 <_dl_debug_printf>
               :    a20a:	xor    %edx,%edx
               :    a20c:	mov    -0xb0(%rbp),%r9d
               :    a213:	jmpq   9fc6 <_dl_lookup_symbol_x+0xa36>
               :    a218:	test   %eax,%eax
               :    a21a:	je     a33e <_dl_lookup_symbol_x+0xdae>
               :    a220:	add    %eax,%eax
               :    a222:	lea    0x8(,%rax,8),%rdi
               :    a22a:	mov    %eax,-0xb8(%rbp)
               :    a230:	mov    %fs:0x4c,%eax
               :    a238:	test   %eax,%eax
               :    a23a:	je     a269 <_dl_lookup_symbol_x+0xcd9>
               :    a23c:	mov    %r9d,-0xe0(%rbp)
               :    a243:	mov    %rdi,-0xc0(%rbp)
               :    a24a:	callq  147c0 <_dl_x86_64_save_sse>
               :    a24f:	movl   $0x0,%fs:0x4c
               :    a25b:	mov    -0xe0(%rbp),%r9d
               :    a262:	mov    -0xc0(%rbp),%rdi
               :    a269:	mov    %r9d,-0xc0(%rbp)
               :    a270:	callq  a90 <malloc@plt>
               :    a275:	test   %rax,%rax
               :    a278:	mov    %rax,%rcx
               :    a27b:	mov    -0xc0(%rbp),%r9d
               :    a282:	je     a32e <_dl_lookup_symbol_x+0xd9e>
               :    a288:	mov    -0xb0(%rbp),%edi
               :    a28e:	xor    %r8d,%r8d
               :    a291:	test   %edi,%edi
               :    a293:	je     a2e2 <_dl_lookup_symbol_x+0xd52>
               :    a295:	mov    -0xb0(%rbp),%r8d
               :    a29c:	lea    0x8(%rax),%rdi
               :    a2a0:	mov    %rax,-0xe0(%rbp)
               :    a2a7:	mov    0x3c0(%r14),%rax
               :    a2ae:	mov    %r9d,-0xe8(%rbp)
               :    a2b5:	lea    0x0(,%r8,8),%rdx
               :    a2bd:	lea    0x8(%rax),%rsi
               :    a2c1:	mov    %r8,-0xc0(%rbp)
               :    a2c8:	callq  18740 <memcpy>
               :    a2cd:	mov    -0xe8(%rbp),%r9d
               :    a2d4:	mov    -0xe0(%rbp),%rcx
               :    a2db:	mov    -0xc0(%rbp),%r8
               :    a2e2:	mov    -0xb0(%rbp),%eax
               :    a2e8:	mov    %r12,0x8(%rcx,%r8,8)
               :    a2ed:	add    $0x1,%eax
               :    a2f0:	mov    %eax,(%rcx)
               :    a2f2:	mov    0x3c0(%r14),%rdi
               :    a2f9:	mov    -0xb8(%rbp),%eax
               :    a2ff:	mov    %rcx,0x3c0(%r14)
               :    a306:	test   %rdi,%rdi
               :    a309:	mov    %eax,0x3c8(%r14)
               :    a310:	je     a1a0 <_dl_lookup_symbol_x+0xc10>
               :    a316:	mov    %r9d,-0xb0(%rbp)
               :    a31d:	callq  11d20 <_dl_scope_free>
               :    a322:	mov    -0xb0(%rbp),%r9d
               :    a329:	jmpq   a1a0 <_dl_lookup_symbol_x+0xc10>
               :    a32e:	orl    $0x8,0x3d4(%r12)
               :    a337:	xor    %edx,%edx
               :    a339:	jmpq   9fc6 <_dl_lookup_symbol_x+0xa36>
               :    a33e:	mov    $0x58,%edi
               :    a343:	movl   $0xa,-0xb8(%rbp)
               :    a34d:	jmpq   a230 <_dl_lookup_symbol_x+0xca0>
               :    a352:	test   %rdx,%rdx
               :    a355:	je     a07c <_dl_lookup_symbol_x+0xaec>
               :    a35b:	movzbl 0x4(%rdx),%eax
               :    a35f:	shr    $0x4,%al
               :    a362:	cmp    $0xa,%al
               :    a364:	jne    a07c <_dl_lookup_symbol_x+0xaec>
               :    a36a:	mov    0x388(%r14),%r10
               :    a371:	movq   $0x0,-0x70(%rbp)
               :    a379:	movq   $0x0,-0x68(%rbp)
               :    a381:	mov    0x8(%r10),%eax
               :    a385:	test   %rax,%rax
               :    a388:	je     a07c <_dl_lookup_symbol_x+0xaec>
               :    a38e:	mov    (%r10),%rcx
               :    a391:	cmp    (%rcx),%rsi
               :    a394:	je     a4fa <_dl_lookup_symbol_x+0xf6a>
               :    a39a:	xor    %edi,%edi
               :    a39c:	add    $0x1,%rdi
               :    a3a0:	cmp    %rax,%rdi
               :    a3a3:	jae    a3ab <_dl_lookup_symbol_x+0xe1b>
               :    a3a5:	cmp    (%rcx,%rdi,8),%rsi
               :    a3a9:	jne    a39c <_dl_lookup_symbol_x+0xe0c>
               :    a3ab:	lea    0x1(%rdi),%r11
               :    a3af:	cmp    %rax,%r11
               :    a3b2:	jae    a07c <_dl_lookup_symbol_x+0xaec>
               :    a3b8:	lea    0x0(,%r11,8),%rdx
               :    a3c0:	mov    %rdx,-0xb0(%rbp)
               :    a3c7:	lea    -0x70(%rbp),%rdx
               :    a3cb:	mov    %rdx,-0xc8(%rbp)
               :    a3d2:	mov    -0xb0(%rbp),%rdx
               :    a3d9:	mov    (%rcx,%rdx,1),%rdx
               :    a3dd:	cmpq   $0x0,0xc0(%rdx)
               :    a3e5:	je     a45f <_dl_lookup_symbol_x+0xecf>
               :    a3e7:	lea    0x2c8(%rdx),%r9
               :    a3ee:	mov    -0xc8(%rbp),%r8
               :    a3f5:	mov    0x0(%r13),%rcx
               :    a3f9:	mov    -0xc0(%rbp),%rdx
               :    a400:	mov    -0xa8(%rbp),%rdi
               :    a407:	mov    %r12,%rsi
               :    a40a:	mov    %r14,0x28(%rsp)
               :    a40f:	mov    %r15d,0x20(%rsp)
               :    a414:	movq   $0x0,0x18(%rsp)
               :    a41d:	movl   $0x0,0x10(%rsp)
               :    a425:	mov    %rbx,0x8(%rsp)
               :    a42a:	movq   $0x0,(%rsp)
               :    a432:	mov    %r10,-0xd8(%rbp)
               :    a439:	mov    %r11,-0xd0(%rbp)
               :    a440:	callq  8c20 <do_lookup_x>
               :    a445:	test   %eax,%eax
               :    a447:	jg     a505 <_dl_lookup_symbol_x+0xf75>
               :    a44d:	mov    -0xd8(%rbp),%r10
               :    a454:	mov    -0xd0(%rbp),%r11
               :    a45b:	mov    0x8(%r10),%eax
               :    a45f:	add    $0x1,%r11
               :    a463:	addq   $0x8,-0xb0(%rbp)
               :    a46b:	cmp    %rax,%r11
               :    a46e:	jae    a5b0 <_dl_lookup_symbol_x+0x1020>
               :    a474:	mov    (%r10),%rcx
               :    a477:	jmpq   a3d2 <_dl_lookup_symbol_x+0xe42>
               :    a47c:	lea    0x12aed(%rip),%rcx        # 1cf70 <__PRETTY_FUNCTION__.9640>
               :    a483:	lea    0xfdfb(%rip),%rsi        # 1a285 <__PRETTY_FUNCTION__.9424+0xf>
               :    a48a:	lea    0x11c97(%rip),%rdi        # 1c128 <__PRETTY_FUNCTION__.9007+0x1659>
               :    a491:	mov    $0x2d6,%edx
               :    a496:	callq  15970 <__GI___assert_fail>
               :    a49b:	mov    0x468(%rax),%rax
               :    a4a2:	jmpq   9fb8 <_dl_lookup_symbol_x+0xa28>
               :    a4a7:	mov    0x3c0(%r14),%rdx
               :    a4ae:	test   %rdx,%rdx
               :    a4b1:	je     9f6f <_dl_lookup_symbol_x+0x9df>
               :    a4b7:	cmp    %rdx,%r8
               :    a4ba:	je     a526 <_dl_lookup_symbol_x+0xf96>
               :    a4bc:	mov    (%rdx),%esi
               :    a4be:	test   %esi,%esi
               :    a4c0:	mov    %esi,-0xb0(%rbp)
               :    a4c6:	je     9f6f <_dl_lookup_symbol_x+0x9df>
               :    a4cc:	cmp    0x8(%rdx),%rax
               :    a4d0:	je     a127 <_dl_lookup_symbol_x+0xb97>
               :    a4d6:	add    $0x10,%rdx
               :    a4da:	xor    %ecx,%ecx
               :    a4dc:	add    $0x1,%ecx
               :    a4df:	cmp    -0xb0(%rbp),%ecx
               :    a4e5:	je     9f6f <_dl_lookup_symbol_x+0x9df>
               :    a4eb:	add    $0x8,%rdx
               :    a4ef:	cmp    -0x8(%rdx),%rax
               :    a4f3:	jne    a4dc <_dl_lookup_symbol_x+0xf4c>
               :    a4f5:	jmpq   a127 <_dl_lookup_symbol_x+0xb97>
               :    a4fa:	mov    $0x1,%r11d
               :    a500:	jmpq   a3af <_dl_lookup_symbol_x+0xe1f>
               :    a505:	mov    -0x70(%rbp),%rax
               :    a509:	mov    -0x68(%rbp),%rdx
               :    a50d:	mov    %rax,-0x80(%rbp)
               :    a511:	mov    %rdx,-0x78(%rbp)
               :    a515:	mov    $0x1,%eax
               :    a51a:	mov    -0x90(%rbp),%rdx
               :    a521:	jmpq   9de9 <_dl_lookup_symbol_x+0x859>
               :    a526:	mov    (%r8),%edx
               :    a529:	cmp    -0xb0(%rbp),%edx
               :    a52f:	jbe    9f6f <_dl_lookup_symbol_x+0x9df>
               :    a535:	mov    -0xb0(%rbp),%ecx
               :    a53b:	lea    0x8(%r8),%rsi
               :    a53f:	cmp    (%rsi,%rcx,8),%rax
               :    a543:	je     a127 <_dl_lookup_symbol_x+0xb97>
               :    a549:	mov    -0xb0(%rbp),%ecx
               :    a54f:	add    $0x1,%ecx
               :    a552:	cmp    %ecx,%edx
               :    a554:	jbe    a5f6 <_dl_lookup_symbol_x+0x1066>
               :    a55a:	mov    %ecx,%edi
               :    a55c:	cmp    (%rsi,%rdi,8),%rax
               :    a560:	jne    a54f <_dl_lookup_symbol_x+0xfbf>
               :    a562:	jmpq   a127 <_dl_lookup_symbol_x+0xb97>
               :    a567:	lea    0x1e(%r14),%rax
               :    a56b:	lea    0x12a1e(%rip),%rsi        # 1cf90 <undefined_msg>
               :    a572:	xor    %r14d,%r14d
               :    a575:	and    $0xfffffffffffffff0,%rax
               :    a579:	sub    %rax,%rsp
               :    a57c:	lea    0x3f(%rsp),%rbx
               :    a581:	and    $0xfffffffffffffff0,%rbx
               :    a585:	mov    %rbx,%rax
               :    a588:	mov    %rax,%rdi
               :    a58b:	add    $0x1,%r14
               :    a58f:	callq  18660 <__stpcpy>
               :    a594:	cmp    $0x4,%r14
               :    a598:	je     a5be <_dl_lookup_symbol_x+0x102e>
               :    a59a:	mov    -0x70(%rbp,%r14,8),%rsi
               :    a59f:	jmp    a588 <_dl_lookup_symbol_x+0xff8>
               :    a5a1:	lea    0xf912(%rip),%rdx        # 19eba <__GI__itoa_lower_digits+0x31a>
               :    a5a8:	mov    %rdx,%rax
               :    a5ab:	jmpq   9e85 <_dl_lookup_symbol_x+0x8f5>
               :    a5b0:	mov    -0x90(%rbp),%rdx
               :    a5b7:	xor    %eax,%eax
               :    a5b9:	jmpq   9de9 <_dl_lookup_symbol_x+0x859>
               :    a5be:	cmpb   $0x0,(%r12)
               :    a5c3:	mov    %r12,%rsi
               :    a5c6:	jne    a5e0 <_dl_lookup_symbol_x+0x1050>
               :    a5c8:	mov    0x2167d1(%rip),%rax        # 220da0 <_dl_argv>
               :    a5cf:	lea    0xf671(%rip),%rsi        # 19c47 <__GI__itoa_lower_digits+0xa7>
               :    a5d6:	mov    (%rax),%rax
               :    a5d9:	test   %rax,%rax
               :    a5dc:	cmovne %rax,%rsi
               :    a5e0:	lea    0xfd3c(%rip),%rdx        # 1a323 <__PRETTY_FUNCTION__.9424+0xad>
               :    a5e7:	mov    %rbx,%rcx
               :    a5ea:	xor    %edi,%edi
               :    a5ec:	callq  e6f0 <_dl_signal_cerror>
               :    a5f1:	jmpq   9e3c <_dl_lookup_symbol_x+0x8ac>
               :    a5f6:	mov    %edx,-0xb0(%rbp)
               :    a5fc:	jmpq   9f6f <_dl_lookup_symbol_x+0x9df>
               :    a601:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
               :
               :/lib64/ld-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000177e0 <strcmp>: /* strcmp total:      1 9.7e-04 */
               :   177e0:	mov    (%rdi),%al
               :   177e2:	cmp    (%rsi),%al
               :   177e4:	jne    177f3 <strcmp+0x13>
               :   177e6:	inc    %rdi
     1 9.7e-04 :   177e9:	inc    %rsi
               :   177ec:	test   %al,%al
               :   177ee:	jne    177e0 <strcmp>
               :   177f0:	xor    %eax,%eax
               :   177f2:	retq   
               :   177f3:	mov    $0x1,%eax
               :   177f8:	mov    $0xffffffff,%ecx
               :   177fd:	cmovb  %ecx,%eax
               :   17800:	retq   
               :   17801:	nopw   %cs:0x0(%rax,%rax,1)
               :   1780b:	nopl   0x0(%rax,%rax,1)
/* 
 * Command line: opannotate --assembly pi.3 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Ivy Bridge microarchitecture, speed 3600 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000084d40 <memset>: /* memset total:     92  0.0897 */
               :   84d40:	movd   %esi,%xmm8
               :   84d45:	mov    %rdi,%rax
               :   84d48:	punpcklbw %xmm8,%xmm8
               :   84d4d:	punpcklwd %xmm8,%xmm8
               :   84d52:	pshufd $0x0,%xmm8,%xmm8
               :   84d58:	cmp    $0x40,%rdx
               :   84d5c:	ja     84d90 <memset+0x50>
               :   84d5e:	cmp    $0x10,%rdx
               :   84d62:	jbe    84e55 <memset+0x115>
               :   84d68:	cmp    $0x20,%rdx
               :   84d6c:	movdqu %xmm8,(%rdi)
               :   84d71:	movdqu %xmm8,-0x10(%rdi,%rdx,1)
               :   84d78:	ja     84d80 <memset+0x40>
               :   84d7a:	repz retq 
               :   84d7c:	nopl   0x0(%rax)
               :   84d80:	movdqu %xmm8,0x10(%rdi)
               :   84d86:	movdqu %xmm8,-0x20(%rdi,%rdx,1)
               :   84d8d:	retq   
               :   84d8e:	xchg   %ax,%ax
               :   84d90:	lea    0x40(%rdi),%rcx
               :   84d94:	movdqu %xmm8,(%rdi)
               :   84d99:	and    $0xffffffffffffffc0,%rcx
               :   84d9d:	movdqu %xmm8,-0x10(%rdi,%rdx,1)
               :   84da4:	movdqu %xmm8,0x10(%rdi)
               :   84daa:	movdqu %xmm8,-0x20(%rdi,%rdx,1)
     1 9.7e-04 :   84db1:	movdqu %xmm8,0x20(%rdi)
               :   84db7:	movdqu %xmm8,-0x30(%rdi,%rdx,1)
               :   84dbe:	movdqu %xmm8,0x30(%rdi)
               :   84dc4:	movdqu %xmm8,-0x40(%rdi,%rdx,1)
               :   84dcb:	mov    0x31c3fe(%rip),%r9d        # 3a11d0 <__x86_shared_cache_size>
               :   84dd2:	cmp    %r9,%rdx
               :   84dd5:	ja     84e12 <memset+0xd2>
               :   84dd7:	add    %rdi,%rdx
               :   84dda:	and    $0xffffffffffffffc0,%rdx
               :   84dde:	cmp    %rdx,%rcx
               :   84de1:	je     84d7a <memset+0x3a>
               :   84de3:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
     1 9.7e-04 :   84df0:	movdqa %xmm8,(%rcx)
    39  0.0380 :   84df5:	movdqa %xmm8,0x10(%rcx)
    28  0.0273 :   84dfb:	movdqa %xmm8,0x20(%rcx)
     8  0.0078 :   84e01:	movdqa %xmm8,0x30(%rcx)
    15  0.0146 :   84e07:	add    $0x40,%rcx
               :   84e0b:	cmp    %rcx,%rdx
               :   84e0e:	jne    84df0 <memset+0xb0>
               :   84e10:	repz retq 
               :   84e12:	add    %rdi,%rdx
               :   84e15:	and    $0xffffffffffffffc0,%rdx
               :   84e19:	cmp    %rdx,%rcx
               :   84e1c:	je     84d7a <memset+0x3a>
               :   84e22:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
               :   84e30:	movntdq %xmm8,(%rcx)
               :   84e35:	movntdq %xmm8,0x10(%rcx)
               :   84e3b:	movntdq %xmm8,0x20(%rcx)
               :   84e41:	movntdq %xmm8,0x30(%rcx)
               :   84e47:	add    $0x40,%rcx
               :   84e4b:	cmp    %rcx,%rdx
               :   84e4e:	jne    84e30 <memset+0xf0>
               :   84e50:	sfence 
               :   84e53:	repz retq 
               :   84e55:	movq   %xmm8,%rcx
               :   84e5a:	test   $0x18,%dl
               :   84e5d:	jne    84e81 <memset+0x141>
               :   84e5f:	test   $0x4,%dl
               :   84e62:	jne    84e7a <memset+0x13a>
               :   84e64:	test   $0x1,%dl
               :   84e67:	je     84e6b <memset+0x12b>
               :   84e69:	mov    %cl,(%rdi)
               :   84e6b:	test   $0x2,%dl
               :   84e6e:	je     84d7a <memset+0x3a>
               :   84e74:	mov    %cx,-0x2(%rax,%rdx,1)
               :   84e79:	retq   
               :   84e7a:	mov    %ecx,(%rdi)
               :   84e7c:	mov    %ecx,-0x4(%rdi,%rdx,1)
               :   84e80:	retq   
               :   84e81:	mov    %rcx,(%rdi)
               :   84e84:	mov    %rcx,-0x8(%rdi,%rdx,1)
               :   84e89:	retq   
               :   84e8a:	nopw   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000046290 <_IO_vfprintf>: /* vfprintf total:     15  0.0146 */
               :   46290:	push   %rbp
               :   46291:	mov    %rsp,%rbp
               :   46294:	push   %r15
               :   46296:	mov    %rdx,%r15
               :   46299:	push   %r14
     1 9.7e-04 :   4629b:	mov    %rsi,%r14
               :   4629e:	push   %r13
               :   462a0:	push   %r12
               :   462a2:	push   %rbx
               :   462a3:	mov    %rdi,%rbx
               :   462a6:	sub    $0x588,%rsp
               :   462ad:	mov    0x35aba4(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
     1 9.7e-04 :   462b4:	mov    %fs:(%rax),%eax
               :   462b7:	mov    %eax,-0x4b0(%rbp)
               :   462bd:	mov    0xc0(%rdi),%eax
               :   462c3:	test   %eax,%eax
               :   462c5:	jne    463b0 <_IO_vfprintf+0x120>
               :   462cb:	movl   $0xffffffff,0xc0(%rdi)
               :   462d5:	mov    (%rbx),%r12d
               :   462d8:	test   $0x8,%r12b
               :   462dc:	jne    46690 <_IO_vfprintf+0x400>
               :   462e2:	test   %r14,%r14
               :   462e5:	je     466af <_IO_vfprintf+0x41f>
               :   462eb:	test   $0x2,%r12b
               :   462ef:	jne    46440 <_IO_vfprintf+0x1b0>
               :   462f5:	mov    (%r15),%rax
               :   462f8:	mov    $0x25,%esi
               :   462fd:	mov    %r14,%rdi
               :   46300:	mov    %rax,-0x458(%rbp)
               :   46307:	mov    0x8(%r15),%rax
               :   4630b:	mov    %rax,-0x450(%rbp)
               :   46312:	mov    0x10(%r15),%rax
               :   46316:	mov    %rax,-0x448(%rbp)
               :   4631d:	callq  8bec0 <strchrnul>
               :   46322:	and    $0x8000,%r12d
               :   46329:	mov    %rax,-0x4b8(%rbp)
               :   46330:	mov    %rax,-0x4a0(%rbp)
               :   46337:	movl   $0x0,-0x4ac(%rbp)
               :   46341:	je     463c0 <_IO_vfprintf+0x130>
               :   46343:	mov    -0x4b8(%rbp),%r12
               :   4634a:	mov    0xd8(%rbx),%rax
               :   46351:	mov    %r14,%rsi
               :   46354:	mov    %rbx,%rdi
               :   46357:	sub    %r14,%r12
               :   4635a:	mov    %r12,%rdx
               :   4635d:	callq  *0x38(%rax)
               :   46360:	cmp    %rax,%r12
               :   46363:	movl   $0xffffffff,-0x4a8(%rbp)
               :   4636d:	je     46500 <_IO_vfprintf+0x270>
               :   46373:	testl  $0x8000,(%rbx)
               :   46379:	jne    4638c <_IO_vfprintf+0xfc>
               :   4637b:	mov    0x88(%rbx),%rdx
               :   46382:	subl   $0x1,0x4(%rdx)
               :   46386:	je     46460 <_IO_vfprintf+0x1d0>
               :   4638c:	mov    -0x4ac(%rbp),%eax
               :   46392:	test   %eax,%eax
               :   46394:	jne    46492 <_IO_vfprintf+0x202>
               :   4639a:	mov    -0x4a8(%rbp),%eax
               :   463a0:	lea    -0x28(%rbp),%rsp
               :   463a4:	pop    %rbx
               :   463a5:	pop    %r12
               :   463a7:	pop    %r13
               :   463a9:	pop    %r14
               :   463ab:	pop    %r15
     1 9.7e-04 :   463ad:	pop    %rbp
               :   463ae:	retq   
               :   463af:	nop
     1 9.7e-04 :   463b0:	cmp    $0xffffffff,%eax
               :   463b3:	je     462d5 <_IO_vfprintf+0x45>
               :   463b9:	mov    $0xffffffff,%eax
               :   463be:	jmp    463a0 <_IO_vfprintf+0x110>
               :   463c0:	mov    0x36040a(%rip),%eax        # 3a67d0 <__libc_pthread_functions_init>
               :   463c6:	test   %eax,%eax
               :   463c8:	mov    %eax,-0x4ac(%rbp)
               :   463ce:	jne    464c0 <_IO_vfprintf+0x230>
               :   463d4:	mov    0x35ab75(%rip),%rax        # 3a0f50 <_DYNAMIC+0x3d0>
               :   463db:	mov    %rbx,-0x438(%rbp)
               :   463e2:	mov    %rax,-0x440(%rbp)
               :   463e9:	mov    0x88(%rbx),%rdx
               :   463f0:	mov    %fs:0x10,%r9
               :   463f9:	cmp    0x8(%rdx),%r9
               :   463fd:	je     46436 <_IO_vfprintf+0x1a6>
               :   463ff:	mov    $0x1,%esi
               :   46404:	xor    %eax,%eax
               :   46406:	cmpl   $0x0,0x3603c7(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   4640d:	je     4641b <_IO_vfprintf+0x18b>
               :   4640f:	lock cmpxchg %esi,(%rdx)
               :   46413:	jne    4b520 <_L_lock_976>
               :   46419:	jmp    46424 <_IO_vfprintf+0x194>
               :   4641b:	cmpxchg %esi,(%rdx)
               :   4641e:	jne    4b520 <_L_lock_976>
               :   46424:	mov    0x88(%rbx),%rax
               :   4642b:	mov    0x88(%rbx),%rdx
               :   46432:	mov    %r9,0x8(%rax)
               :   46436:	addl   $0x1,0x4(%rdx)
               :   4643a:	jmpq   46343 <_IO_vfprintf+0xb3>
               :   4643f:	nop
               :   46440:	mov    %r15,%rdx
               :   46443:	mov    %r14,%rsi
               :   46446:	mov    %rbx,%rdi
               :   46449:	callq  4b330 <buffered_vfprintf>
               :   4644e:	lea    -0x28(%rbp),%rsp
               :   46452:	pop    %rbx
               :   46453:	pop    %r12
               :   46455:	pop    %r13
               :   46457:	pop    %r14
               :   46459:	pop    %r15
               :   4645b:	pop    %rbp
               :   4645c:	retq   
               :   4645d:	nopl   (%rax)
               :   46460:	movq   $0x0,0x8(%rdx)
               :   46468:	cmpl   $0x0,0x360365(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   4646f:	je     4647c <_IO_vfprintf+0x1ec>
               :   46471:	lock decl (%rdx)
               :   46474:	jne    4b53b <_L_unlock_1051>
               :   4647a:	jmp    46484 <_IO_vfprintf+0x1f4>
               :   4647c:	decl   (%rdx)
               :   4647e:	jne    4b53b <_L_unlock_1051>
               :   46484:	mov    -0x4ac(%rbp),%eax
               :   4648a:	test   %eax,%eax
               :   4648c:	je     4639a <_IO_vfprintf+0x10a>
               :   46492:	mov    0x3602ff(%rip),%rax        # 3a6798 <__libc_pthread_functions+0x178>
               :   46499:	lea    -0x440(%rbp),%rdi
               :   464a0:	xor    %esi,%esi
               :   464a2:	ror    $0x11,%rax
               :   464a6:	xor    %fs:0x30,%rax
               :   464af:	callq  *%rax
               :   464b1:	jmpq   4639a <_IO_vfprintf+0x10a>
               :   464b6:	nopw   %cs:0x0(%rax,%rax,1)
               :   464c0:	mov    0x3602c9(%rip),%rax        # 3a6790 <__libc_pthread_functions+0x170>
               :   464c7:	lea    -0x440(%rbp),%rdi
               :   464ce:	mov    %rbx,%rdx
               :   464d1:	ror    $0x11,%rax
               :   464d5:	xor    %fs:0x30,%rax
               :   464de:	mov    0x35aa6b(%rip),%rsi        # 3a0f50 <_DYNAMIC+0x3d0>
               :   464e5:	callq  *%rax
               :   464e7:	testl  $0x8000,(%rbx)
               :   464ed:	je     463e9 <_IO_vfprintf+0x159>
               :   464f3:	jmpq   46343 <_IO_vfprintf+0xb3>
               :   464f8:	nopl   0x0(%rax,%rax,1)
               :   46500:	cmp    $0x7fffffff,%r12
               :   46507:	jg     466c7 <_IO_vfprintf+0x437>
               :   4650d:	mov    -0x4a0(%rbp),%rax
               :   46514:	mov    %r12d,-0x4a8(%rbp)
               :   4651b:	cmpb   $0x0,(%rax)
               :   4651e:	je     46373 <_IO_vfprintf+0xe3>
               :   46524:	cmpq   $0x0,0x35fffc(%rip)        # 3a6528 <__printf_function_table>
               :   4652c:	jne    480f0 <_IO_vfprintf+0x1e60>
               :   46532:	cmpq   $0x0,0x35fff6(%rip)        # 3a6530 <__printf_modifier_table>
               :   4653a:	jne    480f0 <_IO_vfprintf+0x1e60>
               :   46540:	cmpq   $0x0,0x35c210(%rip)        # 3a2758 <__printf_va_arg_table>
               :   46548:	jne    480f0 <_IO_vfprintf+0x1e60>
               :   4654e:	lea    0x3f5d(%rip),%r12        # 4a4b2 <_IO_vfprintf+0x4222>
               :   46555:	movq   $0x0,-0x4f0(%rbp)
               :   46560:	movl   $0x0,-0x4e8(%rbp)
               :   4656a:	movl   $0x0,-0x4e4(%rbp)
     1 9.7e-04 :   46574:	movq   $0xffffffffffffffff,-0x4e0(%rbp)
               :   4657f:	movq   $0x0,-0x4f8(%rbp)
               :   4658a:	lea    0x1(%rax),%rdx
               :   4658e:	mov    %rdx,-0x4a0(%rbp)
               :   46595:	movzbl 0x1(%rax),%eax
               :   46599:	lea    -0x20(%rax),%edx
               :   4659c:	mov    %al,-0x4c8(%rbp)
               :   465a2:	mov    %r12,%rax
               :   465a5:	cmp    $0x5a,%dl
               :   465a8:	jbe    46660 <_IO_vfprintf+0x3d0>
               :   465ae:	lea    -0x38(%rbp),%r13
               :   465b2:	movq   $0x0,-0x4c0(%rbp)
               :   465bd:	movl   $0x0,-0x528(%rbp)
               :   465c7:	movl   $0x0,-0x518(%rbp)
               :   465d1:	movl   $0x0,-0x514(%rbp)
               :   465db:	movl   $0x0,-0x520(%rbp)
               :   465e5:	movl   $0x0,-0x548(%rbp)
               :   465ef:	movl   $0x0,-0x53c(%rbp)
               :   465f9:	movl   $0x0,-0x538(%rbp)
               :   46603:	movl   $0x0,-0x510(%rbp)
               :   4660d:	movl   $0x0,-0x540(%rbp)
               :   46617:	movl   $0x0,-0x500(%rbp)
               :   46621:	movl   $0xffffffff,-0x508(%rbp)
               :   4662b:	movl   $0x0,-0x54c(%rbp)
               :   46635:	movb   $0x20,-0x521(%rbp)
               :   4663c:	lea    -0x4a0(%rbp),%rcx
               :   46643:	mov    %rcx,-0x578(%rbp)
               :   4664a:	lea    -0x470(%rbp),%rcx
               :   46651:	mov    %rcx,-0x5a0(%rbp)
               :   46658:	jmpq   *%rax
               :   4665a:	nopw   0x0(%rax,%rax,1)
               :   46660:	movsbl -0x4c8(%rbp),%eax
               :   46667:	lea    0x113d72(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4666e:	sub    $0x20,%eax
               :   46671:	cltq   
               :   46673:	movzbl (%rdx,%rax,1),%edx
               :   46677:	lea    0x113ce2(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   4667e:	movslq (%rax,%rdx,4),%rax
               :   46682:	add    %r12,%rax
               :   46685:	jmpq   465ae <_IO_vfprintf+0x31e>
               :   4668a:	nopw   0x0(%rax,%rax,1)
               :   46690:	mov    0x35a7c1(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   46697:	or     $0x20,%r12d
               :   4669b:	mov    %r12d,(%rbx)
               :   4669e:	movl   $0x9,%fs:(%rax)
               :   466a5:	mov    $0xffffffff,%eax
               :   466aa:	jmpq   463a0 <_IO_vfprintf+0x110>
               :   466af:	mov    0x35a7a2(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   466b6:	movl   $0x16,%fs:(%rax)
               :   466bd:	mov    $0xffffffff,%eax
               :   466c2:	jmpq   463a0 <_IO_vfprintf+0x110>
               :   466c7:	mov    0x35a78a(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   466ce:	movl   $0x4b,%fs:(%rax)
               :   466d5:	jmpq   46373 <_IO_vfprintf+0xe3>
               :   466da:	mov    0x35a6cf(%rip),%rax        # 3a0db0 <_DYNAMIC+0x230>
               :   466e1:	mov    %rsp,-0x560(%rbp)
               :   466e8:	mov    %fs:(%rax),%rax
               :   466ec:	mov    (%rax),%rax
               :   466ef:	mov    0xa8(%rax),%eax
               :   466f5:	movq   $0x0,-0x470(%rbp)
               :   46700:	add    $0xf,%rax
               :   46704:	shr    $0x4,%rax
               :   46708:	shl    $0x4,%rax
               :   4670c:	sub    %rax,%rsp
               :   4670f:	movslq -0x4e4(%rbp),%rax
               :   46716:	mov    %rsp,-0x568(%rbp)
               :   4671d:	imul   $0x48,%rax,%rax
               :   46721:	add    -0x4d0(%rbp),%rax
               :   46728:	je     46f6f <_IO_vfprintf+0xcdf>
               :   4672e:	movslq 0x30(%rax),%rax
               :   46732:	mov    -0x4d8(%rbp),%rcx
               :   46739:	shl    $0x4,%rax
               :   4673d:	mov    (%rcx,%rax,1),%esi
               :   46740:	mov    -0x568(%rbp),%rdi
               :   46747:	lea    -0x470(%rbp),%rdx
               :   4674e:	callq  9bd90 <c32rtomb>
               :   46753:	cmp    $0xffffffffffffffff,%rax
               :   46757:	mov    %rax,%r13
               :   4675a:	je     467f4 <_IO_vfprintf+0x564>
               :   46760:	mov    -0x558(%rbp),%r12d
               :   46767:	sub    %eax,%r12d
               :   4676a:	cmpl   $0x0,-0x584(%rbp)
               :   46771:	jne    467c7 <_IO_vfprintf+0x537>
               :   46773:	test   %r12d,%r12d
               :   46776:	jle    467c7 <_IO_vfprintf+0x537>
               :   46778:	movslq %r12d,%rcx
               :   4677b:	mov    $0x20,%esi
               :   46780:	mov    %rbx,%rdi
               :   46783:	mov    %rcx,%rdx
               :   46786:	mov    %rcx,-0x558(%rbp)
               :   4678d:	callq  6a910 <_IO_padn>
               :   46792:	mov    -0x558(%rbp),%rcx
               :   46799:	cmp    %rax,%rcx
               :   4679c:	jne    467f4 <_IO_vfprintf+0x564>
               :   4679e:	mov    -0x4a8(%rbp),%ecx
               :   467a4:	cmp    $0x7ffffffe,%ecx
               :   467aa:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   467b0:	mov    $0x7fffffff,%eax
               :   467b5:	add    %r12d,-0x4a8(%rbp)
               :   467bc:	sub    %ecx,%eax
               :   467be:	cmp    %eax,%r12d
               :   467c1:	ja     4903e <_IO_vfprintf+0x2dae>
               :   467c7:	cmpl   $0x0,-0x4a8(%rbp)
               :   467ce:	js     47c99 <_IO_vfprintf+0x1a09>
               :   467d4:	mov    0xd8(%rbx),%rax
               :   467db:	mov    %r13,%rdx
               :   467de:	mov    -0x568(%rbp),%rsi
               :   467e5:	mov    %rbx,%rdi
               :   467e8:	callq  *0x38(%rax)
               :   467eb:	cmp    %rax,%r13
               :   467ee:	je     47c15 <_IO_vfprintf+0x1985>
               :   467f4:	mov    -0x560(%rbp),%rsp
               :   467fb:	movl   $0xffffffff,-0x4a8(%rbp)
               :   46805:	cmpq   $0x0,-0x4f0(%rbp)
               :   4680d:	jne    4682e <_IO_vfprintf+0x59e>
               :   4680f:	cmpq   $0x0,-0x4c0(%rbp)
               :   46817:	je     46373 <_IO_vfprintf+0xe3>
               :   4681d:	mov    -0x4c0(%rbp),%rdi
               :   46824:	callq  1f460 <*ABS*+0x87820@plt>
               :   46829:	jmpq   46373 <_IO_vfprintf+0xe3>
               :   4682e:	mov    -0x4f0(%rbp),%rdi
               :   46835:	callq  1f460 <*ABS*+0x87820@plt>
               :   4683a:	jmp    4680f <_IO_vfprintf+0x57f>
               :   4683c:	mov    0x35a56d(%rip),%rax        # 3a0db0 <_DYNAMIC+0x230>
               :   46843:	mov    (%r15),%edx
               :   46846:	mov    %rsp,-0x4c8(%rbp)
               :   4684d:	mov    %fs:(%rax),%rax
               :   46851:	mov    (%rax),%rax
               :   46854:	mov    0xa8(%rax),%eax
               :   4685a:	movq   $0x0,-0x470(%rbp)
               :   46865:	add    $0xf,%rax
               :   46869:	shr    $0x4,%rax
               :   4686d:	shl    $0x4,%rax
               :   46871:	sub    %rax,%rsp
               :   46874:	cmp    $0x30,%edx
               :   46877:	mov    %rsp,-0x508(%rbp)
               :   4687e:	jae    46dd2 <_IO_vfprintf+0xb42>
               :   46884:	mov    %edx,%eax
               :   46886:	add    0x10(%r15),%rax
               :   4688a:	add    $0x8,%edx
               :   4688d:	mov    %edx,(%r15)
               :   46890:	mov    (%rax),%esi
               :   46892:	mov    -0x508(%rbp),%rdi
               :   46899:	lea    -0x470(%rbp),%rdx
               :   468a0:	callq  9bd90 <c32rtomb>
               :   468a5:	cmp    $0xffffffffffffffff,%rax
               :   468a9:	mov    %rax,%rcx
               :   468ac:	je     4695e <_IO_vfprintf+0x6ce>
               :   468b2:	mov    -0x500(%rbp),%r13d
               :   468b9:	sub    %eax,%r13d
               :   468bc:	cmpl   $0x0,-0x514(%rbp)
               :   468c3:	jne    46927 <_IO_vfprintf+0x697>
               :   468c5:	test   %r13d,%r13d
               :   468c8:	jle    46927 <_IO_vfprintf+0x697>
               :   468ca:	movslq %r13d,%r8
               :   468cd:	mov    $0x20,%esi
               :   468d2:	mov    %rbx,%rdi
               :   468d5:	mov    %r8,%rdx
               :   468d8:	mov    %r8,-0x500(%rbp)
               :   468df:	mov    %rax,-0x510(%rbp)
               :   468e6:	callq  6a910 <_IO_padn>
               :   468eb:	mov    -0x500(%rbp),%r8
               :   468f2:	cmp    %rax,%r8
               :   468f5:	jne    4695e <_IO_vfprintf+0x6ce>
               :   468f7:	mov    -0x4a8(%rbp),%ecx
               :   468fd:	cmp    $0x7ffffffe,%ecx
               :   46903:	ja     46f29 <_IO_vfprintf+0xc99>
               :   46909:	mov    $0x7fffffff,%eax
               :   4690e:	add    %r13d,-0x4a8(%rbp)
               :   46915:	sub    %ecx,%eax
               :   46917:	mov    -0x510(%rbp),%rcx
               :   4691e:	cmp    %eax,%r13d
               :   46921:	ja     46f16 <_IO_vfprintf+0xc86>
               :   46927:	cmpl   $0x0,-0x4a8(%rbp)
               :   4692e:	js     46ac4 <_IO_vfprintf+0x834>
               :   46934:	mov    0xd8(%rbx),%rax
               :   4693b:	mov    %rcx,%rdx
               :   4693e:	mov    %rcx,-0x500(%rbp)
               :   46945:	mov    -0x508(%rbp),%rsi
               :   4694c:	mov    %rbx,%rdi
               :   4694f:	callq  *0x38(%rax)
               :   46952:	mov    -0x500(%rbp),%rcx
               :   46959:	cmp    %rax,%rcx
               :   4695c:	je     4696a <_IO_vfprintf+0x6da>
               :   4695e:	mov    -0x4c8(%rbp),%rsp
               :   46965:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4696a:	mov    $0x7fffffff,%r11d
               :   46970:	mov    %r11d,%eax
               :   46973:	sub    -0x4a8(%rbp),%eax
               :   46979:	cltq   
               :   4697b:	cmp    %rax,%rcx
               :   4697e:	ja     46f16 <_IO_vfprintf+0xc86>
               :   46984:	mov    -0x4a8(%rbp),%r10d
               :   4698b:	mov    %r11d,-0x508(%rbp)
               :   46992:	add    %ecx,%r10d
               :   46995:	cmpl   $0x0,-0x514(%rbp)
               :   4699c:	mov    %r10d,%ecx
               :   4699f:	mov    %r10d,-0x500(%rbp)
               :   469a6:	je     469fe <_IO_vfprintf+0x76e>
               :   469a8:	test   %r13d,%r13d
               :   469ab:	jle    469fe <_IO_vfprintf+0x76e>
               :   469ad:	movslq %r13d,%rcx
               :   469b0:	mov    $0x20,%esi
               :   469b5:	mov    %rbx,%rdi
               :   469b8:	mov    %rcx,%rdx
               :   469bb:	mov    %rcx,-0x4a8(%rbp)
               :   469c2:	callq  6a910 <_IO_padn>
               :   469c7:	mov    -0x4a8(%rbp),%rcx
               :   469ce:	cmp    %rax,%rcx
               :   469d1:	jne    4695e <_IO_vfprintf+0x6ce>
               :   469d3:	mov    -0x500(%rbp),%r10d
               :   469da:	cmp    $0x7ffffffe,%r10d
               :   469e1:	ja     46f29 <_IO_vfprintf+0xc99>
               :   469e7:	mov    -0x508(%rbp),%r11d
               :   469ee:	lea    (%r10,%r13,1),%ecx
               :   469f2:	sub    %r10d,%r11d
               :   469f5:	cmp    %r11d,%r13d
               :   469f8:	ja     46f16 <_IO_vfprintf+0xc86>
               :   469fe:	mov    -0x4c8(%rbp),%rsp
               :   46a05:	cmpq   $0x0,-0x4c0(%rbp)
               :   46a0d:	jne    46db5 <_IO_vfprintf+0xb25>
               :   46a13:	mov    -0x4a0(%rbp),%rax
               :   46a1a:	mov    $0x25,%esi
               :   46a1f:	mov    %ecx,-0x4a8(%rbp)
               :   46a25:	lea    0x1(%rax),%r13
               :   46a29:	mov    %r13,%rdi
               :   46a2c:	mov    %r13,-0x4a0(%rbp)
               :   46a33:	callq  8bec0 <strchrnul>
               :   46a38:	mov    -0x4a8(%rbp),%ecx
               :   46a3e:	mov    %rax,-0x4a0(%rbp)
               :   46a45:	test   %ecx,%ecx
               :   46a47:	js     46d96 <_IO_vfprintf+0xb06>
               :   46a4d:	mov    0xd8(%rbx),%r9
               :   46a54:	sub    %r13,%rax
               :   46a57:	mov    %ecx,-0x4a8(%rbp)
               :   46a5d:	mov    %rax,%rdx
               :   46a60:	mov    %r13,%rsi
               :   46a63:	mov    %rbx,%rdi
               :   46a66:	callq  *0x38(%r9)
               :   46a6a:	mov    -0x4a0(%rbp),%rdx
               :   46a71:	movq   $0x0,-0x4c0(%rbp)
               :   46a7c:	mov    -0x4a8(%rbp),%ecx
               :   46a82:	mov    %rdx,%rsi
               :   46a85:	sub    %r13,%rsi
               :   46a88:	cmp    %rsi,%rax
               :   46a8b:	jne    467fb <_IO_vfprintf+0x56b>
     1 9.7e-04 :   46a91:	mov    $0x7fffffff,%esi
               :   46a96:	sub    %ecx,%esi
               :   46a98:	movslq %esi,%rsi
               :   46a9b:	cmp    %rsi,%rax
               :   46a9e:	jg     46d83 <_IO_vfprintf+0xaf3>
               :   46aa4:	add    %ecx,%eax
               :   46aa6:	cmpb   $0x0,(%rdx)
               :   46aa9:	mov    %eax,-0x4a8(%rbp)
               :   46aaf:	je     46805 <_IO_vfprintf+0x575>
               :   46ab5:	addl   $0x1,-0x4e4(%rbp)
               :   46abc:	mov    %rdx,%rax
               :   46abf:	jmpq   4658a <_IO_vfprintf+0x2fa>
               :   46ac4:	lea    0x121815(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   46acb:	lea    0x1193a6(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   46ad2:	lea    0x11d637(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   46ad9:	mov    $0x663,%edx
               :   46ade:	callq  2e190 <__assert_fail>
               :   46ae3:	cmpl   $0x0,-0x510(%rbp)
               :   46aea:	mov    (%r15),%edx
               :   46aed:	je     4a165 <_IO_vfprintf+0x3ed5>
               :   46af3:	cmp    $0x30,%edx
               :   46af6:	jae    49f51 <_IO_vfprintf+0x3cc1>
               :   46afc:	mov    %edx,%eax
               :   46afe:	add    0x10(%r15),%rax
               :   46b02:	add    $0x8,%edx
               :   46b05:	mov    %edx,(%r15)
               :   46b08:	mov    (%rax),%rax
               :   46b0b:	test   %rax,%rax
               :   46b0e:	jns    49f38 <_IO_vfprintf+0x3ca8>
               :   46b14:	neg    %rax
               :   46b17:	movl   $0xa,-0x53c(%rbp)
               :   46b21:	mov    $0x1,%r10d
               :   46b27:	mov    %rax,-0x538(%rbp)
               :   46b2e:	cmpl   $0x0,-0x508(%rbp)
               :   46b35:	js     49c09 <_IO_vfprintf+0x3979>
               :   46b3b:	jne    49b54 <_IO_vfprintf+0x38c4>
               :   46b41:	cmpq   $0x0,-0x538(%rbp)
               :   46b49:	jne    49b54 <_IO_vfprintf+0x38c4>
               :   46b4f:	cmpl   $0x0,-0x528(%rbp)
               :   46b56:	je     49e44 <_IO_vfprintf+0x3bb4>
               :   46b5c:	cmpl   $0x8,-0x53c(%rbp)
               :   46b63:	jne    49e44 <_IO_vfprintf+0x3bb4>
               :   46b69:	lea    -0x1(%r13),%rax
               :   46b6d:	movb   $0x30,-0x1(%r13)
               :   46b72:	mov    %rax,-0x510(%rbp)
               :   46b79:	movb   $0x20,-0x521(%rbp)
               :   46b80:	xor    %eax,%eax
     1 9.7e-04 :   46b82:	mov    -0x510(%rbp),%rcx
               :   46b89:	sub    %r13,%rcx
               :   46b8c:	add    %rcx,%rax
               :   46b8f:	mov    %rcx,-0x548(%rbp)
               :   46b96:	mov    %rax,%rcx
               :   46b99:	mov    $0x0,%eax
               :   46b9e:	cmovns %rcx,%rax
               :   46ba2:	cmpl   $0x0,-0x514(%rbp)
               :   46ba9:	mov    %rax,-0x508(%rbp)
               :   46bb0:	mov    %eax,-0x540(%rbp)
               :   46bb6:	jne    49c18 <_IO_vfprintf+0x3988>
               :   46bbc:	mov    -0x500(%rbp),%r9d
               :   46bc3:	add    -0x548(%rbp),%r9d
               :   46bca:	sub    -0x508(%rbp),%r9d
     2  0.0019 :   46bd1:	cmpq   $0x0,-0x538(%rbp)
               :   46bd9:	je     46bf8 <_IO_vfprintf+0x968>
               :   46bdb:	cmpl   $0x0,-0x528(%rbp)
               :   46be2:	je     46bf8 <_IO_vfprintf+0x968>
               :   46be4:	cmpl   $0x10,-0x53c(%rbp)
               :   46beb:	lea    -0x2(%r9),%eax
               :   46bef:	sete   %dl
               :   46bf2:	test   %dl,%dl
               :   46bf4:	cmovne %eax,%r9d
     1 9.7e-04 :   46bf8:	mov    -0x518(%rbp),%eax
               :   46bfe:	or     %r10d,%eax
               :   46c01:	or     -0x520(%rbp),%eax
               :   46c07:	cmp    $0x1,%eax
               :   46c0a:	adc    $0xffffffff,%r9d
               :   46c0e:	cmpb   $0x20,-0x521(%rbp)
               :   46c15:	je     4a05d <_IO_vfprintf+0x3dcd>
     1 9.7e-04 :   46c1b:	test   %r10d,%r10d
               :   46c1e:	je     49b29 <_IO_vfprintf+0x3899>
               :   46c24:	mov    0x28(%rbx),%rax
               :   46c28:	cmp    0x30(%rbx),%rax
               :   46c2c:	jae    49fb6 <_IO_vfprintf+0x3d26>
               :   46c32:	lea    0x1(%rax),%rdx
               :   46c36:	mov    %rdx,0x28(%rbx)
               :   46c3a:	movb   $0x2d,(%rax)
               :   46c3d:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   46c47:	je     467fb <_IO_vfprintf+0x56b>
               :   46c4d:	addl   $0x1,-0x4a8(%rbp)
               :   46c54:	cmpq   $0x0,-0x538(%rbp)
               :   46c5c:	je     46ccf <_IO_vfprintf+0xa3f>
               :   46c5e:	cmpl   $0x0,-0x528(%rbp)
               :   46c65:	je     46ccf <_IO_vfprintf+0xa3f>
               :   46c67:	cmpl   $0x10,-0x53c(%rbp)
               :   46c6e:	jne    46ccf <_IO_vfprintf+0xa3f>
               :   46c70:	mov    0x28(%rbx),%rax
               :   46c74:	cmp    0x30(%rbx),%rax
               :   46c78:	jae    49f0f <_IO_vfprintf+0x3c7f>
               :   46c7e:	lea    0x1(%rax),%rdx
               :   46c82:	mov    %rdx,0x28(%rbx)
               :   46c86:	movb   $0x30,(%rax)
               :   46c89:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   46c93:	je     467fb <_IO_vfprintf+0x56b>
               :   46c99:	mov    0x28(%rbx),%rax
               :   46c9d:	cmp    0x30(%rbx),%rax
               :   46ca1:	jae    49ee4 <_IO_vfprintf+0x3c54>
               :   46ca7:	movzbl -0x4c8(%rbp),%ecx
               :   46cae:	lea    0x1(%rax),%rdx
               :   46cb2:	mov    %rdx,0x28(%rbx)
               :   46cb6:	mov    %cl,(%rax)
               :   46cb8:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   46cc2:	je     467fb <_IO_vfprintf+0x56b>
               :   46cc8:	addl   $0x2,-0x4a8(%rbp)
               :   46ccf:	add    -0x540(%rbp),%r9d
               :   46cd6:	test   %r9d,%r9d
               :   46cd9:	jle    46d38 <_IO_vfprintf+0xaa8>
               :   46cdb:	movslq %r9d,%rcx
               :   46cde:	mov    $0x30,%esi
               :   46ce3:	mov    %rbx,%rdi
               :   46ce6:	mov    %rcx,%rdx
               :   46ce9:	mov    %rcx,-0x4c8(%rbp)
               :   46cf0:	mov    %r9d,-0x500(%rbp)
               :   46cf7:	callq  6a910 <_IO_padn>
               :   46cfc:	mov    -0x4c8(%rbp),%rcx
               :   46d03:	cmp    %rax,%rcx
               :   46d06:	jne    467fb <_IO_vfprintf+0x56b>
               :   46d0c:	mov    -0x4a8(%rbp),%ecx
               :   46d12:	cmp    $0x7ffffffe,%ecx
               :   46d18:	ja     4a0db <_IO_vfprintf+0x3e4b>
               :   46d1e:	mov    -0x500(%rbp),%r9d
               :   46d25:	mov    $0x7fffffff,%eax
               :   46d2a:	add    %r9d,-0x4a8(%rbp)
               :   46d31:	sub    %ecx,%eax
               :   46d33:	cmp    %eax,%r9d
               :   46d36:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   46d38:	cmpl   $0x0,-0x4a8(%rbp)
               :   46d3f:	js     4a0fa <_IO_vfprintf+0x3e6a>
               :   46d45:	mov    -0x510(%rbp),%rsi
               :   46d4c:	mov    0xd8(%rbx),%rax
               :   46d53:	mov    %rbx,%rdi
               :   46d56:	sub    %rsi,%r13
               :   46d59:	mov    %r13,%rdx
               :   46d5c:	callq  *0x38(%rax)
               :   46d5f:	cmp    %rax,%r13
               :   46d62:	jne    467fb <_IO_vfprintf+0x56b>
     1 9.7e-04 :   46d68:	mov    -0x4a8(%rbp),%ecx
               :   46d6e:	mov    $0x7fffffff,%eax
               :   46d73:	sub    %ecx,%eax
               :   46d75:	add    %r13d,%ecx
               :   46d78:	cltq   
               :   46d7a:	cmp    %rax,%r13
               :   46d7d:	jle    46a05 <_IO_vfprintf+0x775>
               :   46d83:	mov    0x35a0ce(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   46d8a:	movl   $0x4b,%fs:(%rax)
               :   46d91:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   46d96:	lea    0x121543(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   46d9d:	lea    0x1190d4(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   46da4:	lea    0x11d365(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   46dab:	mov    $0x682,%edx
               :   46db0:	callq  2e190 <__assert_fail>
               :   46db5:	mov    -0x4c0(%rbp),%rdi
               :   46dbc:	mov    %ecx,-0x4a8(%rbp)
               :   46dc2:	callq  1f460 <*ABS*+0x87820@plt>
               :   46dc7:	mov    -0x4a8(%rbp),%ecx
               :   46dcd:	jmpq   46a13 <_IO_vfprintf+0x783>
               :   46dd2:	mov    0x8(%r15),%rax
               :   46dd6:	lea    0x8(%rax),%rdx
               :   46dda:	mov    %rdx,0x8(%r15)
               :   46dde:	jmpq   46890 <_IO_vfprintf+0x600>
               :   46de3:	cmpl   $0x0,-0x510(%rbp)
               :   46dea:	jne    4683c <_IO_vfprintf+0x5ac>
               :   46df0:	mov    -0x500(%rbp),%r13d
               :   46df7:	sub    $0x1,%r13d
               :   46dfb:	cmpl   $0x0,-0x514(%rbp)
               :   46e02:	jne    46e5e <_IO_vfprintf+0xbce>
               :   46e04:	test   %r13d,%r13d
               :   46e07:	jle    46e5e <_IO_vfprintf+0xbce>
               :   46e09:	movslq %r13d,%rcx
               :   46e0c:	mov    $0x20,%esi
               :   46e11:	mov    %rbx,%rdi
               :   46e14:	mov    %rcx,%rdx
               :   46e17:	mov    %rcx,-0x4c8(%rbp)
               :   46e1e:	callq  6a910 <_IO_padn>
               :   46e23:	mov    -0x4c8(%rbp),%rcx
               :   46e2a:	cmp    %rax,%rcx
               :   46e2d:	jne    467fb <_IO_vfprintf+0x56b>
               :   46e33:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   46e3d:	ja     46f29 <_IO_vfprintf+0xc99>
               :   46e43:	mov    $0x7fffffff,%eax
               :   46e48:	sub    -0x4a8(%rbp),%eax
               :   46e4e:	add    %r13d,-0x4a8(%rbp)
               :   46e55:	cmp    %eax,%r13d
               :   46e58:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   46e5e:	mov    (%r15),%edx
               :   46e61:	cmp    $0x30,%edx
               :   46e64:	jae    46f5e <_IO_vfprintf+0xcce>
               :   46e6a:	mov    %edx,%eax
               :   46e6c:	add    0x10(%r15),%rax
               :   46e70:	add    $0x8,%edx
               :   46e73:	mov    %edx,(%r15)
               :   46e76:	movzbl (%rax),%esi
               :   46e79:	mov    0x28(%rbx),%rax
               :   46e7d:	cmp    0x30(%rbx),%rax
               :   46e81:	jae    46f48 <_IO_vfprintf+0xcb8>
               :   46e87:	lea    0x1(%rax),%rdx
               :   46e8b:	mov    %rdx,0x28(%rbx)
               :   46e8f:	mov    %sil,(%rax)
               :   46e92:	mov    -0x4a8(%rbp),%eax
               :   46e98:	cmp    $0x7fffffff,%eax
               :   46e9d:	je     467fb <_IO_vfprintf+0x56b>
               :   46ea3:	cmpl   $0x0,-0x514(%rbp)
               :   46eaa:	lea    0x1(%rax),%ecx
               :   46ead:	je     46a05 <_IO_vfprintf+0x775>
               :   46eb3:	test   %r13d,%r13d
               :   46eb6:	jle    46a05 <_IO_vfprintf+0x775>
               :   46ebc:	movslq %r13d,%r8
               :   46ebf:	mov    $0x20,%esi
               :   46ec4:	mov    %rbx,%rdi
               :   46ec7:	mov    %r8,%rdx
               :   46eca:	mov    %r8,-0x4c8(%rbp)
               :   46ed1:	mov    %ecx,-0x500(%rbp)
               :   46ed7:	callq  6a910 <_IO_padn>
               :   46edc:	mov    -0x4c8(%rbp),%r8
               :   46ee3:	cmp    %rax,%r8
               :   46ee6:	jne    467fb <_IO_vfprintf+0x56b>
               :   46eec:	mov    -0x500(%rbp),%ecx
               :   46ef2:	cmp    $0x7ffffffe,%ecx
               :   46ef8:	ja     46f29 <_IO_vfprintf+0xc99>
               :   46efa:	mov    $0x7ffffffe,%eax
               :   46eff:	sub    -0x4a8(%rbp),%eax
               :   46f05:	add    %r13d,%ecx
               :   46f08:	cmp    %eax,%r13d
               :   46f0b:	jbe    46a05 <_IO_vfprintf+0x775>
               :   46f11:	jmpq   46d83 <_IO_vfprintf+0xaf3>
               :   46f16:	mov    0x359f3b(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   46f1d:	movl   $0x4b,%fs:(%rax)
               :   46f24:	jmpq   4695e <_IO_vfprintf+0x6ce>
               :   46f29:	lea    0x1213b0(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   46f30:	lea    0x118f41(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   46f37:	lea    0x11d1a2(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   46f3e:	mov    $0x663,%edx
               :   46f43:	callq  2e190 <__assert_fail>
               :   46f48:	mov    %rbx,%rdi
               :   46f4b:	callq  75590 <__overflow>
               :   46f50:	add    $0x1,%eax
               :   46f53:	jne    46e92 <_IO_vfprintf+0xc02>
               :   46f59:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   46f5e:	mov    0x8(%r15),%rax
               :   46f62:	lea    0x8(%rax),%rdx
               :   46f66:	mov    %rdx,0x8(%r15)
               :   46f6a:	jmpq   46e76 <_IO_vfprintf+0xbe6>
               :   46f6f:	mov    (%r15),%edx
               :   46f72:	cmp    $0x30,%edx
               :   46f75:	jae    49051 <_IO_vfprintf+0x2dc1>
               :   46f7b:	mov    %edx,%eax
               :   46f7d:	add    0x10(%r15),%rax
               :   46f81:	add    $0x8,%edx
               :   46f84:	mov    %edx,(%r15)
               :   46f87:	mov    (%rax),%esi
               :   46f89:	jmpq   46740 <_IO_vfprintf+0x4b0>
               :   46f8e:	cmpl   $0x0,-0x568(%rbp)
               :   46f95:	jne    466da <_IO_vfprintf+0x44a>
               :   46f9b:	mov    -0x558(%rbp),%r12d
               :   46fa2:	sub    $0x1,%r12d
               :   46fa6:	cmpl   $0x0,-0x584(%rbp)
               :   46fad:	jne    46ffb <_IO_vfprintf+0xd6b>
               :   46faf:	test   %r12d,%r12d
               :   46fb2:	jle    46ffb <_IO_vfprintf+0xd6b>
               :   46fb4:	movslq %r12d,%r13
               :   46fb7:	mov    $0x20,%esi
               :   46fbc:	mov    %rbx,%rdi
               :   46fbf:	mov    %r13,%rdx
               :   46fc2:	callq  6a910 <_IO_padn>
               :   46fc7:	cmp    %rax,%r13
               :   46fca:	jne    467fb <_IO_vfprintf+0x56b>
               :   46fd0:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   46fda:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   46fe0:	mov    $0x7fffffff,%eax
               :   46fe5:	sub    -0x4a8(%rbp),%eax
               :   46feb:	add    %r12d,-0x4a8(%rbp)
               :   46ff2:	cmp    %eax,%r12d
               :   46ff5:	ja     473af <_IO_vfprintf+0x111f>
               :   46ffb:	movslq -0x4e4(%rbp),%rax
               :   47002:	imul   $0x48,%rax,%rax
               :   47006:	add    -0x4d0(%rbp),%rax
               :   4700d:	je     475d7 <_IO_vfprintf+0x1347>
               :   47013:	movslq 0x30(%rax),%rax
               :   47017:	mov    -0x4d8(%rbp),%rcx
               :   4701e:	shl    $0x4,%rax
               :   47022:	movzbl (%rcx,%rax,1),%esi
               :   47026:	mov    0x28(%rbx),%rax
               :   4702a:	cmp    0x30(%rbx),%rax
               :   4702e:	jae    475c1 <_IO_vfprintf+0x1331>
               :   47034:	lea    0x1(%rax),%rdx
               :   47038:	mov    %rdx,0x28(%rbx)
               :   4703c:	mov    %sil,(%rax)
               :   4703f:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   47049:	je     467fb <_IO_vfprintf+0x56b>
               :   4704f:	addl   $0x1,-0x4a8(%rbp)
               :   47056:	cmpl   $0x0,-0x584(%rbp)
               :   4705d:	je     470a9 <_IO_vfprintf+0xe19>
               :   4705f:	test   %r12d,%r12d
               :   47062:	jle    470a9 <_IO_vfprintf+0xe19>
               :   47064:	movslq %r12d,%r13
               :   47067:	mov    $0x20,%esi
               :   4706c:	mov    %rbx,%rdi
               :   4706f:	mov    %r13,%rdx
               :   47072:	callq  6a910 <_IO_padn>
               :   47077:	cmp    %rax,%r13
               :   4707a:	jne    467fb <_IO_vfprintf+0x56b>
               :   47080:	mov    -0x4a8(%rbp),%ecx
               :   47086:	cmp    $0x7ffffffe,%ecx
               :   4708c:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   47092:	mov    $0x7fffffff,%eax
               :   47097:	add    %r12d,-0x4a8(%rbp)
               :   4709e:	sub    %ecx,%eax
               :   470a0:	cmp    %eax,%r12d
               :   470a3:	ja     473af <_IO_vfprintf+0x111f>
               :   470a9:	cmpq   $0x0,-0x4c0(%rbp)
               :   470b1:	jne    475b0 <_IO_vfprintf+0x1320>
               :   470b7:	mov    -0x4a8(%rbp),%edx
               :   470bd:	test   %edx,%edx
               :   470bf:	js     47591 <_IO_vfprintf+0x1301>
               :   470c5:	movslq -0x4e4(%rbp),%rax
               :   470cc:	mov    -0x4d0(%rbp),%rcx
               :   470d3:	mov    %rbx,%rdi
               :   470d6:	lea    (%rax,%rax,8),%rax
               :   470da:	lea    (%rcx,%rax,8),%r12
               :   470de:	mov    0xd8(%rbx),%rax
               :   470e5:	mov    0x18(%r12),%rsi
               :   470ea:	mov    0x20(%r12),%rdx
               :   470ef:	sub    %rsi,%rdx
               :   470f2:	callq  *0x38(%rax)
               :   470f5:	mov    0x20(%r12),%rdx
               :   470fa:	sub    0x18(%r12),%rdx
               :   470ff:	movq   $0x0,-0x4c0(%rbp)
               :   4710a:	cmp    %rdx,%rax
               :   4710d:	jne    467fb <_IO_vfprintf+0x56b>
               :   47113:	mov    $0x7fffffff,%edx
               :   47118:	sub    -0x4a8(%rbp),%edx
               :   4711e:	addl   $0x1,-0x4e4(%rbp)
               :   47125:	add    %eax,-0x4a8(%rbp)
               :   4712b:	movslq %edx,%rdx
               :   4712e:	cmp    %rdx,%rax
               :   47131:	jg     473af <_IO_vfprintf+0x111f>
               :   47137:	movslq -0x4e4(%rbp),%rax
               :   4713e:	cmp    %rax,-0x530(%rbp)
               :   47145:	ja     47157 <_IO_vfprintf+0xec7>
               :   47147:	movq   $0x0,-0x4c0(%rbp)
               :   47152:	jmpq   46805 <_IO_vfprintf+0x575>
               :   47157:	mov    -0x4d0(%rbp),%rcx
               :   4715e:	lea    (%rax,%rax,8),%rax
               :   47162:	lea    (%rcx,%rax,8),%r8
               :   47166:	movzbl 0xc(%r8),%eax
               :   4716b:	mov    %eax,%ecx
               :   4716d:	mov    %eax,%edx
               :   4716f:	shr    $0x3,%cl
               :   47172:	shr    $0x5,%dl
               :   47175:	mov    %cl,-0x568(%rbp)
               :   4717b:	mov    %eax,%ecx
               :   4717d:	andb   $0x1,-0x568(%rbp)
               :   47184:	shr    $0x4,%cl
               :   47187:	mov    %cl,-0x570(%rbp)
               :   4718d:	mov    %edx,%ecx
               :   4718f:	movzbl 0xd(%r8),%edx
               :   47194:	and    $0x1,%ecx
               :   47197:	andb   $0x1,-0x570(%rbp)
               :   4719e:	mov    %ecx,-0x584(%rbp)
               :   471a4:	mov    %eax,%ecx
               :   471a6:	shr    $0x6,%cl
               :   471a9:	mov    %cl,-0x550(%rbp)
               :   471af:	mov    %eax,%ecx
               :   471b1:	shr    $0x7,%cl
               :   471b4:	andb   $0x1,-0x550(%rbp)
               :   471bb:	mov    %cl,-0x5a4(%rbp)
               :   471c1:	mov    %eax,%ecx
               :   471c3:	and    $0x1,%ecx
               :   471c6:	mov    %cl,-0x5a8(%rbp)
               :   471cc:	mov    %eax,%ecx
               :   471ce:	shr    %cl
               :   471d0:	mov    %cl,-0x578(%rbp)
               :   471d6:	mov    %edx,%ecx
               :   471d8:	shr    $0x3,%dl
               :   471db:	shr    %cl
               :   471dd:	mov    %dl,-0x5a0(%rbp)
               :   471e3:	andb   $0x1,-0x578(%rbp)
               :   471ea:	mov    %cl,-0x598(%rbp)
               :   471f0:	mov    %eax,%ecx
               :   471f2:	andb   $0x1,-0x598(%rbp)
               :   471f9:	shr    $0x2,%cl
               :   471fc:	andb   $0x1,-0x5a0(%rbp)
               :   47203:	mov    %cl,-0x585(%rbp)
               :   47209:	mov    0x4(%r8),%ecx
               :   4720d:	andb   $0x1,-0x585(%rbp)
               :   47214:	mov    %ecx,-0x558(%rbp)
               :   4721a:	mov    (%r8),%ecx
               :   4721d:	mov    %ecx,-0x560(%rbp)
               :   47223:	mov    0x10(%r8),%ecx
               :   47227:	mov    %ecx,-0x5ac(%rbp)
               :   4722d:	mov    0x8(%r8),%ecx
               :   47231:	mov    %ecx,-0x580(%rbp)
               :   47237:	movslq 0x2c(%r8),%rdx
               :   4723b:	mov    %cl,-0x522(%rbp)
               :   47241:	cmp    $0xffffffff,%edx
               :   47244:	je     47266 <_IO_vfprintf+0xfd6>
               :   47246:	mov    -0x4d8(%rbp),%rcx
               :   4724d:	shl    $0x4,%rdx
               :   47251:	mov    (%rcx,%rdx,1),%edx
               :   47254:	test   %edx,%edx
               :   47256:	js     474b8 <_IO_vfprintf+0x1228>
               :   4725c:	mov    %edx,0x4(%r8)
               :   47260:	mov    %edx,-0x558(%rbp)
               :   47266:	movslq 0x28(%r8),%rax
               :   4726a:	cmp    $0xffffffff,%eax
               :   4726d:	je     4728e <_IO_vfprintf+0xffe>
               :   4726f:	mov    -0x4d8(%rbp),%rcx
               :   47276:	shl    $0x4,%rax
               :   4727a:	mov    (%rcx,%rax,1),%eax
               :   4727d:	test   %eax,%eax
               :   4727f:	js     474da <_IO_vfprintf+0x124a>
               :   47285:	mov    %eax,(%r8)
               :   47288:	mov    %eax,-0x560(%rbp)
               :   4728e:	mov    -0x558(%rbp),%eax
               :   47294:	mov    -0x560(%rbp),%ecx
               :   4729a:	cmp    %eax,%ecx
               :   4729c:	cmovge %ecx,%eax
               :   4729f:	cmp    $0x3c8,%eax
               :   472a4:	jle    4748e <_IO_vfprintf+0x11fe>
               :   472aa:	add    $0x20,%eax
               :   472ad:	movslq %eax,%r12
               :   472b0:	cmp    $0x1000,%r12
               :   472b7:	ja     47500 <_IO_vfprintf+0x1270>
               :   472bd:	add    $0x1e,%r12
               :   472c1:	mov    -0x560(%rbp),%ecx
               :   472c7:	and    $0xfffffffffffffff0,%r12
               :   472cb:	sub    %r12,%rsp
               :   472ce:	lea    0xf(%rsp),%rax
               :   472d3:	and    $0xfffffffffffffff0,%rax
               :   472d7:	cmp    %ecx,-0x558(%rbp)
               :   472dd:	jge    474f0 <_IO_vfprintf+0x1260>
               :   472e3:	movslq -0x560(%rbp),%r13
               :   472ea:	add    $0x20,%r13
               :   472ee:	add    %rax,%r13
               :   472f1:	movq   $0x0,-0x4c0(%rbp)
               :   472fc:	mov    0x35f225(%rip),%rax        # 3a6528 <__printf_function_table>
               :   47303:	test   %rax,%rax
               :   47306:	je     473c8 <_IO_vfprintf+0x1138>
               :   4730c:	movsbq -0x522(%rbp),%r10
               :   47314:	cmpq   $0x0,(%rax,%r10,8)
               :   47319:	je     473c8 <_IO_vfprintf+0x1138>
               :   4731f:	mov    0x38(%r8),%rdi
               :   47323:	lea    0x1e(,%rdi,8),%rdx
               :   4732b:	and    $0xfffffffffffffff0,%rdx
               :   4732f:	sub    %rdx,%rsp
               :   47332:	lea    0xf(%rsp),%rdx
               :   47337:	and    $0xfffffffffffffff0,%rdx
               :   4733b:	test   %rdi,%rdi
               :   4733e:	je     4736f <_IO_vfprintf+0x10df>
               :   47340:	mov    0x30(%r8),%r9d
               :   47344:	mov    -0x4d8(%rbp),%r11
               :   4734b:	xor    %esi,%esi
               :   4734d:	xor    %eax,%eax
               :   4734f:	lea    (%r9,%rax,1),%ecx
               :   47353:	add    $0x1,%eax
               :   47356:	shl    $0x4,%rcx
               :   4735a:	add    %r11,%rcx
               :   4735d:	mov    %rcx,(%rdx,%rsi,8)
               :   47361:	mov    %eax,%esi
               :   47363:	cmp    %rsi,%rdi
               :   47366:	ja     4734f <_IO_vfprintf+0x10bf>
               :   47368:	mov    0x35f1b9(%rip),%rax        # 3a6528 <__printf_function_table>
               :   4736f:	mov    %r8,%rsi
               :   47372:	mov    %rbx,%rdi
               :   47375:	callq  *(%rax,%r10,8)
               :   47379:	cmp    $0xfffffffe,%eax
               :   4737c:	je     473c8 <_IO_vfprintf+0x1138>
               :   4737e:	test   %eax,%eax
               :   47380:	js     467fb <_IO_vfprintf+0x56b>
               :   47386:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   47390:	ja     47572 <_IO_vfprintf+0x12e2>
               :   47396:	mov    $0x7fffffff,%edx
               :   4739b:	sub    -0x4a8(%rbp),%edx
               :   473a1:	add    %eax,-0x4a8(%rbp)
               :   473a7:	cmp    %edx,%eax
               :   473a9:	jbe    470a9 <_IO_vfprintf+0xe19>
               :   473af:	mov    0x359aa2(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   473b6:	movl   $0x4b,%fs:(%rax)
               :   473bd:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   473c2:	nopw   0x0(%rax,%rax,1)
               :   473c8:	movzbl -0x580(%rbp),%eax
               :   473cf:	sub    $0x20,%eax
               :   473d2:	cmp    $0x5a,%al
               :   473d4:	ja     474a2 <_IO_vfprintf+0x1212>
               :   473da:	movsbl -0x580(%rbp),%eax
               :   473e1:	lea    0x112ff8(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   473e8:	lea    0x30c3(%rip),%r12        # 4a4b2 <_IO_vfprintf+0x4222>
               :   473ef:	sub    $0x20,%eax
               :   473f2:	cltq   
               :   473f4:	movzbl (%rdx,%rax,1),%edx
               :   473f8:	lea    0x112c61(%rip),%rax        # 15a060 <step4_jumps.12287>
               :   473ff:	mov    (%rax,%rdx,4),%eax
               :   47402:	movzbl -0x568(%rbp),%ecx
               :   47409:	cltq   
               :   4740b:	add    %r12,%rax
               :   4740e:	mov    %ecx,-0x590(%rbp)
               :   47414:	movzbl -0x570(%rbp),%ecx
               :   4741b:	mov    %ecx,-0x570(%rbp)
               :   47421:	movzbl -0x550(%rbp),%ecx
               :   47428:	mov    %ecx,-0x550(%rbp)
               :   4742e:	movzbl -0x5a4(%rbp),%ecx
               :   47435:	mov    %ecx,-0x5a4(%rbp)
               :   4743b:	movzbl -0x5a8(%rbp),%ecx
               :   47442:	mov    %ecx,-0x5a8(%rbp)
               :   47448:	movzbl -0x578(%rbp),%ecx
               :   4744f:	mov    %ecx,-0x580(%rbp)
               :   47455:	movzbl -0x598(%rbp),%ecx
               :   4745c:	mov    %ecx,-0x598(%rbp)
               :   47462:	movzbl -0x585(%rbp),%ecx
               :   47469:	mov    %ecx,-0x568(%rbp)
               :   4746f:	movzbl -0x5a0(%rbp),%ecx
               :   47476:	mov    %ecx,-0x5b0(%rbp)
               :   4747c:	movzbl -0x5ac(%rbp),%ecx
               :   47483:	mov    %cl,-0x585(%rbp)
               :   47489:	jmpq   4663c <_IO_vfprintf+0x3ac>
               :   4748e:	lea    -0x38(%rbp),%r13
               :   47492:	movq   $0x0,-0x4c0(%rbp)
               :   4749d:	jmpq   472fc <_IO_vfprintf+0x106c>
               :   474a2:	lea    0x3009(%rip),%r12        # 4a4b2 <_IO_vfprintf+0x4222>
               :   474a9:	lea    0x14ed(%rip),%rax        # 4899d <_IO_vfprintf+0x270d>
               :   474b0:	sub    %r12d,%eax
               :   474b3:	jmpq   47402 <_IO_vfprintf+0x1172>
               :   474b8:	neg    %edx
               :   474ba:	or     $0x20,%eax
               :   474bd:	movl   $0x1,-0x584(%rbp)
               :   474c7:	mov    %edx,0x4(%r8)
               :   474cb:	mov    %al,0xc(%r8)
               :   474cf:	mov    %edx,-0x558(%rbp)
               :   474d5:	jmpq   47266 <_IO_vfprintf+0xfd6>
               :   474da:	movl   $0xffffffff,(%r8)
               :   474e1:	movl   $0xffffffff,-0x560(%rbp)
               :   474eb:	jmpq   4728e <_IO_vfprintf+0xffe>
               :   474f0:	movslq -0x558(%rbp),%r13
               :   474f7:	add    $0x20,%r13
               :   474fb:	jmpq   472ee <_IO_vfprintf+0x105e>
               :   47500:	mov    %r12,%rdi
               :   47503:	mov    %r8,-0x4c0(%rbp)
               :   4750a:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4750f:	test   %eax,%eax
               :   47511:	mov    -0x4c0(%rbp),%r8
               :   47518:	jne    472bd <_IO_vfprintf+0x102d>
               :   4751e:	mov    %r12,%rdi
               :   47521:	mov    %r8,-0x590(%rbp)
               :   47528:	callq  1f400 <memalign@plt>
               :   4752d:	test   %rax,%rax
               :   47530:	mov    %rax,-0x4c0(%rbp)
               :   47537:	mov    -0x590(%rbp),%r8
               :   4753e:	je     467fb <_IO_vfprintf+0x56b>
               :   47544:	mov    -0x560(%rbp),%eax
               :   4754a:	cmp    %eax,-0x558(%rbp)
               :   47550:	jge    47565 <_IO_vfprintf+0x12d5>
               :   47552:	movslq %eax,%r13
               :   47555:	add    $0x20,%r13
               :   47559:	add    -0x4c0(%rbp),%r13
               :   47560:	jmpq   472fc <_IO_vfprintf+0x106c>
               :   47565:	movslq -0x558(%rbp),%r13
               :   4756c:	add    $0x20,%r13
               :   47570:	jmp    47559 <_IO_vfprintf+0x12c9>
               :   47572:	lea    0x120d67(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   47579:	lea    0x1188f8(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   47580:	lea    0x11cb59(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   47587:	mov    $0x7cc,%edx
               :   4758c:	callq  2e190 <__assert_fail>
               :   47591:	lea    0x120d48(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   47598:	lea    0x1188d9(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   4759f:	lea    0x11cb6a(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   475a6:	mov    $0x7fb,%edx
               :   475ab:	callq  2e190 <__assert_fail>
               :   475b0:	mov    -0x4c0(%rbp),%rdi
               :   475b7:	callq  1f460 <*ABS*+0x87820@plt>
               :   475bc:	jmpq   470b7 <_IO_vfprintf+0xe27>
               :   475c1:	mov    %rbx,%rdi
               :   475c4:	callq  75590 <__overflow>
               :   475c9:	add    $0x1,%eax
               :   475cc:	jne    4703f <_IO_vfprintf+0xdaf>
               :   475d2:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   475d7:	mov    (%r15),%edx
               :   475da:	cmp    $0x30,%edx
               :   475dd:	jae    492f3 <_IO_vfprintf+0x3063>
               :   475e3:	mov    %edx,%eax
               :   475e5:	add    0x10(%r15),%rax
               :   475e9:	add    $0x8,%edx
               :   475ec:	mov    %edx,(%r15)
               :   475ef:	movzbl (%rax),%esi
               :   475f2:	mov    0x28(%rbx),%rax
               :   475f6:	cmp    0x30(%rbx),%rax
               :   475fa:	jb     47034 <_IO_vfprintf+0xda4>
               :   47600:	mov    %rbx,%rdi
               :   47603:	callq  75590 <__overflow>
               :   47608:	add    $0x1,%eax
               :   4760b:	jne    4703f <_IO_vfprintf+0xdaf>
               :   47611:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   47616:	movl   $0xa,-0x578(%rbp)
               :   47620:	movslq -0x4e4(%rbp),%rax
               :   47627:	imul   $0x48,%rax,%rax
               :   4762b:	add    -0x4d0(%rbp),%rax
               :   47632:	je     49848 <_IO_vfprintf+0x35b8>
               :   47638:	movslq 0x30(%rax),%rax
               :   4763c:	mov    -0x4d8(%rbp),%rcx
               :   47643:	shl    $0x4,%rax
               :   47647:	cmpl   $0x0,-0x568(%rbp)
               :   4764e:	je     47bc6 <_IO_vfprintf+0x1936>
               :   47654:	mov    (%rcx,%rax,1),%rax
               :   47658:	movl   $0x0,-0x550(%rbp)
               :   47662:	xor    %r9d,%r9d
               :   47665:	movl   $0x0,-0x570(%rbp)
               :   4766f:	mov    %rax,-0x568(%rbp)
               :   47676:	cmpl   $0x0,-0x560(%rbp)
               :   4767d:	js     479a9 <_IO_vfprintf+0x1719>
               :   47683:	jne    478f4 <_IO_vfprintf+0x1664>
               :   47689:	cmpq   $0x0,-0x568(%rbp)
               :   47691:	jne    478f4 <_IO_vfprintf+0x1664>
               :   47697:	cmpl   $0x0,-0x590(%rbp)
               :   4769e:	je     47bba <_IO_vfprintf+0x192a>
               :   476a4:	cmpl   $0x8,-0x578(%rbp)
               :   476ab:	jne    47bba <_IO_vfprintf+0x192a>
               :   476b1:	lea    -0x1(%r13),%rax
               :   476b5:	movb   $0x30,-0x1(%r13)
               :   476ba:	mov    %rax,-0x580(%rbp)
               :   476c1:	movb   $0x20,-0x585(%rbp)
               :   476c8:	xor    %eax,%eax
               :   476ca:	mov    -0x580(%rbp),%rcx
               :   476d1:	sub    %r13,%rcx
               :   476d4:	add    %rcx,%rax
               :   476d7:	mov    %rcx,-0x598(%rbp)
               :   476de:	mov    %rax,%rcx
               :   476e1:	mov    $0x0,%eax
               :   476e6:	cmovns %rcx,%rax
               :   476ea:	cmpl   $0x0,-0x584(%rbp)
               :   476f1:	mov    %rax,-0x560(%rbp)
               :   476f8:	mov    %eax,-0x5a0(%rbp)
               :   476fe:	jne    479b8 <_IO_vfprintf+0x1728>
               :   47704:	mov    -0x558(%rbp),%r12d
               :   4770b:	add    -0x598(%rbp),%r12d
               :   47712:	sub    -0x560(%rbp),%r12d
               :   47719:	cmpq   $0x0,-0x568(%rbp)
               :   47721:	je     47741 <_IO_vfprintf+0x14b1>
               :   47723:	cmpl   $0x0,-0x590(%rbp)
               :   4772a:	je     47741 <_IO_vfprintf+0x14b1>
               :   4772c:	cmpl   $0x10,-0x578(%rbp)
               :   47733:	lea    -0x2(%r12),%eax
               :   47738:	sete   %dl
               :   4773b:	test   %dl,%dl
               :   4773d:	cmovne %eax,%r12d
               :   47741:	mov    -0x570(%rbp),%eax
               :   47747:	or     %r9d,%eax
               :   4774a:	or     -0x550(%rbp),%eax
               :   47750:	cmp    $0x1,%eax
               :   47753:	adc    $0xffffffff,%r12d
               :   47757:	cmpb   $0x20,-0x585(%rbp)
               :   4775e:	je     496b4 <_IO_vfprintf+0x3424>
               :   47764:	test   %r9d,%r9d
               :   47767:	je     478c9 <_IO_vfprintf+0x1639>
               :   4776d:	mov    0x28(%rbx),%rax
               :   47771:	cmp    0x30(%rbx),%rax
               :   47775:	jae    4967a <_IO_vfprintf+0x33ea>
               :   4777b:	lea    0x1(%rax),%rdx
               :   4777f:	mov    %rdx,0x28(%rbx)
               :   47783:	movb   $0x2d,(%rax)
               :   47786:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   47790:	je     467fb <_IO_vfprintf+0x56b>
               :   47796:	addl   $0x1,-0x4a8(%rbp)
               :   4779d:	cmpq   $0x0,-0x568(%rbp)
               :   477a5:	je     47818 <_IO_vfprintf+0x1588>
               :   477a7:	cmpl   $0x0,-0x590(%rbp)
               :   477ae:	je     47818 <_IO_vfprintf+0x1588>
               :   477b0:	cmpl   $0x10,-0x578(%rbp)
               :   477b7:	jne    47818 <_IO_vfprintf+0x1588>
               :   477b9:	mov    0x28(%rbx),%rax
               :   477bd:	cmp    0x30(%rbx),%rax
               :   477c1:	jae    4997a <_IO_vfprintf+0x36ea>
               :   477c7:	lea    0x1(%rax),%rdx
               :   477cb:	mov    %rdx,0x28(%rbx)
               :   477cf:	movb   $0x30,(%rax)
               :   477d2:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   477dc:	je     467fb <_IO_vfprintf+0x56b>
               :   477e2:	mov    0x28(%rbx),%rax
               :   477e6:	cmp    0x30(%rbx),%rax
               :   477ea:	jae    4995d <_IO_vfprintf+0x36cd>
               :   477f0:	movzbl -0x522(%rbp),%ecx
               :   477f7:	lea    0x1(%rax),%rdx
               :   477fb:	mov    %rdx,0x28(%rbx)
               :   477ff:	mov    %cl,(%rax)
               :   47801:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   4780b:	je     467fb <_IO_vfprintf+0x56b>
               :   47811:	addl   $0x2,-0x4a8(%rbp)
               :   47818:	add    -0x5a0(%rbp),%r12d
               :   4781f:	test   %r12d,%r12d
               :   47822:	jle    47877 <_IO_vfprintf+0x15e7>
               :   47824:	movslq %r12d,%rcx
               :   47827:	mov    $0x30,%esi
               :   4782c:	mov    %rbx,%rdi
               :   4782f:	mov    %rcx,%rdx
               :   47832:	mov    %rcx,-0x558(%rbp)
               :   47839:	callq  6a910 <_IO_padn>
               :   4783e:	mov    -0x558(%rbp),%rcx
               :   47845:	cmp    %rax,%rcx
               :   47848:	jne    467fb <_IO_vfprintf+0x56b>
               :   4784e:	mov    -0x4a8(%rbp),%ecx
               :   47854:	cmp    $0x7ffffffe,%ecx
               :   4785a:	ja     49695 <_IO_vfprintf+0x3405>
               :   47860:	mov    $0x7fffffff,%eax
               :   47865:	add    %r12d,-0x4a8(%rbp)
               :   4786c:	sub    %ecx,%eax
               :   4786e:	cmp    %eax,%r12d
               :   47871:	ja     473af <_IO_vfprintf+0x111f>
               :   47877:	cmpl   $0x0,-0x4a8(%rbp)
               :   4787e:	js     49724 <_IO_vfprintf+0x3494>
               :   47884:	mov    -0x580(%rbp),%rsi
               :   4788b:	mov    0xd8(%rbx),%rax
               :   47892:	mov    %rbx,%rdi
               :   47895:	sub    %rsi,%r13
               :   47898:	mov    %r13,%rdx
               :   4789b:	callq  *0x38(%rax)
               :   4789e:	cmp    %rax,%r13
               :   478a1:	jne    467fb <_IO_vfprintf+0x56b>
               :   478a7:	mov    $0x7fffffff,%eax
               :   478ac:	sub    -0x4a8(%rbp),%eax
               :   478b2:	add    %r13d,-0x4a8(%rbp)
               :   478b9:	cltq   
               :   478bb:	cmp    %rax,%r13
               :   478be:	jle    470a9 <_IO_vfprintf+0xe19>
               :   478c4:	jmpq   473af <_IO_vfprintf+0x111f>
               :   478c9:	cmpl   $0x0,-0x550(%rbp)
               :   478d0:	je     4981d <_IO_vfprintf+0x358d>
               :   478d6:	mov    0x28(%rbx),%rax
               :   478da:	cmp    0x30(%rbx),%rax
               :   478de:	jae    49802 <_IO_vfprintf+0x3572>
               :   478e4:	lea    0x1(%rax),%rdx
               :   478e8:	mov    %rdx,0x28(%rbx)
               :   478ec:	movb   $0x2b,(%rax)
               :   478ef:	jmpq   47786 <_IO_vfprintf+0x14f6>
               :   478f4:	movb   $0x20,-0x585(%rbp)
               :   478fb:	xor    %ecx,%ecx
               :   478fd:	cmpb   $0x58,-0x522(%rbp)
               :   47904:	mov    -0x578(%rbp),%edx
               :   4790a:	mov    -0x568(%rbp),%rdi
               :   47911:	mov    %r13,%rsi
               :   47914:	mov    %r9d,-0x598(%rbp)
               :   4791b:	sete   %cl
               :   4791e:	callq  460b0 <_itoa_word>
               :   47923:	cmpq   $0x0,-0x4e0(%rbp)
               :   4792b:	mov    %rax,-0x580(%rbp)
               :   47932:	mov    -0x598(%rbp),%r9d
               :   47939:	jne    49995 <_IO_vfprintf+0x3705>
               :   4793f:	cmpl   $0xa,-0x578(%rbp)
               :   47946:	je     497c9 <_IO_vfprintf+0x3539>
               :   4794c:	movslq -0x560(%rbp),%rax
               :   47953:	mov    %r13,%rdx
               :   47956:	sub    -0x580(%rbp),%rdx
               :   4795d:	cmp    %rdx,%rax
               :   47960:	jg     476ca <_IO_vfprintf+0x143a>
               :   47966:	cmpq   $0x0,-0x568(%rbp)
               :   4796e:	je     476ca <_IO_vfprintf+0x143a>
               :   47974:	cmpl   $0x0,-0x590(%rbp)
               :   4797b:	je     476ca <_IO_vfprintf+0x143a>
               :   47981:	cmpl   $0x8,-0x578(%rbp)
               :   47988:	jne    476ca <_IO_vfprintf+0x143a>
               :   4798e:	mov    -0x580(%rbp),%rcx
               :   47995:	movb   $0x30,-0x1(%rcx)
               :   47999:	sub    $0x1,%rcx
               :   4799d:	mov    %rcx,-0x580(%rbp)
               :   479a4:	jmpq   476ca <_IO_vfprintf+0x143a>
               :   479a9:	movl   $0x1,-0x560(%rbp)
               :   479b3:	jmpq   478fb <_IO_vfprintf+0x166b>
               :   479b8:	test   %r9d,%r9d
               :   479bb:	je     47b8f <_IO_vfprintf+0x18ff>
               :   479c1:	mov    0x28(%rbx),%rax
               :   479c5:	cmp    0x30(%rbx),%rax
               :   479c9:	jae    47bfa <_IO_vfprintf+0x196a>
               :   479cf:	lea    0x1(%rax),%rdx
               :   479d3:	mov    %rdx,0x28(%rbx)
               :   479d7:	movb   $0x2d,(%rax)
               :   479da:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   479e4:	je     467fb <_IO_vfprintf+0x56b>
               :   479ea:	addl   $0x1,-0x4a8(%rbp)
               :   479f1:	subl   $0x1,-0x558(%rbp)
               :   479f8:	cmpq   $0x0,-0x568(%rbp)
               :   47a00:	je     47a7a <_IO_vfprintf+0x17ea>
               :   47a02:	cmpl   $0x0,-0x590(%rbp)
               :   47a09:	je     47a7a <_IO_vfprintf+0x17ea>
               :   47a0b:	cmpl   $0x10,-0x578(%rbp)
               :   47a12:	jne    47a7a <_IO_vfprintf+0x17ea>
               :   47a14:	mov    0x28(%rbx),%rax
               :   47a18:	cmp    0x30(%rbx),%rax
               :   47a1c:	jae    49768 <_IO_vfprintf+0x34d8>
               :   47a22:	lea    0x1(%rax),%rdx
               :   47a26:	mov    %rdx,0x28(%rbx)
               :   47a2a:	movb   $0x30,(%rax)
               :   47a2d:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   47a37:	je     467fb <_IO_vfprintf+0x56b>
               :   47a3d:	mov    0x28(%rbx),%rax
               :   47a41:	cmp    0x30(%rbx),%rax
               :   47a45:	jae    4974b <_IO_vfprintf+0x34bb>
               :   47a4b:	movzbl -0x522(%rbp),%ecx
               :   47a52:	lea    0x1(%rax),%rdx
               :   47a56:	mov    %rdx,0x28(%rbx)
               :   47a5a:	mov    %cl,(%rax)
               :   47a5c:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   47a66:	je     467fb <_IO_vfprintf+0x56b>
               :   47a6c:	addl   $0x2,-0x4a8(%rbp)
               :   47a73:	subl   $0x2,-0x558(%rbp)
               :   47a7a:	mov    -0x5a0(%rbp),%eax
               :   47a80:	test   %eax,%eax
               :   47a82:	jle    47ace <_IO_vfprintf+0x183e>
               :   47a84:	movslq %eax,%r12
               :   47a87:	mov    $0x30,%esi
               :   47a8c:	mov    %rbx,%rdi
               :   47a8f:	mov    %r12,%rdx
               :   47a92:	callq  6a910 <_IO_padn>
               :   47a97:	cmp    %rax,%r12
               :   47a9a:	jne    467fb <_IO_vfprintf+0x56b>
               :   47aa0:	mov    -0x4a8(%rbp),%ecx
               :   47aa6:	mov    -0x560(%rbp),%rsi
               :   47aad:	cmp    $0x7ffffffe,%ecx
               :   47ab3:	ja     49695 <_IO_vfprintf+0x3405>
               :   47ab9:	mov    $0x7fffffff,%eax
               :   47abe:	add    %esi,-0x4a8(%rbp)
               :   47ac4:	sub    %ecx,%eax
               :   47ac6:	cmp    %eax,%esi
               :   47ac8:	ja     473af <_IO_vfprintf+0x111f>
               :   47ace:	cmpl   $0x0,-0x4a8(%rbp)
               :   47ad5:	js     49724 <_IO_vfprintf+0x3494>
               :   47adb:	mov    -0x580(%rbp),%rsi
               :   47ae2:	mov    0xd8(%rbx),%rax
               :   47ae9:	mov    %rbx,%rdi
               :   47aec:	sub    %rsi,%r13
               :   47aef:	mov    %r13,%rdx
               :   47af2:	callq  *0x38(%rax)
               :   47af5:	cmp    %rax,%r13
               :   47af8:	jne    467fb <_IO_vfprintf+0x56b>
               :   47afe:	mov    $0x7fffffff,%ecx
               :   47b03:	mov    %ecx,%eax
               :   47b05:	sub    -0x4a8(%rbp),%eax
               :   47b0b:	cltq   
               :   47b0d:	cmp    %rax,%r13
               :   47b10:	jg     473af <_IO_vfprintf+0x111f>
               :   47b16:	mov    -0x598(%rbp),%eax
               :   47b1c:	sub    -0x560(%rbp),%eax
               :   47b22:	mov    -0x558(%rbp),%r12d
               :   47b29:	add    %r13d,-0x4a8(%rbp)
               :   47b30:	mov    %ecx,-0x568(%rbp)
               :   47b36:	add    %eax,%r12d
               :   47b39:	test   %r12d,%r12d
               :   47b3c:	jle    470a9 <_IO_vfprintf+0xe19>
               :   47b42:	movslq %r12d,%r13
               :   47b45:	mov    $0x20,%esi
               :   47b4a:	mov    %rbx,%rdi
               :   47b4d:	mov    %r13,%rdx
               :   47b50:	callq  6a910 <_IO_padn>
               :   47b55:	cmp    %rax,%r13
               :   47b58:	jne    467fb <_IO_vfprintf+0x56b>
               :   47b5e:	mov    -0x4a8(%rbp),%esi
               :   47b64:	cmp    $0x7ffffffe,%esi
               :   47b6a:	ja     49695 <_IO_vfprintf+0x3405>
               :   47b70:	mov    -0x568(%rbp),%ecx
               :   47b76:	add    %r12d,-0x4a8(%rbp)
               :   47b7d:	mov    %ecx,%eax
               :   47b7f:	sub    %esi,%eax
               :   47b81:	cmp    %eax,%r12d
               :   47b84:	jbe    470a9 <_IO_vfprintf+0xe19>
               :   47b8a:	jmpq   473af <_IO_vfprintf+0x111f>
               :   47b8f:	cmpl   $0x0,-0x550(%rbp)
               :   47b96:	je     4979e <_IO_vfprintf+0x350e>
               :   47b9c:	mov    0x28(%rbx),%rax
               :   47ba0:	cmp    0x30(%rbx),%rax
               :   47ba4:	jae    49783 <_IO_vfprintf+0x34f3>
               :   47baa:	lea    0x1(%rax),%rdx
               :   47bae:	mov    %rdx,0x28(%rbx)
               :   47bb2:	movb   $0x2b,(%rax)
               :   47bb5:	jmpq   479da <_IO_vfprintf+0x174a>
               :   47bba:	mov    %r13,-0x580(%rbp)
               :   47bc1:	jmpq   476c1 <_IO_vfprintf+0x1431>
               :   47bc6:	cmpl   $0x0,-0x598(%rbp)
               :   47bcd:	je     49893 <_IO_vfprintf+0x3603>
               :   47bd3:	movzbl (%rcx,%rax,1),%eax
               :   47bd7:	movl   $0x0,-0x550(%rbp)
               :   47be1:	xor    %r9d,%r9d
               :   47be4:	movl   $0x0,-0x570(%rbp)
               :   47bee:	mov    %rax,-0x568(%rbp)
               :   47bf5:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   47bfa:	mov    $0x2d,%esi
               :   47bff:	mov    %rbx,%rdi
               :   47c02:	callq  75590 <__overflow>
               :   47c07:	add    $0x1,%eax
               :   47c0a:	jne    479da <_IO_vfprintf+0x174a>
               :   47c10:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   47c15:	mov    $0x7fffffff,%ecx
               :   47c1a:	mov    %ecx,%eax
               :   47c1c:	sub    -0x4a8(%rbp),%eax
               :   47c22:	cltq   
               :   47c24:	cmp    %rax,%r13
               :   47c27:	ja     4903e <_IO_vfprintf+0x2dae>
               :   47c2d:	add    %r13d,-0x4a8(%rbp)
               :   47c34:	cmpl   $0x0,-0x584(%rbp)
               :   47c3b:	mov    %ecx,-0x558(%rbp)
               :   47c41:	je     47c8d <_IO_vfprintf+0x19fd>
               :   47c43:	test   %r12d,%r12d
               :   47c46:	jle    47c8d <_IO_vfprintf+0x19fd>
               :   47c48:	movslq %r12d,%r13
               :   47c4b:	mov    $0x20,%esi
               :   47c50:	mov    %rbx,%rdi
               :   47c53:	mov    %r13,%rdx
               :   47c56:	callq  6a910 <_IO_padn>
               :   47c5b:	cmp    %rax,%r13
               :   47c5e:	jne    467f4 <_IO_vfprintf+0x564>
               :   47c64:	mov    -0x4a8(%rbp),%eax
               :   47c6a:	cmp    $0x7ffffffe,%eax
               :   47c6f:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   47c75:	mov    -0x558(%rbp),%ecx
               :   47c7b:	add    %r12d,-0x4a8(%rbp)
               :   47c82:	sub    %eax,%ecx
               :   47c84:	cmp    %ecx,%r12d
               :   47c87:	ja     4903e <_IO_vfprintf+0x2dae>
               :   47c8d:	mov    -0x560(%rbp),%rsp
               :   47c94:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   47c99:	lea    0x120640(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   47ca0:	lea    0x1181d1(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   47ca7:	lea    0x11c462(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   47cae:	mov    $0x7d4,%edx
               :   47cb3:	callq  2e190 <__assert_fail>
               :   47cb8:	testb  $0x4,0x74(%rbx)
               :   47cbc:	je     47ccb <_IO_vfprintf+0x1a3b>
               :   47cbe:	cmpl   $0x0,-0x4e8(%rbp)
               :   47cc5:	je     4804a <_IO_vfprintf+0x1dba>
               :   47ccb:	cmpl   $0x0,-0x510(%rbp)
               :   47cd2:	mov    (%r15),%edx
               :   47cd5:	je     4a668 <_IO_vfprintf+0x43d8>
               :   47cdb:	cmp    $0x30,%edx
               :   47cde:	jae    4a657 <_IO_vfprintf+0x43c7>
               :   47ce4:	mov    %edx,%eax
               :   47ce6:	add    0x10(%r15),%rax
               :   47cea:	add    $0x8,%edx
               :   47ced:	mov    %edx,(%r15)
               :   47cf0:	mov    -0x4a8(%rbp),%ecx
               :   47cf6:	mov    (%rax),%rax
               :   47cf9:	movslq %ecx,%rdx
               :   47cfc:	mov    %rdx,(%rax)
               :   47cff:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   47d04:	mov    -0x4b0(%rbp),%edi
               :   47d0a:	lea    -0x420(%rbp),%rsi
               :   47d11:	mov    $0x3e8,%edx
               :   47d16:	callq  811b0 <__strerror_r>
               :   47d1b:	movl   $0x0,-0x510(%rbp)
               :   47d25:	mov    %rax,%r13
               :   47d28:	test   %r13,%r13
               :   47d2b:	je     4801f <_IO_vfprintf+0x1d8f>
               :   47d31:	cmpb   $0x53,-0x4c8(%rbp)
               :   47d38:	je     47f9b <_IO_vfprintf+0x1d0b>
               :   47d3e:	cmpl   $0x0,-0x510(%rbp)
               :   47d45:	jne    47f9b <_IO_vfprintf+0x1d0b>
               :   47d4b:	mov    -0x508(%rbp),%eax
               :   47d51:	cmp    $0xffffffff,%eax
               :   47d54:	je     47f77 <_IO_vfprintf+0x1ce7>
               :   47d5a:	movslq %eax,%rsi
               :   47d5d:	mov    %r13,%rdi
               :   47d60:	callq  814f0 <strnlen>
               :   47d65:	movl   $0x0,-0x4c8(%rbp)
               :   47d6f:	mov    %rax,%r9
               :   47d72:	mov    -0x500(%rbp),%r10d
               :   47d79:	mov    %r9d,-0x508(%rbp)
               :   47d80:	sub    %r9d,%r10d
               :   47d83:	js     47f1b <_IO_vfprintf+0x1c8b>
               :   47d89:	cmpl   $0x0,-0x514(%rbp)
               :   47d90:	jne    47e06 <_IO_vfprintf+0x1b76>
               :   47d92:	test   %r10d,%r10d
               :   47d95:	je     47e06 <_IO_vfprintf+0x1b76>
               :   47d97:	movslq %r10d,%rcx
               :   47d9a:	mov    $0x20,%esi
               :   47d9f:	mov    %rbx,%rdi
               :   47da2:	mov    %rcx,%rdx
               :   47da5:	mov    %rcx,-0x500(%rbp)
               :   47dac:	mov    %r9,-0x520(%rbp)
               :   47db3:	mov    %r10d,-0x510(%rbp)
               :   47dba:	callq  6a910 <_IO_padn>
               :   47dbf:	mov    -0x500(%rbp),%rcx
               :   47dc6:	cmp    %rax,%rcx
               :   47dc9:	jne    467fb <_IO_vfprintf+0x56b>
               :   47dcf:	mov    -0x4a8(%rbp),%ecx
               :   47dd5:	cmp    $0x7ffffffe,%ecx
               :   47ddb:	ja     46f29 <_IO_vfprintf+0xc99>
               :   47de1:	mov    -0x510(%rbp),%r10d
               :   47de8:	mov    $0x7fffffff,%eax
               :   47ded:	add    %r10d,-0x4a8(%rbp)
               :   47df4:	sub    %ecx,%eax
               :   47df6:	mov    -0x520(%rbp),%r9
               :   47dfd:	cmp    %eax,%r10d
               :   47e00:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   47e06:	cmpl   $0x0,-0x4a8(%rbp)
               :   47e0d:	mov    %r10d,-0x510(%rbp)
               :   47e14:	js     46ac4 <_IO_vfprintf+0x834>
               :   47e1a:	mov    0xd8(%rbx),%rax
               :   47e21:	mov    %r9,%rdx
               :   47e24:	mov    %r9,-0x500(%rbp)
               :   47e2b:	mov    %r13,%rsi
               :   47e2e:	mov    %rbx,%rdi
               :   47e31:	callq  *0x38(%rax)
               :   47e34:	mov    -0x500(%rbp),%r9
               :   47e3b:	mov    -0x510(%rbp),%r10d
               :   47e42:	cmp    %rax,%r9
               :   47e45:	jne    467fb <_IO_vfprintf+0x56b>
               :   47e4b:	mov    $0x7fffffff,%r11d
               :   47e51:	mov    %r11d,%eax
               :   47e54:	sub    -0x4a8(%rbp),%eax
               :   47e5a:	cltq   
               :   47e5c:	cmp    %rax,%r9
               :   47e5f:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   47e65:	mov    -0x4a8(%rbp),%r9d
               :   47e6c:	add    -0x508(%rbp),%r9d
               :   47e73:	cmpl   $0x0,-0x514(%rbp)
               :   47e7a:	mov    %r9d,%ecx
               :   47e7d:	je     47ef5 <_IO_vfprintf+0x1c65>
               :   47e7f:	test   %r10d,%r10d
               :   47e82:	mov    %r11d,-0x510(%rbp)
               :   47e89:	mov    %r9d,-0x508(%rbp)
               :   47e90:	je     47ef5 <_IO_vfprintf+0x1c65>
               :   47e92:	movslq %r10d,%rcx
               :   47e95:	mov    $0x20,%esi
               :   47e9a:	mov    %rbx,%rdi
               :   47e9d:	mov    %rcx,%rdx
               :   47ea0:	mov    %rcx,-0x4a8(%rbp)
               :   47ea7:	mov    %r10d,-0x500(%rbp)
               :   47eae:	callq  6a910 <_IO_padn>
               :   47eb3:	mov    -0x4a8(%rbp),%rcx
               :   47eba:	cmp    %rax,%rcx
               :   47ebd:	jne    467fb <_IO_vfprintf+0x56b>
               :   47ec3:	mov    -0x508(%rbp),%r9d
               :   47eca:	cmp    $0x7ffffffe,%r9d
               :   47ed1:	ja     46f29 <_IO_vfprintf+0xc99>
               :   47ed7:	mov    -0x510(%rbp),%r11d
               :   47ede:	mov    -0x500(%rbp),%r10d
               :   47ee5:	sub    %r9d,%r11d
               :   47ee8:	lea    (%r9,%r10,1),%ecx
               :   47eec:	cmp    %r11d,%r10d
               :   47eef:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   47ef5:	cmpl   $0x0,-0x4c8(%rbp)
               :   47efc:	je     46a05 <_IO_vfprintf+0x775>
               :   47f02:	mov    %r13,%rdi
               :   47f05:	mov    %ecx,-0x4a8(%rbp)
               :   47f0b:	callq  1f460 <*ABS*+0x87820@plt>
               :   47f10:	mov    -0x4a8(%rbp),%ecx
               :   47f16:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   47f1b:	cmpl   $0x0,-0x4a8(%rbp)
               :   47f22:	js     46ac4 <_IO_vfprintf+0x834>
               :   47f28:	mov    0xd8(%rbx),%rax
               :   47f2f:	mov    %r9,%rdx
               :   47f32:	mov    %r9,-0x4c8(%rbp)
               :   47f39:	mov    %r13,%rsi
               :   47f3c:	mov    %rbx,%rdi
               :   47f3f:	callq  *0x38(%rax)
               :   47f42:	mov    -0x4c8(%rbp),%r9
               :   47f49:	cmp    %rax,%r9
               :   47f4c:	jne    467fb <_IO_vfprintf+0x56b>
               :   47f52:	mov    -0x4a8(%rbp),%esi
               :   47f58:	mov    $0x7fffffff,%eax
               :   47f5d:	mov    -0x508(%rbp),%ecx
               :   47f63:	sub    %esi,%eax
               :   47f65:	add    %esi,%ecx
               :   47f67:	cltq   
               :   47f69:	cmp    %rax,%r9
               :   47f6c:	jbe    46a05 <_IO_vfprintf+0x775>
               :   47f72:	jmpq   46d83 <_IO_vfprintf+0xaf3>
               :   47f77:	xor    %eax,%eax
               :   47f79:	or     $0xffffffffffffffff,%rcx
               :   47f7d:	mov    %r13,%rdi
               :   47f80:	repnz scas %es:(%rdi),%al
               :   47f82:	movl   $0x0,-0x4c8(%rbp)
               :   47f8c:	mov    %rcx,%rsi
               :   47f8f:	not    %rsi
               :   47f92:	lea    -0x1(%rsi),%r9
               :   47f96:	jmpq   47d72 <_IO_vfprintf+0x1ae2>
               :   47f9b:	lea    -0x480(%rbp),%rax
               :   47fa2:	mov    %r13,-0x470(%rbp)
               :   47fa9:	movq   $0x0,-0x480(%rbp)
               :   47fb4:	mov    %rax,-0x578(%rbp)
               :   47fbb:	mov    -0x508(%rbp),%eax
               :   47fc1:	test   %eax,%eax
               :   47fc3:	js     4a6e9 <_IO_vfprintf+0x4459>
               :   47fc9:	movslq %eax,%rdx
               :   47fcc:	cmp    $0x1000,%rdx
               :   47fd3:	ja     4a69a <_IO_vfprintf+0x440a>
               :   47fd9:	lea    0x1e(%rdx),%rax
               :   47fdd:	movl   $0x0,-0x4c8(%rbp)
               :   47fe7:	and    $0xfffffffffffffff0,%rax
               :   47feb:	sub    %rax,%rsp
               :   47fee:	lea    0xf(%rsp),%r13
               :   47ff3:	and    $0xfffffffffffffff0,%r13
               :   47ff7:	mov    -0x578(%rbp),%rcx
               :   47ffe:	lea    -0x470(%rbp),%rsi
               :   48005:	mov    %r13,%rdi
               :   48008:	callq  9bfb0 <wcsrtombs>
               :   4800d:	cmp    $0xffffffffffffffff,%rax
               :   48011:	mov    %rax,%r9
               :   48014:	jne    47d72 <_IO_vfprintf+0x1ae2>
               :   4801a:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4801f:	cmpl   $0x5,-0x508(%rbp)
               :   48026:	jg     4807d <_IO_vfprintf+0x1ded>
               :   48028:	cmpl   $0xffffffff,-0x508(%rbp)
               :   4802f:	je     4807d <_IO_vfprintf+0x1ded>
               :   48031:	movl   $0x0,-0x4c8(%rbp)
               :   4803b:	xor    %r9d,%r9d
               :   4803e:	lea    0x117b6f(%rip),%r13        # 15fbb4 <not_available+0x117>
               :   48045:	jmpq   47d72 <_IO_vfprintf+0x1ae2>
               :   4804a:	xor    %eax,%eax
               :   4804c:	or     $0xffffffffffffffff,%rcx
               :   48050:	mov    %r14,%rdi
               :   48053:	repnz scas %es:(%rdi),%al
               :   48055:	mov    %r14,%rdi
               :   48058:	mov    %rcx,%rsi
               :   4805b:	not    %rsi
               :   4805e:	callq  f3710 <__readonly_area>
               :   48063:	test   %eax,%eax
               :   48065:	mov    %eax,-0x4e8(%rbp)
               :   4806b:	jns    47ccb <_IO_vfprintf+0x1a3b>
               :   48071:	lea    0x11c0c0(%rip),%rdi        # 164138 <__PRETTY_FUNCTION__.9742+0xffd>
               :   48078:	callq  72850 <__libc_fatal>
               :   4807d:	movl   $0x0,-0x4c8(%rbp)
               :   48087:	mov    $0x6,%r9d
               :   4808d:	lea    0x117e19(%rip),%r13        # 15fead <null>
               :   48094:	jmpq   47d72 <_IO_vfprintf+0x1ae2>
               :   48099:	mov    -0x4a0(%rbp),%rax
               :   480a0:	lea    0x1(%rax),%rdx
               :   480a4:	mov    %rdx,-0x4a0(%rbp)
               :   480ab:	movzbl 0x1(%rax),%eax
               :   480af:	lea    -0x20(%rax),%edx
               :   480b2:	mov    %al,-0x4c8(%rbp)
               :   480b8:	xor    %eax,%eax
               :   480ba:	cmp    $0x5a,%dl
               :   480bd:	ja     480e1 <_IO_vfprintf+0x1e51>
               :   480bf:	movsbl -0x4c8(%rbp),%eax
               :   480c6:	lea    0x112313(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   480cd:	sub    $0x20,%eax
               :   480d0:	cltq   
               :   480d2:	movzbl (%rdx,%rax,1),%edx
               :   480d6:	lea    0x112283(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   480dd:	movslq (%rax,%rdx,4),%rax
               :   480e1:	add    %r12,%rax
               :   480e4:	movl   $0x1,-0x518(%rbp)
               :   480ee:	jmpq   *%rax
               :   480f0:	movq   $0x0,-0x4f0(%rbp)
               :   480fb:	movl   $0x0,-0x4e8(%rbp)
               :   48105:	movl   $0x0,-0x4e4(%rbp)
               :   4810f:	movq   $0x0,-0x4c0(%rbp)
               :   4811a:	movq   $0xffffffffffffffff,-0x4e0(%rbp)
               :   48125:	movq   $0x0,-0x4f8(%rbp)
               :   48130:	sub    $0x910,%rsp
               :   48137:	movq   $0x0,-0x498(%rbp)
               :   48142:	lea    0xf(%rsp),%rax
               :   48147:	mov    %rax,-0x4d0(%rbp)
               :   4814e:	andq   $0xfffffffffffffff0,-0x4d0(%rbp)
               :   48156:	cmpq   $0x0,-0x4c0(%rbp)
               :   4815e:	jne    48f41 <_IO_vfprintf+0x2cb1>
               :   48164:	cmpq   $0xffffffffffffffff,-0x4e0(%rbp)
               :   4816c:	je     485f3 <_IO_vfprintf+0x2363>
               :   48172:	mov    -0x4b8(%rbp),%rax
               :   48179:	mov    %rax,-0x4a0(%rbp)
               :   48180:	cmpb   $0x0,(%rax)
               :   48183:	je     48637 <_IO_vfprintf+0x23a7>
               :   48189:	mov    %rax,%rdi
               :   4818c:	lea    -0x498(%rbp),%rax
               :   48193:	xor    %ecx,%ecx
               :   48195:	xor    %r9d,%r9d
               :   48198:	mov    %rbx,-0x558(%rbp)
               :   4819f:	mov    %r14,-0x560(%rbp)
               :   481a6:	mov    %r15,-0x568(%rbp)
               :   481ad:	xor    %r12d,%r12d
               :   481b0:	mov    $0x900,%r13d
               :   481b6:	mov    %rax,-0x4c0(%rbp)
               :   481bd:	mov    -0x4d0(%rbp),%rbx
               :   481c4:	mov    %rcx,%r14
               :   481c7:	mov    %r9,%r15
               :   481ca:	jmp    481d3 <_IO_vfprintf+0x1f43>
               :   481cc:	nopl   0x0(%rax)
               :   481d0:	mov    %rcx,%rdi
               :   481d3:	mov    -0x4c0(%rbp),%rcx
               :   481da:	add    %rbx,%r15
               :   481dd:	mov    %r12,%rsi
               :   481e0:	mov    %r15,%rdx
               :   481e3:	add    $0x1,%r14
               :   481e7:	callq  67ca0 <__parse_one_specmb>
               :   481ec:	mov    0x20(%r15),%rcx
               :   481f0:	add    %rax,%r12
               :   481f3:	mov    %rcx,-0x4a0(%rbp)
               :   481fa:	cmpb   $0x0,(%rcx)
               :   481fd:	je     48280 <_IO_vfprintf+0x1ff0>
               :   48203:	lea    (%r14,%r14,8),%r9
               :   48207:	lea    0x0(,%r9,8),%r15
               :   4820f:	cmp    %r15,%r13
               :   48212:	ja     481d0 <_IO_vfprintf+0x1f40>
               :   48214:	lea    0xf(%r13,%r13,1),%r10
               :   48219:	mov    %rcx,-0x4d8(%rbp)
               :   48220:	xor    %edx,%edx
               :   48222:	mov    $0x10,%ecx
               :   48227:	mov    %rbx,%rsi
               :   4822a:	and    $0xfffffffffffffff0,%r10
               :   4822e:	lea    0x1e(%r10),%rax
               :   48232:	add    %r10,%r13
               :   48235:	div    %rcx
               :   48238:	mov    %r15,%rdx
               :   4823b:	shl    $0x4,%rax
               :   4823f:	sub    %rax,%rsp
               :   48242:	lea    0xf(%rsp),%r11
               :   48247:	and    $0xfffffffffffffff0,%r11
               :   4824b:	lea    (%r11,%r10,1),%rax
               :   4824f:	mov    %r11,%rdi
               :   48252:	cmp    %rax,%rbx
               :   48255:	cmove  %r13,%r10
               :   48259:	mov    %r10,-0x4d0(%rbp)
               :   48260:	callq  84b10 <__GI_memmove>
               :   48265:	mov    -0x4d0(%rbp),%r10
               :   4826c:	mov    %rax,%rbx
               :   4826f:	mov    -0x4d8(%rbp),%rcx
               :   48276:	mov    %r10,%r13
               :   48279:	jmpq   481d0 <_IO_vfprintf+0x1f40>
               :   4827e:	xchg   %ax,%ax
               :   48280:	mov    -0x498(%rbp),%r9
               :   48287:	mov    %r14,-0x530(%rbp)
               :   4828e:	mov    %rbx,-0x4d0(%rbp)
               :   48295:	mov    -0x560(%rbp),%r14
               :   4829c:	mov    -0x558(%rbp),%rbx
               :   482a3:	mov    -0x568(%rbp),%r15
               :   482aa:	cmp    %r9,%r12
               :   482ad:	cmovae %r12,%r9
               :   482b1:	cmp    $0x5555555,%r9
               :   482b8:	ja     48f52 <_IO_vfprintf+0x2cc2>
               :   482be:	lea    (%r9,%r9,2),%r12
               :   482c2:	shl    $0x3,%r12
               :   482c6:	cmp    $0x1000,%r12
               :   482cd:	mov    %r12,%r13
               :   482d0:	ja     48ff2 <_IO_vfprintf+0x2d62>
               :   482d6:	lea    0x1e(%r13),%rax
               :   482da:	and    $0xfffffffffffffff0,%rax
               :   482de:	sub    %rax,%rsp
               :   482e1:	lea    0xf(%rsp),%rax
               :   482e6:	mov    %rax,-0x4d8(%rbp)
               :   482ed:	andq   $0xfffffffffffffff0,-0x4d8(%rbp)
               :   482f5:	mov    %r9,%rax
               :   482f8:	lea    0x0(,%r9,4),%rdx
               :   48300:	mov    0x74(%rbx),%esi
               :   48303:	shl    $0x4,%rax
               :   48307:	add    -0x4d8(%rbp),%rax
               :   4830e:	mov    %r9,-0x558(%rbp)
               :   48315:	shl    $0x1d,%esi
               :   48318:	sar    $0x1f,%esi
               :   4831b:	lea    (%rax,%rdx,1),%r12
               :   4831f:	mov    %rax,-0x4c0(%rbp)
               :   48326:	mov    %r12,%rdi
               :   48329:	callq  84d40 <memset>
               :   4832e:	xor    %r8d,%r8d
               :   48331:	cmpq   $0x0,-0x530(%rbp)
               :   48339:	mov    -0x4d0(%rbp),%r13
               :   48340:	mov    -0x558(%rbp),%r9
               :   48347:	je     4841c <_IO_vfprintf+0x218c>
               :   4834d:	mov    %rbx,-0x560(%rbp)
               :   48354:	mov    %r14,-0x568(%rbp)
               :   4835b:	mov    %r8,%r14
               :   4835e:	mov    %r15,-0x570(%rbp)
               :   48365:	mov    %r9,-0x558(%rbp)
               :   4836c:	mov    %r13,%r15
               :   4836f:	mov    -0x4c0(%rbp),%rbx
               :   48376:	mov    -0x530(%rbp),%r13
               :   4837d:	jmp    483a4 <_IO_vfprintf+0x2114>
               :   4837f:	nop
               :   48380:	movslq 0x30(%r15),%rax
               :   48384:	mov    0x34(%r15),%edx
               :   48388:	mov    %edx,(%r12,%rax,4)
               :   4838c:	movslq 0x30(%r15),%rax
               :   48390:	mov    0x40(%r15),%edx
               :   48394:	mov    %edx,(%rbx,%rax,4)
               :   48397:	add    $0x1,%r14
               :   4839b:	add    $0x48,%r15
               :   4839f:	cmp    %r13,%r14
               :   483a2:	je     48400 <_IO_vfprintf+0x2170>
               :   483a4:	movslq 0x2c(%r15),%rax
               :   483a8:	cmp    $0xffffffff,%eax
               :   483ab:	je     483b5 <_IO_vfprintf+0x2125>
               :   483ad:	movl   $0x0,(%r12,%rax,4)
               :   483b5:	movslq 0x28(%r15),%rax
               :   483b9:	cmp    $0xffffffff,%eax
               :   483bc:	je     483c6 <_IO_vfprintf+0x2136>
               :   483be:	movl   $0x0,(%r12,%rax,4)
               :   483c6:	mov    0x38(%r15),%rsi
               :   483ca:	test   %rsi,%rsi
               :   483cd:	je     48397 <_IO_vfprintf+0x2107>
               :   483cf:	cmp    $0x1,%rsi
               :   483d3:	je     48380 <_IO_vfprintf+0x20f0>
               :   483d5:	movslq 0x30(%r15),%rdx
               :   483d9:	movslq 0x8(%r15),%rax
               :   483dd:	mov    %r15,%rdi
               :   483e0:	mov    0x35a369(%rip),%r11        # 3a2750 <__printf_arginfo_table>
               :   483e7:	shl    $0x2,%rdx
               :   483eb:	lea    (%rbx,%rdx,1),%rcx
               :   483ef:	add    %r12,%rdx
               :   483f2:	callq  *(%r11,%rax,8)
               :   483f6:	jmp    48397 <_IO_vfprintf+0x2107>
               :   483f8:	nopl   0x0(%rax,%rax,1)
               :   48400:	mov    -0x558(%rbp),%r9
               :   48407:	mov    -0x560(%rbp),%rbx
               :   4840e:	mov    -0x568(%rbp),%r14
               :   48415:	mov    -0x570(%rbp),%r15
               :   4841c:	xor    %r13d,%r13d
               :   4841f:	test   %r9,%r9
               :   48422:	mov    -0x4d8(%rbp),%r8
               :   48429:	mov    $0x10,%ecx
               :   4842e:	lea    -0x458(%rbp),%r10
               :   48435:	je     47137 <_IO_vfprintf+0xea7>
               :   4843b:	nopl   0x0(%rax,%rax,1)
               :   48440:	movslq (%r12,%r13,4),%rax
               :   48444:	cmp    $0x5,%eax
               :   48447:	jg     484a0 <_IO_vfprintf+0x2210>
               :   48449:	cmp    $0x3,%eax
               :   4844c:	jge    48500 <_IO_vfprintf+0x2270>
               :   48452:	cmp    $0x1,%eax
               :   48455:	jg     48528 <_IO_vfprintf+0x2298>
               :   4845b:	test   %eax,%eax
               :   4845d:	nopl   (%rax)
               :   48460:	jns    48528 <_IO_vfprintf+0x2298>
               :   48466:	cmp    $0xffffffff,%eax
               :   48469:	jne    485b0 <_IO_vfprintf+0x2320>
               :   4846f:	testb  $0x4,0x74(%rbx)
               :   48473:	jne    485d3 <_IO_vfprintf+0x2343>
               :   48479:	lea    0x11fe60(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   48480:	lea    0x1179f1(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   48487:	lea    0x117a10(%rip),%rdi        # 15fe9e <__PRETTY_FUNCTION__.8053+0x8f>
               :   4848e:	mov    $0x748,%edx
               :   48493:	callq  2e190 <__assert_fail>
               :   48498:	nopl   0x0(%rax,%rax,1)
               :   484a0:	cmp    $0x100,%eax
               :   484a5:	je     48500 <_IO_vfprintf+0x2270>
               :   484a7:	jle    48568 <_IO_vfprintf+0x22d8>
               :   484ad:	cmp    $0x200,%eax
               :   484b2:	je     48500 <_IO_vfprintf+0x2270>
               :   484b4:	cmp    $0x400,%eax
               :   484b9:	je     48528 <_IO_vfprintf+0x2298>
               :   484bb:	cmp    $0x107,%eax
               :   484c0:	jne    485b0 <_IO_vfprintf+0x2320>
               :   484c6:	mov    -0x450(%rbp),%rax
               :   484cd:	add    $0xf,%rax
               :   484d1:	and    $0xfffffffffffffff0,%rax
               :   484d5:	lea    0x10(%rax),%rdx
               :   484d9:	mov    %rdx,-0x450(%rbp)
               :   484e0:	fldt   (%rax)
               :   484e2:	fstpt  (%r8)
               :   484e5:	nopl   (%rax)
               :   484e8:	add    $0x1,%r13
               :   484ec:	add    $0x10,%r8
               :   484f0:	cmp    %r9,%r13
               :   484f3:	jne    48440 <_IO_vfprintf+0x21b0>
               :   484f9:	jmpq   47137 <_IO_vfprintf+0xea7>
               :   484fe:	xchg   %ax,%ax
               :   48500:	mov    -0x458(%rbp),%edx
               :   48506:	cmp    $0x30,%edx
               :   48509:	jae    48550 <_IO_vfprintf+0x22c0>
               :   4850b:	mov    %edx,%eax
               :   4850d:	add    -0x448(%rbp),%rax
               :   48514:	add    $0x8,%edx
               :   48517:	mov    %edx,-0x458(%rbp)
               :   4851d:	mov    (%rax),%rax
               :   48520:	mov    %rax,(%r8)
               :   48523:	jmp    484e8 <_IO_vfprintf+0x2258>
               :   48525:	nopl   (%rax)
               :   48528:	mov    -0x458(%rbp),%edx
               :   4852e:	cmp    $0x30,%edx
               :   48531:	jae    4859b <_IO_vfprintf+0x230b>
               :   48533:	mov    %edx,%eax
               :   48535:	add    -0x448(%rbp),%rax
               :   4853c:	add    $0x8,%edx
               :   4853f:	mov    %edx,-0x458(%rbp)
               :   48545:	mov    (%rax),%eax
               :   48547:	mov    %eax,(%r8)
               :   4854a:	jmp    484e8 <_IO_vfprintf+0x2258>
               :   4854c:	nopl   0x0(%rax)
               :   48550:	mov    -0x450(%rbp),%rax
               :   48557:	lea    0x8(%rax),%rdx
               :   4855b:	mov    %rdx,-0x450(%rbp)
               :   48562:	jmp    4851d <_IO_vfprintf+0x228d>
               :   48564:	nopl   0x0(%rax)
               :   48568:	cmp    $0x7,%eax
               :   4856b:	jg     485b0 <_IO_vfprintf+0x2320>
               :   4856d:	mov    -0x454(%rbp),%edx
               :   48573:	cmp    $0xb0,%edx
               :   48579:	jae    485df <_IO_vfprintf+0x234f>
               :   4857b:	mov    %edx,%eax
               :   4857d:	add    -0x448(%rbp),%rax
               :   48584:	add    $0x10,%edx
               :   48587:	mov    %edx,-0x454(%rbp)
               :   4858d:	movsd  (%rax),%xmm0
               :   48591:	movsd  %xmm0,(%r8)
               :   48596:	jmpq   484e8 <_IO_vfprintf+0x2258>
               :   4859b:	mov    -0x450(%rbp),%rax
               :   485a2:	lea    0x8(%rax),%rdx
               :   485a6:	mov    %rdx,-0x450(%rbp)
               :   485ad:	jmp    48545 <_IO_vfprintf+0x22b5>
               :   485af:	nop
               :   485b0:	test   $0x8,%ah
               :   485b3:	jne    48500 <_IO_vfprintf+0x2270>
               :   485b9:	mov    0x35a198(%rip),%rdx        # 3a2758 <__printf_va_arg_table>
               :   485c0:	test   %rdx,%rdx
               :   485c3:	jne    48f70 <_IO_vfprintf+0x2ce0>
               :   485c9:	fldz   
               :   485cb:	fstpt  (%r8)
               :   485ce:	jmpq   484e8 <_IO_vfprintf+0x2258>
               :   485d3:	lea    0x11bb8e(%rip),%rdi        # 164168 <__PRETTY_FUNCTION__.9742+0x102d>
               :   485da:	callq  72850 <__libc_fatal>
               :   485df:	mov    -0x450(%rbp),%rax
               :   485e6:	lea    0x8(%rax),%rdx
               :   485ea:	mov    %rdx,-0x450(%rbp)
               :   485f1:	jmp    4858d <_IO_vfprintf+0x22fd>
               :   485f3:	mov    0x3587b6(%rip),%rax        # 3a0db0 <_DYNAMIC+0x230>
               :   485fa:	mov    %fs:(%rax),%rax
               :   485fe:	mov    0x8(%rax),%rax
               :   48602:	mov    0x48(%rax),%rcx
               :   48606:	mov    0x50(%rax),%rax
               :   4860a:	mov    %rax,-0x4e0(%rbp)
               :   48611:	movzbl (%rax),%eax
               :   48614:	mov    %rcx,-0x4f8(%rbp)
               :   4861b:	cmp    $0x7f,%al
               :   4861d:	je     48627 <_IO_vfprintf+0x2397>
               :   4861f:	test   %al,%al
               :   48621:	jne    48172 <_IO_vfprintf+0x1ee2>
               :   48627:	movq   $0x0,-0x4e0(%rbp)
               :   48632:	jmpq   48172 <_IO_vfprintf+0x1ee2>
               :   48637:	movq   $0x0,-0x530(%rbp)
               :   48642:	xor    %r13d,%r13d
               :   48645:	xor    %r9d,%r9d
               :   48648:	jmpq   482d6 <_IO_vfprintf+0x2046>
               :   4864d:	movslq -0x4e4(%rbp),%rax
               :   48654:	imul   $0x48,%rax,%rax
               :   48658:	add    -0x4d0(%rbp),%rax
               :   4865f:	je     4897d <_IO_vfprintf+0x26ed>
               :   48665:	movslq 0x30(%rax),%rax
               :   48669:	mov    -0x4d8(%rbp),%rcx
               :   48670:	shl    $0x4,%rax
               :   48674:	mov    (%rcx,%rax,1),%r13
               :   48678:	test   %r13,%r13
               :   4867b:	je     48917 <_IO_vfprintf+0x2687>
               :   48681:	cmpb   $0x53,-0x522(%rbp)
               :   48688:	je     48893 <_IO_vfprintf+0x2603>
               :   4868e:	cmpl   $0x0,-0x568(%rbp)
               :   48695:	jne    48893 <_IO_vfprintf+0x2603>
               :   4869b:	mov    -0x560(%rbp),%eax
               :   486a1:	cmp    $0xffffffff,%eax
               :   486a4:	je     4886f <_IO_vfprintf+0x25df>
               :   486aa:	movslq %eax,%rsi
               :   486ad:	mov    %r13,%rdi
               :   486b0:	callq  814f0 <strnlen>
               :   486b5:	movl   $0x0,-0x560(%rbp)
               :   486bf:	mov    %rax,%r12
               :   486c2:	mov    -0x558(%rbp),%ecx
               :   486c8:	mov    %r12d,-0x568(%rbp)
               :   486cf:	sub    %r12d,%ecx
               :   486d2:	js     4881f <_IO_vfprintf+0x258f>
               :   486d8:	cmpl   $0x0,-0x584(%rbp)
               :   486df:	jne    48742 <_IO_vfprintf+0x24b2>
               :   486e1:	test   %ecx,%ecx
               :   486e3:	je     48742 <_IO_vfprintf+0x24b2>
               :   486e5:	movslq %ecx,%r8
               :   486e8:	mov    $0x20,%esi
               :   486ed:	mov    %rbx,%rdi
               :   486f0:	mov    %r8,%rdx
               :   486f3:	mov    %r8,-0x558(%rbp)
               :   486fa:	mov    %ecx,-0x570(%rbp)
               :   48700:	callq  6a910 <_IO_padn>
               :   48705:	mov    -0x558(%rbp),%r8
               :   4870c:	cmp    %rax,%r8
               :   4870f:	jne    467fb <_IO_vfprintf+0x56b>
               :   48715:	mov    -0x4a8(%rbp),%ecx
               :   4871b:	cmp    $0x7ffffffe,%ecx
               :   48721:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   48727:	mov    $0x7fffffff,%eax
               :   4872c:	sub    %ecx,%eax
               :   4872e:	mov    -0x570(%rbp),%ecx
               :   48734:	add    %ecx,-0x4a8(%rbp)
               :   4873a:	cmp    %eax,%ecx
               :   4873c:	ja     473af <_IO_vfprintf+0x111f>
               :   48742:	cmpl   $0x0,-0x4a8(%rbp)
               :   48749:	mov    %ecx,-0x558(%rbp)
               :   4874f:	js     47c99 <_IO_vfprintf+0x1a09>
               :   48755:	mov    0xd8(%rbx),%rax
               :   4875c:	mov    %r12,%rdx
               :   4875f:	mov    %r13,%rsi
               :   48762:	mov    %rbx,%rdi
               :   48765:	callq  *0x38(%rax)
               :   48768:	cmp    %rax,%r12
               :   4876b:	mov    -0x558(%rbp),%ecx
               :   48771:	jne    467fb <_IO_vfprintf+0x56b>
               :   48777:	mov    $0x7fffffff,%r8d
               :   4877d:	mov    %r8d,%eax
               :   48780:	sub    -0x4a8(%rbp),%eax
               :   48786:	cltq   
               :   48788:	cmp    %rax,%r12
               :   4878b:	ja     473af <_IO_vfprintf+0x111f>
               :   48791:	mov    -0x568(%rbp),%eax
               :   48797:	add    %eax,-0x4a8(%rbp)
               :   4879d:	cmpl   $0x0,-0x584(%rbp)
               :   487a4:	je     48805 <_IO_vfprintf+0x2575>
               :   487a6:	test   %ecx,%ecx
               :   487a8:	mov    %r8d,-0x568(%rbp)
               :   487af:	je     48805 <_IO_vfprintf+0x2575>
               :   487b1:	movslq %ecx,%r12
               :   487b4:	mov    $0x20,%esi
               :   487b9:	mov    %rbx,%rdi
               :   487bc:	mov    %r12,%rdx
               :   487bf:	mov    %ecx,-0x558(%rbp)
               :   487c5:	callq  6a910 <_IO_padn>
               :   487ca:	cmp    %rax,%r12
               :   487cd:	jne    467fb <_IO_vfprintf+0x56b>
               :   487d3:	mov    -0x4a8(%rbp),%ecx
               :   487d9:	cmp    $0x7ffffffe,%ecx
               :   487df:	ja     49062 <_IO_vfprintf+0x2dd2>
               :   487e5:	mov    -0x568(%rbp),%r8d
               :   487ec:	mov    %r8d,%eax
               :   487ef:	sub    %ecx,%eax
               :   487f1:	mov    -0x558(%rbp),%ecx
               :   487f7:	add    %ecx,-0x4a8(%rbp)
               :   487fd:	cmp    %eax,%ecx
               :   487ff:	ja     473af <_IO_vfprintf+0x111f>
               :   48805:	cmpl   $0x0,-0x560(%rbp)
               :   4880c:	je     470a9 <_IO_vfprintf+0xe19>
               :   48812:	mov    %r13,%rdi
               :   48815:	callq  1f460 <*ABS*+0x87820@plt>
               :   4881a:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   4881f:	cmpl   $0x0,-0x4a8(%rbp)
               :   48826:	js     47c99 <_IO_vfprintf+0x1a09>
               :   4882c:	mov    0xd8(%rbx),%rax
               :   48833:	mov    %r12,%rdx
               :   48836:	mov    %r13,%rsi
               :   48839:	mov    %rbx,%rdi
               :   4883c:	callq  *0x38(%rax)
               :   4883f:	cmp    %rax,%r12
               :   48842:	jne    467fb <_IO_vfprintf+0x56b>
               :   48848:	mov    $0x7fffffff,%eax
               :   4884d:	sub    -0x4a8(%rbp),%eax
               :   48853:	mov    -0x568(%rbp),%ecx
               :   48859:	add    %ecx,-0x4a8(%rbp)
               :   4885f:	cltq   
               :   48861:	cmp    %rax,%r12
               :   48864:	jbe    470a9 <_IO_vfprintf+0xe19>
               :   4886a:	jmpq   473af <_IO_vfprintf+0x111f>
               :   4886f:	xor    %eax,%eax
               :   48871:	or     $0xffffffffffffffff,%rcx
               :   48875:	mov    %r13,%rdi
               :   48878:	repnz scas %es:(%rdi),%al
               :   4887a:	movl   $0x0,-0x560(%rbp)
               :   48884:	mov    %rcx,%rsi
               :   48887:	not    %rsi
               :   4888a:	lea    -0x1(%rsi),%r12
               :   4888e:	jmpq   486c2 <_IO_vfprintf+0x2432>
               :   48893:	lea    -0x480(%rbp),%rax
               :   4889a:	mov    %r13,-0x470(%rbp)
               :   488a1:	movq   $0x0,-0x480(%rbp)
               :   488ac:	mov    %rax,-0x578(%rbp)
               :   488b3:	mov    -0x560(%rbp),%eax
               :   488b9:	test   %eax,%eax
               :   488bb:	js     48e14 <_IO_vfprintf+0x2b84>
               :   488c1:	movslq %eax,%r12
               :   488c4:	cmp    $0x1000,%r12
               :   488cb:	ja     4894a <_IO_vfprintf+0x26ba>
               :   488cd:	lea    0x1e(%r12),%rax
               :   488d2:	movl   $0x0,-0x560(%rbp)
               :   488dc:	and    $0xfffffffffffffff0,%rax
               :   488e0:	sub    %rax,%rsp
               :   488e3:	lea    0xf(%rsp),%r13
               :   488e8:	and    $0xfffffffffffffff0,%r13
               :   488ec:	mov    -0x578(%rbp),%rcx
               :   488f3:	lea    -0x470(%rbp),%rsi
               :   488fa:	mov    %r12,%rdx
               :   488fd:	mov    %r13,%rdi
               :   48900:	callq  9bfb0 <wcsrtombs>
               :   48905:	cmp    $0xffffffffffffffff,%rax
               :   48909:	mov    %rax,%r12
               :   4890c:	jne    486c2 <_IO_vfprintf+0x2432>
               :   48912:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48917:	cmpl   $0x5,-0x560(%rbp)
               :   4891e:	jg     48e9f <_IO_vfprintf+0x2c0f>
               :   48924:	cmpl   $0xffffffff,-0x560(%rbp)
               :   4892b:	je     48e9f <_IO_vfprintf+0x2c0f>
               :   48931:	movl   $0x0,-0x560(%rbp)
               :   4893b:	xor    %r12d,%r12d
               :   4893e:	lea    0x11726f(%rip),%r13        # 15fbb4 <not_available+0x117>
               :   48945:	jmpq   486c2 <_IO_vfprintf+0x2432>
               :   4894a:	mov    %r12,%rdi
               :   4894d:	callq  f0fd0 <__libc_alloca_cutoff>
               :   48952:	test   %eax,%eax
               :   48954:	jne    488cd <_IO_vfprintf+0x263d>
               :   4895a:	mov    %r12,%rdi
               :   4895d:	callq  1f400 <memalign@plt>
               :   48962:	test   %rax,%rax
               :   48965:	mov    %rax,%r13
               :   48968:	je     467fb <_IO_vfprintf+0x56b>
               :   4896e:	movl   $0x1,-0x560(%rbp)
               :   48978:	jmpq   488ec <_IO_vfprintf+0x265c>
               :   4897d:	mov    (%r15),%edx
               :   48980:	cmp    $0x30,%edx
               :   48983:	jae    48be8 <_IO_vfprintf+0x2958>
               :   48989:	mov    %edx,%eax
               :   4898b:	add    0x10(%r15),%rax
               :   4898f:	add    $0x8,%edx
               :   48992:	mov    %edx,(%r15)
               :   48995:	mov    (%rax),%r13
               :   48998:	jmpq   48678 <_IO_vfprintf+0x23e8>
               :   4899d:	movslq -0x4e4(%rbp),%rax
               :   489a4:	mov    -0x4d0(%rbp),%rcx
               :   489ab:	imul   $0x48,%rax,%rax
               :   489af:	lea    (%rcx,%rax,1),%r12
               :   489b3:	mov    0x38(%r12),%rsi
               :   489b8:	lea    0x1e(,%rsi,8),%rax
               :   489c0:	and    $0xfffffffffffffff0,%rax
               :   489c4:	sub    %rax,%rsp
               :   489c7:	xor    %eax,%eax
               :   489c9:	lea    0xf(%rsp),%rdx
               :   489ce:	and    $0xfffffffffffffff0,%rdx
               :   489d2:	jmp    489ed <_IO_vfprintf+0x275d>
               :   489d4:	mov    %eax,%ecx
               :   489d6:	add    0x30(%r12),%ecx
               :   489db:	add    $0x1,%eax
               :   489de:	shl    $0x4,%rcx
               :   489e2:	add    -0x4d8(%rbp),%rcx
               :   489e9:	mov    %rcx,(%rdx,%rdi,8)
               :   489ed:	mov    %eax,%edi
               :   489ef:	cmp    %rdi,%rsi
               :   489f2:	ja     489d4 <_IO_vfprintf+0x2744>
               :   489f4:	mov    0x28(%rbx),%rax
               :   489f8:	cmp    0x30(%rbx),%rax
               :   489fc:	jae    48dde <_IO_vfprintf+0x2b4e>
               :   48a02:	lea    0x1(%rax),%rdx
               :   48a06:	mov    %rdx,0x28(%rbx)
               :   48a0a:	movb   $0x25,(%rax)
               :   48a0d:	movzbl 0xc(%r12),%eax
               :   48a13:	test   $0x8,%al
               :   48a15:	je     48dd3 <_IO_vfprintf+0x2b43>
               :   48a1b:	mov    0x28(%rbx),%rax
               :   48a1f:	cmp    0x30(%rbx),%rax
               :   48a23:	jae    48db8 <_IO_vfprintf+0x2b28>
               :   48a29:	lea    0x1(%rax),%rdx
               :   48a2d:	mov    %rdx,0x28(%rbx)
               :   48a31:	movb   $0x23,(%rax)
               :   48a34:	movzbl 0xc(%r12),%eax
               :   48a3a:	mov    $0x2,%r13d
               :   48a40:	test   %al,%al
               :   48a42:	jns    48a67 <_IO_vfprintf+0x27d7>
               :   48a44:	mov    0x28(%rbx),%rax
               :   48a48:	cmp    0x30(%rbx),%rax
               :   48a4c:	jae    48df9 <_IO_vfprintf+0x2b69>
               :   48a52:	lea    0x1(%rax),%rdx
               :   48a56:	mov    %rdx,0x28(%rbx)
               :   48a5a:	movb   $0x27,(%rax)
               :   48a5d:	movzbl 0xc(%r12),%eax
               :   48a63:	add    $0x1,%r13d
               :   48a67:	test   $0x40,%al
               :   48a69:	je     48d60 <_IO_vfprintf+0x2ad0>
               :   48a6f:	mov    0x28(%rbx),%rax
               :   48a73:	cmp    0x30(%rbx),%rax
               :   48a77:	jae    48c70 <_IO_vfprintf+0x29e0>
               :   48a7d:	lea    0x1(%rax),%rdx
               :   48a81:	mov    %rdx,0x28(%rbx)
               :   48a85:	movb   $0x2b,(%rax)
               :   48a88:	movzbl 0xc(%r12),%eax
               :   48a8e:	add    $0x1,%r13d
               :   48a92:	test   $0x20,%al
               :   48a94:	je     48ab3 <_IO_vfprintf+0x2823>
               :   48a96:	mov    0x28(%rbx),%rax
               :   48a9a:	cmp    0x30(%rbx),%rax
               :   48a9e:	jae    48d82 <_IO_vfprintf+0x2af2>
               :   48aa4:	lea    0x1(%rax),%rdx
               :   48aa8:	mov    %rdx,0x28(%rbx)
               :   48aac:	movb   $0x2d,(%rax)
               :   48aaf:	add    $0x1,%r13d
               :   48ab3:	cmpl   $0x30,0x10(%r12)
               :   48ab9:	je     48bf9 <_IO_vfprintf+0x2969>
               :   48abf:	testb  $0x8,0xd(%r12)
               :   48ac5:	je     48ae4 <_IO_vfprintf+0x2854>
               :   48ac7:	mov    0x28(%rbx),%rax
               :   48acb:	cmp    0x30(%rbx),%rax
               :   48acf:	jae    48d26 <_IO_vfprintf+0x2a96>
               :   48ad5:	lea    0x1(%rax),%rdx
               :   48ad9:	mov    %rdx,0x28(%rbx)
               :   48add:	movb   $0x49,(%rax)
               :   48ae0:	add    $0x1,%r13d
               :   48ae4:	mov    0x4(%r12),%eax
               :   48ae9:	test   %eax,%eax
               :   48aeb:	jne    48c8b <_IO_vfprintf+0x29fb>
               :   48af1:	cmpl   $0xffffffff,(%r12)
               :   48af6:	je     48b86 <_IO_vfprintf+0x28f6>
               :   48afc:	mov    0x28(%rbx),%rax
               :   48b00:	cmp    0x30(%rbx),%rax
               :   48b04:	jae    48c3e <_IO_vfprintf+0x29ae>
               :   48b0a:	lea    0x1(%rax),%rdx
               :   48b0e:	mov    %rdx,0x28(%rbx)
               :   48b12:	movb   $0x2e,(%rax)
               :   48b15:	cmp    $0x7fffffff,%r13d
               :   48b1c:	je     467fb <_IO_vfprintf+0x56b>
               :   48b22:	movslq (%r12),%rdi
               :   48b26:	lea    -0x464(%rbp),%r8
               :   48b2d:	mov    $0xa,%edx
               :   48b32:	xor    %ecx,%ecx
               :   48b34:	add    $0x1,%r13d
               :   48b38:	mov    %r8,%rsi
               :   48b3b:	mov    %r8,-0x558(%rbp)
               :   48b42:	callq  460b0 <_itoa_word>
               :   48b47:	mov    %rax,%rdx
               :   48b4a:	jmp    48b7d <_IO_vfprintf+0x28ed>
               :   48b4c:	add    $0x1,%rdx
               :   48b50:	mov    0x28(%rbx),%rax
               :   48b54:	cmp    0x30(%rbx),%rax
               :   48b58:	movzbl -0x1(%rdx),%ecx
               :   48b5c:	jae    48c17 <_IO_vfprintf+0x2987>
               :   48b62:	lea    0x1(%rax),%rsi
               :   48b66:	mov    %rsi,0x28(%rbx)
               :   48b6a:	mov    %cl,(%rax)
               :   48b6c:	cmp    $0x7fffffff,%r13d
               :   48b73:	je     467fb <_IO_vfprintf+0x56b>
               :   48b79:	add    $0x1,%r13d
               :   48b7d:	cmp    -0x558(%rbp),%rdx
               :   48b84:	jb     48b4c <_IO_vfprintf+0x28bc>
               :   48b86:	mov    0x8(%r12),%edx
               :   48b8b:	test   %edx,%edx
               :   48b8d:	je     48bb8 <_IO_vfprintf+0x2928>
               :   48b8f:	mov    0x28(%rbx),%rax
               :   48b93:	cmp    0x30(%rbx),%rax
               :   48b97:	jae    48d0d <_IO_vfprintf+0x2a7d>
               :   48b9d:	lea    0x1(%rax),%rcx
               :   48ba1:	mov    %rcx,0x28(%rbx)
               :   48ba5:	mov    %dl,(%rax)
               :   48ba7:	cmp    $0x7fffffff,%r13d
               :   48bae:	je     467fb <_IO_vfprintf+0x56b>
               :   48bb4:	add    $0x1,%r13d
               :   48bb8:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   48bc2:	ja     48d41 <_IO_vfprintf+0x2ab1>
               :   48bc8:	mov    $0x7fffffff,%eax
               :   48bcd:	sub    -0x4a8(%rbp),%eax
               :   48bd3:	add    %r13d,-0x4a8(%rbp)
               :   48bda:	cmp    %eax,%r13d
               :   48bdd:	jbe    470a9 <_IO_vfprintf+0xe19>
               :   48be3:	jmpq   473af <_IO_vfprintf+0x111f>
               :   48be8:	mov    0x8(%r15),%rax
               :   48bec:	lea    0x8(%rax),%rdx
               :   48bf0:	mov    %rdx,0x8(%r15)
               :   48bf4:	jmpq   48995 <_IO_vfprintf+0x2705>
               :   48bf9:	mov    0x28(%rbx),%rax
               :   48bfd:	cmp    0x30(%rbx),%rax
               :   48c01:	jae    48c59 <_IO_vfprintf+0x29c9>
               :   48c03:	lea    0x1(%rax),%rdx
               :   48c07:	mov    %rdx,0x28(%rbx)
               :   48c0b:	movb   $0x30,(%rax)
               :   48c0e:	add    $0x1,%r13d
               :   48c12:	jmpq   48abf <_IO_vfprintf+0x282f>
               :   48c17:	movzbl %cl,%esi
               :   48c1a:	mov    %rbx,%rdi
               :   48c1d:	mov    %rdx,-0x560(%rbp)
               :   48c24:	callq  75590 <__overflow>
               :   48c29:	add    $0x1,%eax
               :   48c2c:	mov    -0x560(%rbp),%rdx
               :   48c33:	jne    48b6c <_IO_vfprintf+0x28dc>
               :   48c39:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48c3e:	mov    $0x2e,%esi
               :   48c43:	mov    %rbx,%rdi
               :   48c46:	callq  75590 <__overflow>
               :   48c4b:	add    $0x1,%eax
               :   48c4e:	jne    48b15 <_IO_vfprintf+0x2885>
               :   48c54:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48c59:	mov    $0x30,%esi
               :   48c5e:	mov    %rbx,%rdi
               :   48c61:	callq  75590 <__overflow>
               :   48c66:	add    $0x1,%eax
               :   48c69:	jne    48c0e <_IO_vfprintf+0x297e>
               :   48c6b:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48c70:	mov    $0x2b,%esi
               :   48c75:	mov    %rbx,%rdi
               :   48c78:	callq  75590 <__overflow>
               :   48c7d:	add    $0x1,%eax
               :   48c80:	jne    48a88 <_IO_vfprintf+0x27f8>
               :   48c86:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48c8b:	lea    -0x464(%rbp),%r8
               :   48c92:	mov    $0xa,%edx
               :   48c97:	movslq %eax,%rdi
               :   48c9a:	xor    %ecx,%ecx
               :   48c9c:	mov    %r8,%rsi
               :   48c9f:	mov    %r8,-0x558(%rbp)
               :   48ca6:	callq  460b0 <_itoa_word>
               :   48cab:	mov    %rax,%rdx
               :   48cae:	jmp    48ccb <_IO_vfprintf+0x2a3b>
               :   48cb0:	lea    0x1(%rax),%rsi
               :   48cb4:	mov    %rsi,0x28(%rbx)
               :   48cb8:	mov    %cl,(%rax)
               :   48cba:	cmp    $0x7fffffff,%r13d
               :   48cc1:	je     467fb <_IO_vfprintf+0x56b>
               :   48cc7:	add    $0x1,%r13d
               :   48ccb:	cmp    -0x558(%rbp),%rdx
               :   48cd2:	jae    48af1 <_IO_vfprintf+0x2861>
               :   48cd8:	add    $0x1,%rdx
               :   48cdc:	mov    0x28(%rbx),%rax
               :   48ce0:	cmp    0x30(%rbx),%rax
               :   48ce4:	movzbl -0x1(%rdx),%ecx
               :   48ce8:	jb     48cb0 <_IO_vfprintf+0x2a20>
               :   48cea:	movzbl %cl,%esi
               :   48ced:	mov    %rbx,%rdi
               :   48cf0:	mov    %rdx,-0x560(%rbp)
               :   48cf7:	callq  75590 <__overflow>
               :   48cfc:	add    $0x1,%eax
               :   48cff:	mov    -0x560(%rbp),%rdx
               :   48d06:	jne    48cba <_IO_vfprintf+0x2a2a>
               :   48d08:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48d0d:	movzbl %dl,%esi
               :   48d10:	mov    %rbx,%rdi
               :   48d13:	callq  75590 <__overflow>
               :   48d18:	add    $0x1,%eax
               :   48d1b:	jne    48ba7 <_IO_vfprintf+0x2917>
               :   48d21:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48d26:	mov    $0x49,%esi
               :   48d2b:	mov    %rbx,%rdi
               :   48d2e:	callq  75590 <__overflow>
               :   48d33:	add    $0x1,%eax
               :   48d36:	jne    48ae0 <_IO_vfprintf+0x2850>
               :   48d3c:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48d41:	lea    0x11f598(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   48d48:	lea    0x117129(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   48d4f:	lea    0x11b38a(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   48d56:	mov    $0x7ef,%edx
               :   48d5b:	callq  2e190 <__assert_fail>
               :   48d60:	test   $0x10,%al
               :   48d62:	je     48a92 <_IO_vfprintf+0x2802>
               :   48d68:	mov    0x28(%rbx),%rax
               :   48d6c:	cmp    0x30(%rbx),%rax
               :   48d70:	jae    48d9d <_IO_vfprintf+0x2b0d>
               :   48d72:	lea    0x1(%rax),%rdx
               :   48d76:	mov    %rdx,0x28(%rbx)
               :   48d7a:	movb   $0x20,(%rax)
               :   48d7d:	jmpq   48a88 <_IO_vfprintf+0x27f8>
               :   48d82:	mov    $0x2d,%esi
               :   48d87:	mov    %rbx,%rdi
               :   48d8a:	callq  75590 <__overflow>
               :   48d8f:	add    $0x1,%eax
               :   48d92:	jne    48aaf <_IO_vfprintf+0x281f>
               :   48d98:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48d9d:	mov    $0x20,%esi
               :   48da2:	mov    %rbx,%rdi
               :   48da5:	callq  75590 <__overflow>
               :   48daa:	add    $0x1,%eax
               :   48dad:	jne    48a88 <_IO_vfprintf+0x27f8>
               :   48db3:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48db8:	mov    $0x23,%esi
               :   48dbd:	mov    %rbx,%rdi
               :   48dc0:	callq  75590 <__overflow>
               :   48dc5:	add    $0x1,%eax
               :   48dc8:	jne    48a34 <_IO_vfprintf+0x27a4>
               :   48dce:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48dd3:	mov    $0x1,%r13d
               :   48dd9:	jmpq   48a40 <_IO_vfprintf+0x27b0>
               :   48dde:	mov    $0x25,%esi
               :   48de3:	mov    %rbx,%rdi
               :   48de6:	callq  75590 <__overflow>
               :   48deb:	add    $0x1,%eax
               :   48dee:	jne    48a0d <_IO_vfprintf+0x277d>
               :   48df4:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48df9:	mov    $0x27,%esi
               :   48dfe:	mov    %rbx,%rdi
               :   48e01:	callq  75590 <__overflow>
               :   48e06:	add    $0x1,%eax
               :   48e09:	jne    48a5d <_IO_vfprintf+0x27cd>
               :   48e0f:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48e14:	lea    -0x470(%rbp),%r10
               :   48e1b:	mov    -0x578(%rbp),%rcx
               :   48e22:	xor    %edx,%edx
               :   48e24:	xor    %edi,%edi
               :   48e26:	mov    %r10,%rsi
               :   48e29:	mov    %r10,-0x560(%rbp)
               :   48e30:	callq  9bfb0 <wcsrtombs>
               :   48e35:	cmp    $0xffffffffffffffff,%rax
               :   48e39:	mov    %rax,%r12
               :   48e3c:	je     467fb <_IO_vfprintf+0x56b>
               :   48e42:	cmpl   $0x0,-0x480(%rbp)
               :   48e49:	mov    -0x560(%rbp),%r10
               :   48e50:	jne    48f22 <_IO_vfprintf+0x2c92>
               :   48e56:	lea    0x1(%rax),%rdx
               :   48e5a:	mov    %r13,-0x470(%rbp)
               :   48e61:	cmp    $0x1000,%rdx
               :   48e68:	ja     48ebb <_IO_vfprintf+0x2c2b>
               :   48e6a:	lea    0x1e(%rdx),%rax
               :   48e6e:	movl   $0x0,-0x560(%rbp)
               :   48e78:	and    $0xfffffffffffffff0,%rax
               :   48e7c:	sub    %rax,%rsp
               :   48e7f:	lea    0xf(%rsp),%r13
               :   48e84:	and    $0xfffffffffffffff0,%r13
               :   48e88:	mov    -0x578(%rbp),%rcx
               :   48e8f:	mov    %r10,%rsi
               :   48e92:	mov    %r13,%rdi
               :   48e95:	callq  9bfb0 <wcsrtombs>
               :   48e9a:	jmpq   486c2 <_IO_vfprintf+0x2432>
               :   48e9f:	movl   $0x0,-0x560(%rbp)
               :   48ea9:	mov    $0x6,%r12d
               :   48eaf:	lea    0x116ff7(%rip),%r13        # 15fead <null>
               :   48eb6:	jmpq   486c2 <_IO_vfprintf+0x2432>
               :   48ebb:	mov    %rdx,%rdi
               :   48ebe:	mov    %r10,-0x568(%rbp)
               :   48ec5:	mov    %rdx,-0x560(%rbp)
               :   48ecc:	callq  f0fd0 <__libc_alloca_cutoff>
               :   48ed1:	test   %eax,%eax
               :   48ed3:	mov    -0x560(%rbp),%rdx
               :   48eda:	mov    -0x568(%rbp),%r10
               :   48ee1:	jne    48e6a <_IO_vfprintf+0x2bda>
               :   48ee3:	mov    %rdx,%rdi
               :   48ee6:	mov    %r10,-0x570(%rbp)
               :   48eed:	mov    %rdx,-0x568(%rbp)
               :   48ef4:	callq  1f400 <memalign@plt>
               :   48ef9:	test   %rax,%rax
               :   48efc:	mov    %rax,%r13
               :   48eff:	je     467fb <_IO_vfprintf+0x56b>
               :   48f05:	movl   $0x1,-0x560(%rbp)
               :   48f0f:	mov    -0x568(%rbp),%rdx
               :   48f16:	mov    -0x570(%rbp),%r10
               :   48f1d:	jmpq   48e88 <_IO_vfprintf+0x2bf8>
               :   48f22:	lea    0x11f3b7(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   48f29:	lea    0x116f48(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   48f30:	lea    0x116f4c(%rip),%rdi        # 15fe83 <__PRETTY_FUNCTION__.8053+0x74>
               :   48f37:	mov    $0x7d4,%edx
               :   48f3c:	callq  2e190 <__assert_fail>
               :   48f41:	mov    -0x4c0(%rbp),%rdi
               :   48f48:	callq  1f460 <*ABS*+0x87820@plt>
               :   48f4d:	jmpq   48164 <_IO_vfprintf+0x1ed4>
               :   48f52:	mov    0x357eff(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   48f59:	movq   $0x0,-0x4c0(%rbp)
               :   48f64:	movl   $0x4b,%fs:(%rax)
               :   48f6b:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   48f70:	cmpq   $0x0,-0x40(%rdx,%rax,8)
               :   48f76:	je     485c9 <_IO_vfprintf+0x2339>
               :   48f7c:	mov    -0x4c0(%rbp),%rax
               :   48f83:	xor    %edx,%edx
               :   48f85:	mov    %r9,-0x570(%rbp)
               :   48f8c:	mov    %rcx,-0x568(%rbp)
               :   48f93:	mov    %r8,-0x560(%rbp)
               :   48f9a:	mov    %r10,%rsi
               :   48f9d:	mov    %r10,-0x558(%rbp)
               :   48fa4:	movslq (%rax,%r13,4),%rax
               :   48fa8:	add    $0x1e,%rax
               :   48fac:	div    %rcx
               :   48faf:	shl    $0x4,%rax
               :   48fb3:	sub    %rax,%rsp
               :   48fb6:	lea    0xf(%rsp),%rdi
               :   48fbb:	and    $0xfffffffffffffff0,%rdi
               :   48fbf:	mov    %rdi,(%r8)
               :   48fc2:	movslq (%r12,%r13,4),%rdx
               :   48fc6:	mov    0x35978b(%rip),%rax        # 3a2758 <__printf_va_arg_table>
               :   48fcd:	callq  *-0x40(%rax,%rdx,8)
               :   48fd1:	mov    -0x558(%rbp),%r10
               :   48fd8:	mov    -0x560(%rbp),%r8
               :   48fdf:	mov    -0x568(%rbp),%rcx
               :   48fe6:	mov    -0x570(%rbp),%r9
               :   48fed:	jmpq   484e8 <_IO_vfprintf+0x2258>
               :   48ff2:	mov    %r12,%rdi
               :   48ff5:	mov    %r9,-0x4c0(%rbp)
               :   48ffc:	callq  f0fd0 <__libc_alloca_cutoff>
               :   49001:	test   %eax,%eax
               :   49003:	mov    -0x4c0(%rbp),%r9
               :   4900a:	jne    482d6 <_IO_vfprintf+0x2046>
               :   49010:	mov    %r12,%rdi
               :   49013:	mov    %r9,-0x4c0(%rbp)
               :   4901a:	callq  1f400 <memalign@plt>
               :   4901f:	test   %rax,%rax
               :   49022:	mov    %rax,-0x4f0(%rbp)
               :   49029:	je     49081 <_IO_vfprintf+0x2df1>
               :   4902b:	mov    %rax,-0x4d8(%rbp)
               :   49032:	mov    -0x4c0(%rbp),%r9
               :   49039:	jmpq   482f5 <_IO_vfprintf+0x2065>
               :   4903e:	mov    0x357e13(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   49045:	movl   $0x4b,%fs:(%rax)
               :   4904c:	jmpq   467f4 <_IO_vfprintf+0x564>
               :   49051:	mov    0x8(%r15),%rax
               :   49055:	lea    0x8(%rax),%rdx
               :   49059:	mov    %rdx,0x8(%r15)
               :   4905d:	jmpq   46f87 <_IO_vfprintf+0xcf7>
               :   49062:	lea    0x11f277(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   49069:	lea    0x116e08(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   49070:	lea    0x11b069(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   49077:	mov    $0x7d4,%edx
               :   4907c:	callq  2e190 <__assert_fail>
               :   49081:	movq   $0x0,-0x4c0(%rbp)
               :   4908c:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49091:	movslq -0x4e4(%rbp),%rsi
               :   49098:	imul   $0x48,%rsi,%rsi
               :   4909c:	add    -0x4d0(%rbp),%rsi
               :   490a3:	je     4916a <_IO_vfprintf+0x2eda>
               :   490a9:	movslq 0x30(%rsi),%rax
               :   490ad:	lea    -0x488(%rbp),%rdx
               :   490b4:	mov    %rbx,%rdi
               :   490b7:	shl    $0x4,%rax
               :   490bb:	add    -0x4d8(%rbp),%rax
               :   490c2:	mov    %rax,-0x488(%rbp)
               :   490c9:	callq  4de20 <__printf_fphex>
               :   490ce:	test   %eax,%eax
               :   490d0:	js     467fb <_IO_vfprintf+0x56b>
               :   490d6:	mov    -0x4a8(%rbp),%ecx
               :   490dc:	cmp    $0x7ffffffe,%ecx
               :   490e2:	ja     49695 <_IO_vfprintf+0x3405>
               :   490e8:	mov    $0x7fffffff,%edx
               :   490ed:	add    %eax,-0x4a8(%rbp)
               :   490f3:	sub    %ecx,%edx
               :   490f5:	cmp    %edx,%eax
               :   490f7:	jbe    470a9 <_IO_vfprintf+0xe19>
               :   490fd:	jmpq   473af <_IO_vfprintf+0x111f>
               :   49102:	movslq -0x4e4(%rbp),%rax
               :   49109:	imul   $0x48,%rax,%rax
               :   4910d:	add    -0x4d0(%rbp),%rax
               :   49114:	je     49575 <_IO_vfprintf+0x32e5>
               :   4911a:	movslq 0x30(%rax),%rax
               :   4911e:	mov    -0x4d8(%rbp),%rcx
               :   49125:	shl    $0x4,%rax
               :   49129:	mov    (%rcx,%rax,1),%rax
               :   4912d:	test   %rax,%rax
               :   49130:	je     4926e <_IO_vfprintf+0x2fde>
               :   49136:	mov    %rax,-0x568(%rbp)
               :   4913d:	movb   $0x78,-0x522(%rbp)
               :   49144:	xor    %r9d,%r9d
               :   49147:	movl   $0x0,-0x5a4(%rbp)
               :   49151:	movl   $0x1,-0x590(%rbp)
               :   4915b:	movl   $0x10,-0x578(%rbp)
               :   49165:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   4916a:	lea    -0x470(%rbp),%r10
               :   49171:	xor    %eax,%eax
               :   49173:	mov    $0x5,%ecx
               :   49178:	mov    -0x5a8(%rbp),%esi
               :   4917e:	movzbl -0x568(%rbp),%edx
               :   49185:	mov    %r10,%rdi
               :   49188:	rep stos %eax,%es:(%rdi)
               :   4918a:	mov    -0x560(%rbp),%eax
               :   49190:	movzbl -0x580(%rbp),%ecx
               :   49197:	and    $0x1,%edx
               :   4919a:	shl    $0x2,%edx
               :   4919d:	mov    %eax,-0x470(%rbp)
               :   491a3:	mov    -0x558(%rbp),%eax
               :   491a9:	and    $0x1,%ecx
               :   491ac:	add    %ecx,%ecx
               :   491ae:	mov    %eax,-0x46c(%rbp)
               :   491b4:	movsbl -0x522(%rbp),%eax
               :   491bb:	mov    %eax,-0x468(%rbp)
               :   491c1:	mov    %esi,%eax
               :   491c3:	and    $0x1,%eax
               :   491c6:	or     %ecx,%eax
               :   491c8:	movzbl -0x590(%rbp),%ecx
               :   491cf:	or     %edx,%eax
               :   491d1:	movzbl -0x570(%rbp),%edx
               :   491d8:	and    $0x1,%ecx
               :   491db:	shl    $0x3,%ecx
               :   491de:	and    $0x1,%edx
               :   491e1:	or     %ecx,%eax
               :   491e3:	movzbl -0x584(%rbp),%ecx
               :   491ea:	shl    $0x4,%edx
               :   491ed:	or     %edx,%eax
               :   491ef:	movzbl -0x550(%rbp),%edx
               :   491f6:	and    $0x1,%ecx
               :   491f9:	shl    $0x5,%ecx
               :   491fc:	and    $0x1,%edx
               :   491ff:	or     %ecx,%eax
               :   49201:	movzbl -0x5a4(%rbp),%ecx
               :   49208:	shl    $0x6,%edx
               :   4920b:	or     %edx,%eax
               :   4920d:	shl    $0x7,%ecx
               :   49210:	or     %ecx,%eax
               :   49212:	test   %esi,%esi
               :   49214:	mov    %al,-0x464(%rbp)
               :   4921a:	movsbl -0x585(%rbp),%eax
               :   49221:	mov    %eax,-0x460(%rbp)
               :   49227:	je     49591 <_IO_vfprintf+0x3301>
               :   4922d:	mov    0x8(%r15),%rax
               :   49231:	add    $0xf,%rax
               :   49235:	and    $0xfffffffffffffff0,%rax
               :   49239:	lea    0x10(%rax),%rdx
               :   4923d:	mov    %rdx,0x8(%r15)
               :   49241:	fldt   (%rax)
               :   49243:	fstpt  -0x480(%rbp)
               :   49249:	lea    -0x480(%rbp),%rax
               :   49250:	lea    -0x488(%rbp),%rdx
               :   49257:	mov    %r10,%rsi
               :   4925a:	mov    %rbx,%rdi
               :   4925d:	mov    %rax,-0x488(%rbp)
               :   49264:	callq  4de20 <__printf_fphex>
               :   49269:	jmpq   490ce <_IO_vfprintf+0x2e3e>
               :   4926e:	cmpl   $0x4,-0x560(%rbp)
               :   49275:	jg     49281 <_IO_vfprintf+0x2ff1>
               :   49277:	movl   $0x5,-0x560(%rbp)
               :   49281:	movl   $0x0,-0x568(%rbp)
               :   4928b:	lea    0x116be0(%rip),%r13        # 15fe72 <__PRETTY_FUNCTION__.8053+0x63>
               :   49292:	jmpq   48681 <_IO_vfprintf+0x23f1>
               :   49297:	movl   $0x10,-0x578(%rbp)
               :   492a1:	jmpq   47620 <_IO_vfprintf+0x1390>
               :   492a6:	movslq -0x4e4(%rbp),%rsi
               :   492ad:	imul   $0x48,%rsi,%rsi
               :   492b1:	add    -0x4d0(%rbp),%rsi
               :   492b8:	je     49304 <_IO_vfprintf+0x3074>
               :   492ba:	movslq 0x30(%rsi),%rax
               :   492be:	lea    -0x490(%rbp),%rdx
               :   492c5:	mov    %rbx,%rdi
               :   492c8:	shl    $0x4,%rax
               :   492cc:	add    -0x4d8(%rbp),%rax
               :   492d3:	mov    %rax,-0x490(%rbp)
               :   492da:	callq  4b770 <__printf_fp>
               :   492df:	jmpq   490ce <_IO_vfprintf+0x2e3e>
               :   492e4:	movl   $0x8,-0x578(%rbp)
               :   492ee:	jmpq   47620 <_IO_vfprintf+0x1390>
               :   492f3:	mov    0x8(%r15),%rax
               :   492f7:	lea    0x8(%rax),%rdx
               :   492fb:	mov    %rdx,0x8(%r15)
               :   492ff:	jmpq   475ef <_IO_vfprintf+0x135f>
               :   49304:	lea    -0x470(%rbp),%r10
               :   4930b:	xor    %eax,%eax
               :   4930d:	mov    $0x5,%ecx
               :   49312:	mov    -0x5a8(%rbp),%esi
               :   49318:	movzbl -0x568(%rbp),%edx
               :   4931f:	mov    %r10,%rdi
               :   49322:	rep stos %eax,%es:(%rdi)
               :   49324:	mov    -0x560(%rbp),%eax
               :   4932a:	movzbl -0x580(%rbp),%ecx
               :   49331:	and    $0x1,%edx
               :   49334:	shl    $0x2,%edx
               :   49337:	mov    %eax,-0x470(%rbp)
               :   4933d:	mov    -0x558(%rbp),%eax
               :   49343:	and    $0x1,%ecx
               :   49346:	add    %ecx,%ecx
               :   49348:	mov    %eax,-0x46c(%rbp)
               :   4934e:	movsbl -0x522(%rbp),%eax
               :   49355:	mov    %eax,-0x468(%rbp)
               :   4935b:	mov    %esi,%eax
               :   4935d:	and    $0x1,%eax
               :   49360:	or     %ecx,%eax
               :   49362:	movzbl -0x590(%rbp),%ecx
               :   49369:	or     %edx,%eax
               :   4936b:	movzbl -0x570(%rbp),%edx
               :   49372:	and    $0x1,%ecx
               :   49375:	shl    $0x3,%ecx
               :   49378:	and    $0x1,%edx
               :   4937b:	or     %ecx,%eax
               :   4937d:	movzbl -0x584(%rbp),%ecx
               :   49384:	shl    $0x4,%edx
               :   49387:	or     %edx,%eax
               :   49389:	movzbl -0x550(%rbp),%edx
               :   49390:	and    $0x1,%ecx
               :   49393:	shl    $0x5,%ecx
               :   49396:	and    $0x1,%edx
               :   49399:	or     %ecx,%eax
               :   4939b:	movzbl -0x5a4(%rbp),%ecx
               :   493a2:	shl    $0x6,%edx
               :   493a5:	or     %edx,%eax
               :   493a7:	shl    $0x7,%ecx
               :   493aa:	or     %ecx,%eax
               :   493ac:	mov    %al,-0x464(%rbp)
               :   493b2:	movzbl -0x5b0(%rbp),%eax
               :   493b9:	and    $0x1,%eax
               :   493bc:	shl    $0x3,%eax
               :   493bf:	test   %esi,%esi
               :   493c1:	mov    %al,-0x463(%rbp)
               :   493c7:	movsbl -0x585(%rbp),%eax
               :   493ce:	mov    %eax,-0x460(%rbp)
               :   493d4:	je     49600 <_IO_vfprintf+0x3370>
               :   493da:	mov    0x8(%r15),%rax
               :   493de:	add    $0xf,%rax
               :   493e2:	and    $0xfffffffffffffff0,%rax
               :   493e6:	lea    0x10(%rax),%rdx
               :   493ea:	mov    %rdx,0x8(%r15)
               :   493ee:	fldt   (%rax)
               :   493f0:	fstpt  -0x480(%rbp)
               :   493f6:	lea    -0x480(%rbp),%rax
               :   493fd:	lea    -0x490(%rbp),%rdx
               :   49404:	mov    %r10,%rsi
               :   49407:	mov    %rbx,%rdi
               :   4940a:	mov    %rax,-0x490(%rbp)
               :   49411:	callq  4b770 <__printf_fp>
               :   49416:	jmpq   490ce <_IO_vfprintf+0x2e3e>
               :   4941b:	testb  $0x4,0x74(%rbx)
               :   4941f:	je     4942a <_IO_vfprintf+0x319a>
               :   49421:	cmpl   $0x0,-0x4e8(%rbp)
               :   49428:	je     49469 <_IO_vfprintf+0x31d9>
               :   4942a:	movslq -0x4e4(%rbp),%rax
               :   49431:	imul   $0x48,%rax,%rax
               :   49435:	add    -0x4d0(%rbp),%rax
               :   4943c:	je     494a8 <_IO_vfprintf+0x3218>
               :   4943e:	movslq 0x30(%rax),%rax
               :   49442:	mov    -0x4d8(%rbp),%rcx
               :   49449:	shl    $0x4,%rax
               :   4944d:	cmpl   $0x0,-0x568(%rbp)
               :   49454:	mov    (%rcx,%rax,1),%rax
               :   49458:	je     49491 <_IO_vfprintf+0x3201>
               :   4945a:	movslq -0x4a8(%rbp),%rdx
               :   49461:	mov    %rdx,(%rax)
               :   49464:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   49469:	xor    %eax,%eax
               :   4946b:	or     $0xffffffffffffffff,%rcx
               :   4946f:	mov    %r14,%rdi
               :   49472:	repnz scas %es:(%rdi),%al
               :   49474:	mov    %r14,%rdi
               :   49477:	mov    %rcx,%rsi
               :   4947a:	not    %rsi
               :   4947d:	callq  f3710 <__readonly_area>
               :   49482:	test   %eax,%eax
               :   49484:	mov    %eax,-0x4e8(%rbp)
               :   4948a:	jns    4942a <_IO_vfprintf+0x319a>
               :   4948c:	jmpq   48071 <_IO_vfprintf+0x1de1>
               :   49491:	cmpl   $0x0,-0x598(%rbp)
               :   49498:	je     494d7 <_IO_vfprintf+0x3247>
               :   4949a:	movzbl -0x4a8(%rbp),%ecx
               :   494a1:	mov    %cl,(%rax)
               :   494a3:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   494a8:	cmpl   $0x0,-0x568(%rbp)
               :   494af:	mov    (%r15),%edx
               :   494b2:	je     494fb <_IO_vfprintf+0x326b>
               :   494b4:	cmp    $0x30,%edx
               :   494b7:	jae    494ed <_IO_vfprintf+0x325d>
               :   494b9:	mov    %edx,%eax
               :   494bb:	add    0x10(%r15),%rax
               :   494bf:	add    $0x8,%edx
               :   494c2:	mov    %edx,(%r15)
               :   494c5:	movslq -0x4a8(%rbp),%rdx
               :   494cc:	mov    (%rax),%rax
               :   494cf:	mov    %rdx,(%rax)
               :   494d2:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   494d7:	cmpl   $0x0,-0x580(%rbp)
               :   494de:	jne    49526 <_IO_vfprintf+0x3296>
               :   494e0:	mov    -0x4a8(%rbp),%ecx
               :   494e6:	mov    %ecx,(%rax)
               :   494e8:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   494ed:	mov    0x8(%r15),%rax
               :   494f1:	lea    0x8(%rax),%rdx
               :   494f5:	mov    %rdx,0x8(%r15)
               :   494f9:	jmp    494c5 <_IO_vfprintf+0x3235>
               :   494fb:	cmpl   $0x0,-0x598(%rbp)
               :   49502:	je     49543 <_IO_vfprintf+0x32b3>
               :   49504:	cmp    $0x30,%edx
               :   49507:	jae    49535 <_IO_vfprintf+0x32a5>
               :   49509:	mov    %edx,%eax
               :   4950b:	add    0x10(%r15),%rax
               :   4950f:	add    $0x8,%edx
               :   49512:	mov    %edx,(%r15)
               :   49515:	movzbl -0x4a8(%rbp),%ecx
               :   4951c:	mov    (%rax),%rax
               :   4951f:	mov    %cl,(%rax)
               :   49521:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   49526:	movzwl -0x4a8(%rbp),%ecx
               :   4952d:	mov    %cx,(%rax)
               :   49530:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   49535:	mov    0x8(%r15),%rax
               :   49539:	lea    0x8(%rax),%rdx
               :   4953d:	mov    %rdx,0x8(%r15)
               :   49541:	jmp    49515 <_IO_vfprintf+0x3285>
               :   49543:	cmpl   $0x0,-0x580(%rbp)
               :   4954a:	jne    4963b <_IO_vfprintf+0x33ab>
               :   49550:	cmp    $0x30,%edx
               :   49553:	jae    4962a <_IO_vfprintf+0x339a>
               :   49559:	mov    %edx,%eax
               :   4955b:	add    0x10(%r15),%rax
               :   4955f:	add    $0x8,%edx
               :   49562:	mov    %edx,(%r15)
               :   49565:	mov    (%rax),%rax
               :   49568:	mov    -0x4a8(%rbp),%ecx
               :   4956e:	mov    %ecx,(%rax)
               :   49570:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   49575:	mov    (%r15),%edx
               :   49578:	cmp    $0x30,%edx
               :   4957b:	jae    495bb <_IO_vfprintf+0x332b>
               :   4957d:	mov    %edx,%eax
               :   4957f:	add    0x10(%r15),%rax
               :   49583:	add    $0x8,%edx
               :   49586:	mov    %edx,(%r15)
               :   49589:	mov    (%rax),%rax
               :   4958c:	jmpq   4912d <_IO_vfprintf+0x2e9d>
               :   49591:	mov    0x4(%r15),%edx
               :   49595:	cmp    $0xb0,%edx
               :   4959b:	jae    495c9 <_IO_vfprintf+0x3339>
               :   4959d:	mov    %edx,%eax
               :   4959f:	add    0x10(%r15),%rax
               :   495a3:	add    $0x10,%edx
               :   495a6:	mov    %edx,0x4(%r15)
               :   495aa:	movsd  (%rax),%xmm0
               :   495ae:	movsd  %xmm0,-0x480(%rbp)
               :   495b6:	jmpq   49249 <_IO_vfprintf+0x2fb9>
               :   495bb:	mov    0x8(%r15),%rax
               :   495bf:	lea    0x8(%rax),%rdx
               :   495c3:	mov    %rdx,0x8(%r15)
               :   495c7:	jmp    49589 <_IO_vfprintf+0x32f9>
               :   495c9:	mov    0x8(%r15),%rax
               :   495cd:	lea    0x8(%rax),%rdx
               :   495d1:	mov    %rdx,0x8(%r15)
               :   495d5:	jmp    495aa <_IO_vfprintf+0x331a>
               :   495d7:	mov    -0x4b0(%rbp),%edi
               :   495dd:	lea    -0x420(%rbp),%rsi
               :   495e4:	mov    $0x3e8,%edx
               :   495e9:	callq  811b0 <__strerror_r>
               :   495ee:	movl   $0x0,-0x568(%rbp)
               :   495f8:	mov    %rax,%r13
               :   495fb:	jmpq   48678 <_IO_vfprintf+0x23e8>
               :   49600:	mov    0x4(%r15),%edx
               :   49604:	cmp    $0xb0,%edx
               :   4960a:	jae    4965e <_IO_vfprintf+0x33ce>
               :   4960c:	mov    %edx,%eax
               :   4960e:	add    0x10(%r15),%rax
               :   49612:	add    $0x10,%edx
               :   49615:	mov    %edx,0x4(%r15)
               :   49619:	movsd  (%rax),%xmm0
               :   4961d:	movsd  %xmm0,-0x480(%rbp)
               :   49625:	jmpq   493f6 <_IO_vfprintf+0x3166>
               :   4962a:	mov    0x8(%r15),%rax
               :   4962e:	lea    0x8(%rax),%rdx
               :   49632:	mov    %rdx,0x8(%r15)
               :   49636:	jmpq   49565 <_IO_vfprintf+0x32d5>
               :   4963b:	cmp    $0x30,%edx
               :   4963e:	jae    4966c <_IO_vfprintf+0x33dc>
               :   49640:	mov    %edx,%eax
               :   49642:	add    0x10(%r15),%rax
               :   49646:	add    $0x8,%edx
               :   49649:	mov    %edx,(%r15)
               :   4964c:	movzwl -0x4a8(%rbp),%ecx
               :   49653:	mov    (%rax),%rax
               :   49656:	mov    %cx,(%rax)
               :   49659:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   4965e:	mov    0x8(%r15),%rax
               :   49662:	lea    0x8(%rax),%rdx
               :   49666:	mov    %rdx,0x8(%r15)
               :   4966a:	jmp    49619 <_IO_vfprintf+0x3389>
               :   4966c:	mov    0x8(%r15),%rax
               :   49670:	lea    0x8(%rax),%rdx
               :   49674:	mov    %rdx,0x8(%r15)
               :   49678:	jmp    4964c <_IO_vfprintf+0x33bc>
               :   4967a:	mov    $0x2d,%esi
               :   4967f:	mov    %rbx,%rdi
               :   49682:	callq  75590 <__overflow>
               :   49687:	add    $0x1,%eax
               :   4968a:	jne    47786 <_IO_vfprintf+0x14f6>
               :   49690:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49695:	lea    0x11ec44(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   4969c:	lea    0x1167d5(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   496a3:	lea    0x11aa36(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   496aa:	mov    $0x7d3,%edx
               :   496af:	callq  2e190 <__assert_fail>
               :   496b4:	test   %r12d,%r12d
               :   496b7:	jle    49743 <_IO_vfprintf+0x34b3>
               :   496bd:	movslq %r12d,%rcx
               :   496c0:	mov    $0x20,%esi
               :   496c5:	mov    %rbx,%rdi
               :   496c8:	mov    %rcx,%rdx
               :   496cb:	mov    %rcx,-0x558(%rbp)
               :   496d2:	mov    %r9d,-0x560(%rbp)
               :   496d9:	callq  6a910 <_IO_padn>
               :   496de:	mov    -0x558(%rbp),%rcx
               :   496e5:	cmp    %rax,%rcx
               :   496e8:	jne    467fb <_IO_vfprintf+0x56b>
               :   496ee:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   496f8:	mov    -0x560(%rbp),%r9d
               :   496ff:	ja     49695 <_IO_vfprintf+0x3405>
               :   49701:	mov    $0x7fffffff,%eax
               :   49706:	sub    -0x4a8(%rbp),%eax
               :   4970c:	cmp    %eax,%r12d
               :   4970f:	ja     473af <_IO_vfprintf+0x111f>
               :   49715:	add    %r12d,-0x4a8(%rbp)
               :   4971c:	xor    %r12d,%r12d
               :   4971f:	jmpq   47764 <_IO_vfprintf+0x14d4>
               :   49724:	lea    0x11ebb5(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   4972b:	lea    0x116746(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   49732:	lea    0x11a9d7(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   49739:	mov    $0x7d3,%edx
               :   4973e:	callq  2e190 <__assert_fail>
               :   49743:	xor    %r12d,%r12d
               :   49746:	jmpq   47764 <_IO_vfprintf+0x14d4>
               :   4974b:	movzbl -0x522(%rbp),%esi
               :   49752:	mov    %rbx,%rdi
               :   49755:	callq  75590 <__overflow>
               :   4975a:	add    $0x1,%eax
               :   4975d:	jne    47a5c <_IO_vfprintf+0x17cc>
               :   49763:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49768:	mov    $0x30,%esi
               :   4976d:	mov    %rbx,%rdi
               :   49770:	callq  75590 <__overflow>
               :   49775:	add    $0x1,%eax
               :   49778:	jne    47a2d <_IO_vfprintf+0x179d>
               :   4977e:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49783:	mov    $0x2b,%esi
               :   49788:	mov    %rbx,%rdi
               :   4978b:	callq  75590 <__overflow>
               :   49790:	add    $0x1,%eax
               :   49793:	jne    479da <_IO_vfprintf+0x174a>
               :   49799:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4979e:	cmpl   $0x0,-0x570(%rbp)
               :   497a5:	je     479f8 <_IO_vfprintf+0x1768>
               :   497ab:	mov    0x28(%rbx),%rax
               :   497af:	cmp    0x30(%rbx),%rax
               :   497b3:	jae    499ce <_IO_vfprintf+0x373e>
               :   497b9:	lea    0x1(%rax),%rdx
               :   497bd:	mov    %rdx,0x28(%rbx)
               :   497c1:	movb   $0x20,(%rax)
               :   497c4:	jmpq   479da <_IO_vfprintf+0x174a>
               :   497c9:	testb  $0x1,-0x5b0(%rbp)
               :   497d0:	je     4794c <_IO_vfprintf+0x16bc>
               :   497d6:	mov    -0x580(%rbp),%rdi
               :   497dd:	mov    %r13,%rdx
               :   497e0:	mov    %r13,%rsi
               :   497e3:	mov    %r9d,-0x598(%rbp)
               :   497ea:	callq  1f6a5 <_i18n_number_rewrite>
               :   497ef:	mov    -0x598(%rbp),%r9d
               :   497f6:	mov    %rax,-0x580(%rbp)
               :   497fd:	jmpq   4794c <_IO_vfprintf+0x16bc>
               :   49802:	mov    $0x2b,%esi
               :   49807:	mov    %rbx,%rdi
               :   4980a:	callq  75590 <__overflow>
               :   4980f:	add    $0x1,%eax
               :   49812:	jne    47786 <_IO_vfprintf+0x14f6>
               :   49818:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4981d:	cmpl   $0x0,-0x570(%rbp)
               :   49824:	je     4779d <_IO_vfprintf+0x150d>
               :   4982a:	mov    0x28(%rbx),%rax
               :   4982e:	cmp    0x30(%rbx),%rax
               :   49832:	jae    498c2 <_IO_vfprintf+0x3632>
               :   49838:	lea    0x1(%rax),%rdx
               :   4983c:	mov    %rdx,0x28(%rbx)
               :   49840:	movb   $0x20,(%rax)
               :   49843:	jmpq   47786 <_IO_vfprintf+0x14f6>
               :   49848:	cmpl   $0x0,-0x568(%rbp)
               :   4984f:	mov    (%r15),%edx
               :   49852:	je     49915 <_IO_vfprintf+0x3685>
               :   49858:	cmp    $0x30,%edx
               :   4985b:	jae    49904 <_IO_vfprintf+0x3674>
               :   49861:	mov    %edx,%eax
               :   49863:	add    0x10(%r15),%rax
               :   49867:	add    $0x8,%edx
               :   4986a:	mov    %edx,(%r15)
               :   4986d:	mov    (%rax),%rax
               :   49870:	movl   $0x0,-0x550(%rbp)
               :   4987a:	xor    %r9d,%r9d
               :   4987d:	movl   $0x0,-0x570(%rbp)
               :   49887:	mov    %rax,-0x568(%rbp)
               :   4988e:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   49893:	cmpl   $0x0,-0x580(%rbp)
               :   4989a:	jne    498dd <_IO_vfprintf+0x364d>
               :   4989c:	mov    (%rcx,%rax,1),%eax
               :   4989f:	movl   $0x0,-0x550(%rbp)
               :   498a9:	xor    %r9d,%r9d
               :   498ac:	movl   $0x0,-0x570(%rbp)
               :   498b6:	mov    %rax,-0x568(%rbp)
               :   498bd:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   498c2:	mov    $0x20,%esi
               :   498c7:	mov    %rbx,%rdi
               :   498ca:	callq  75590 <__overflow>
               :   498cf:	add    $0x1,%eax
               :   498d2:	jne    47786 <_IO_vfprintf+0x14f6>
               :   498d8:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   498dd:	movzwl (%rcx,%rax,1),%eax
               :   498e1:	movl   $0x0,-0x550(%rbp)
               :   498eb:	xor    %r9d,%r9d
               :   498ee:	movl   $0x0,-0x570(%rbp)
               :   498f8:	mov    %rax,-0x568(%rbp)
               :   498ff:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   49904:	mov    0x8(%r15),%rax
               :   49908:	lea    0x8(%rax),%rdx
               :   4990c:	mov    %rdx,0x8(%r15)
               :   49910:	jmpq   4986d <_IO_vfprintf+0x35dd>
               :   49915:	cmpl   $0x0,-0x598(%rbp)
               :   4991c:	je     499fa <_IO_vfprintf+0x376a>
               :   49922:	cmp    $0x30,%edx
               :   49925:	jae    499e9 <_IO_vfprintf+0x3759>
               :   4992b:	mov    %edx,%eax
               :   4992d:	add    0x10(%r15),%rax
               :   49931:	add    $0x8,%edx
               :   49934:	mov    %edx,(%r15)
               :   49937:	movzbl (%rax),%eax
               :   4993a:	movl   $0x0,-0x550(%rbp)
               :   49944:	xor    %r9d,%r9d
               :   49947:	movl   $0x0,-0x570(%rbp)
               :   49951:	mov    %rax,-0x568(%rbp)
               :   49958:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   4995d:	movzbl -0x522(%rbp),%esi
               :   49964:	mov    %rbx,%rdi
               :   49967:	callq  75590 <__overflow>
               :   4996c:	add    $0x1,%eax
               :   4996f:	jne    47801 <_IO_vfprintf+0x1571>
               :   49975:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4997a:	mov    $0x30,%esi
               :   4997f:	mov    %rbx,%rdi
               :   49982:	callq  75590 <__overflow>
               :   49987:	add    $0x1,%eax
               :   4998a:	jne    477d2 <_IO_vfprintf+0x1542>
               :   49990:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49995:	cmpl   $0x0,-0x5a4(%rbp)
               :   4999c:	je     4793f <_IO_vfprintf+0x16af>
               :   499a2:	mov    -0x4f8(%rbp),%rcx
               :   499a9:	mov    -0x4e0(%rbp),%rdx
               :   499b0:	mov    %r13,%rsi
               :   499b3:	mov    %rax,%rdi
               :   499b6:	callq  1f5b1 <group_number>
               :   499bb:	mov    -0x598(%rbp),%r9d
               :   499c2:	mov    %rax,-0x580(%rbp)
               :   499c9:	jmpq   4793f <_IO_vfprintf+0x16af>
               :   499ce:	mov    $0x20,%esi
               :   499d3:	mov    %rbx,%rdi
               :   499d6:	callq  75590 <__overflow>
               :   499db:	add    $0x1,%eax
               :   499de:	jne    479da <_IO_vfprintf+0x174a>
               :   499e4:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   499e9:	mov    0x8(%r15),%rax
               :   499ed:	lea    0x8(%rax),%rdx
               :   499f1:	mov    %rdx,0x8(%r15)
               :   499f5:	jmpq   49937 <_IO_vfprintf+0x36a7>
               :   499fa:	cmpl   $0x0,-0x580(%rbp)
               :   49a01:	jne    4afc5 <_IO_vfprintf+0x4d35>
               :   49a07:	cmp    $0x30,%edx
               :   49a0a:	jae    4afb4 <_IO_vfprintf+0x4d24>
               :   49a10:	mov    %edx,%eax
               :   49a12:	add    0x10(%r15),%rax
               :   49a16:	add    $0x8,%edx
               :   49a19:	mov    %edx,(%r15)
               :   49a1c:	mov    (%rax),%eax
               :   49a1e:	movl   $0x0,-0x550(%rbp)
               :   49a28:	xor    %r9d,%r9d
               :   49a2b:	movl   $0x0,-0x570(%rbp)
               :   49a35:	mov    %rax,-0x568(%rbp)
               :   49a3c:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   49a41:	mov    -0x4a0(%rbp),%rax
               :   49a48:	lea    0x1(%rax),%rdx
               :   49a4c:	mov    %rdx,-0x4a0(%rbp)
               :   49a53:	movzbl 0x1(%rax),%eax
               :   49a57:	lea    -0x20(%rax),%edx
               :   49a5a:	mov    %al,-0x4c8(%rbp)
               :   49a60:	xor    %eax,%eax
               :   49a62:	cmp    $0x5a,%dl
               :   49a65:	ja     49a89 <_IO_vfprintf+0x37f9>
               :   49a67:	movsbl -0x4c8(%rbp),%eax
               :   49a6e:	lea    0x11096b(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   49a75:	sub    $0x20,%eax
               :   49a78:	cltq   
               :   49a7a:	movzbl (%rdx,%rax,1),%edx
               :   49a7e:	lea    0x1108db(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   49a85:	movslq (%rax,%rdx,4),%rax
               :   49a89:	add    %r12,%rax
               :   49a8c:	movl   $0x1,-0x520(%rbp)
               :   49a96:	jmpq   *%rax
               :   49a98:	mov    -0x4a0(%rbp),%rax
               :   49a9f:	lea    0x1(%rax),%rdx
               :   49aa3:	mov    %rdx,-0x4a0(%rbp)
               :   49aaa:	movzbl 0x1(%rax),%eax
               :   49aae:	lea    -0x20(%rax),%edx
               :   49ab1:	mov    %al,-0x4c8(%rbp)
               :   49ab7:	xor    %eax,%eax
               :   49ab9:	cmp    $0x5a,%dl
               :   49abc:	ja     49ae0 <_IO_vfprintf+0x3850>
               :   49abe:	movsbl -0x4c8(%rbp),%eax
               :   49ac5:	lea    0x110914(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   49acc:	sub    $0x20,%eax
               :   49acf:	cltq   
               :   49ad1:	movzbl (%rdx,%rax,1),%edx
               :   49ad5:	lea    0x110884(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   49adc:	movslq (%rax,%rdx,4),%rax
               :   49ae0:	add    %r12,%rax
               :   49ae3:	movb   $0x20,-0x521(%rbp)
               :   49aea:	movl   $0x1,-0x514(%rbp)
               :   49af4:	jmpq   *%rax
               :   49af6:	mov    0x28(%rbx),%rax
               :   49afa:	cmp    0x30(%rbx),%rax
               :   49afe:	jae    4a188 <_IO_vfprintf+0x3ef8>
               :   49b04:	lea    0x1(%rax),%rdx
               :   49b08:	mov    %rdx,0x28(%rbx)
               :   49b0c:	movb   $0x25,(%rax)
               :   49b0f:	mov    -0x4a8(%rbp),%ecx
               :   49b15:	cmp    $0x7fffffff,%ecx
               :   49b1b:	je     467fb <_IO_vfprintf+0x56b>
               :   49b21:	add    $0x1,%ecx
               :   49b24:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   49b29:	cmpl   $0x0,-0x520(%rbp)
               :   49b30:	je     49f8b <_IO_vfprintf+0x3cfb>
               :   49b36:	mov    0x28(%rbx),%rax
               :   49b3a:	cmp    0x30(%rbx),%rax
               :   49b3e:	jae    49f62 <_IO_vfprintf+0x3cd2>
               :   49b44:	lea    0x1(%rax),%rdx
               :   49b48:	mov    %rdx,0x28(%rbx)
               :   49b4c:	movb   $0x2b,(%rax)
               :   49b4f:	jmpq   46c3d <_IO_vfprintf+0x9ad>
               :   49b54:	movb   $0x20,-0x521(%rbp)
               :   49b5b:	xor    %ecx,%ecx
               :   49b5d:	cmpb   $0x58,-0x4c8(%rbp)
               :   49b64:	mov    -0x53c(%rbp),%edx
               :   49b6a:	mov    -0x538(%rbp),%rdi
               :   49b71:	mov    %r13,%rsi
               :   49b74:	mov    %r10d,-0x540(%rbp)
               :   49b7b:	sete   %cl
               :   49b7e:	callq  460b0 <_itoa_word>
               :   49b83:	cmpq   $0x0,-0x4e0(%rbp)
               :   49b8b:	mov    %rax,-0x510(%rbp)
               :   49b92:	mov    -0x540(%rbp),%r10d
               :   49b99:	jne    49ea4 <_IO_vfprintf+0x3c14>
               :   49b9f:	cmpl   $0xa,-0x53c(%rbp)
               :   49ba6:	je     49e6b <_IO_vfprintf+0x3bdb>
               :   49bac:	movslq -0x508(%rbp),%rax
               :   49bb3:	mov    %r13,%rdx
               :   49bb6:	sub    -0x510(%rbp),%rdx
               :   49bbd:	cmp    %rdx,%rax
               :   49bc0:	jg     46b82 <_IO_vfprintf+0x8f2>
               :   49bc6:	cmpq   $0x0,-0x538(%rbp)
               :   49bce:	je     46b82 <_IO_vfprintf+0x8f2>
               :   49bd4:	cmpl   $0x0,-0x528(%rbp)
               :   49bdb:	je     46b82 <_IO_vfprintf+0x8f2>
               :   49be1:	cmpl   $0x8,-0x53c(%rbp)
               :   49be8:	jne    46b82 <_IO_vfprintf+0x8f2>
               :   49bee:	mov    -0x510(%rbp),%rcx
               :   49bf5:	movb   $0x30,-0x1(%rcx)
               :   49bf9:	sub    $0x1,%rcx
               :   49bfd:	mov    %rcx,-0x510(%rbp)
               :   49c04:	jmpq   46b82 <_IO_vfprintf+0x8f2>
               :   49c09:	movl   $0x1,-0x508(%rbp)
               :   49c13:	jmpq   49b5b <_IO_vfprintf+0x38cb>
               :   49c18:	test   %r10d,%r10d
               :   49c1b:	je     49e19 <_IO_vfprintf+0x3b89>
               :   49c21:	mov    0x28(%rbx),%rax
               :   49c25:	cmp    0x30(%rbx),%rax
               :   49c29:	jae    49e50 <_IO_vfprintf+0x3bc0>
               :   49c2f:	lea    0x1(%rax),%rdx
               :   49c33:	mov    %rdx,0x28(%rbx)
               :   49c37:	movb   $0x2d,(%rax)
               :   49c3a:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   49c44:	je     467fb <_IO_vfprintf+0x56b>
               :   49c4a:	addl   $0x1,-0x4a8(%rbp)
               :   49c51:	subl   $0x1,-0x500(%rbp)
               :   49c58:	cmpq   $0x0,-0x538(%rbp)
               :   49c60:	je     49cda <_IO_vfprintf+0x3a4a>
               :   49c62:	cmpl   $0x0,-0x528(%rbp)
               :   49c69:	je     49cda <_IO_vfprintf+0x3a4a>
               :   49c6b:	cmpl   $0x10,-0x53c(%rbp)
               :   49c72:	jne    49cda <_IO_vfprintf+0x3a4a>
               :   49c74:	mov    0x28(%rbx),%rax
               :   49c78:	cmp    0x30(%rbx),%rax
               :   49c7c:	jae    49ffc <_IO_vfprintf+0x3d6c>
               :   49c82:	lea    0x1(%rax),%rdx
               :   49c86:	mov    %rdx,0x28(%rbx)
               :   49c8a:	movb   $0x30,(%rax)
               :   49c8d:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   49c97:	je     467fb <_IO_vfprintf+0x56b>
               :   49c9d:	mov    0x28(%rbx),%rax
               :   49ca1:	cmp    0x30(%rbx),%rax
               :   49ca5:	jae    49fdf <_IO_vfprintf+0x3d4f>
               :   49cab:	movzbl -0x4c8(%rbp),%ecx
               :   49cb2:	lea    0x1(%rax),%rdx
               :   49cb6:	mov    %rdx,0x28(%rbx)
               :   49cba:	mov    %cl,(%rax)
               :   49cbc:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   49cc6:	je     467fb <_IO_vfprintf+0x56b>
               :   49ccc:	addl   $0x2,-0x4a8(%rbp)
               :   49cd3:	subl   $0x2,-0x500(%rbp)
               :   49cda:	mov    -0x540(%rbp),%eax
               :   49ce0:	test   %eax,%eax
               :   49ce2:	jle    49d3c <_IO_vfprintf+0x3aac>
               :   49ce4:	movslq %eax,%rcx
               :   49ce7:	mov    $0x30,%esi
               :   49cec:	mov    %rbx,%rdi
               :   49cef:	mov    %rcx,%rdx
               :   49cf2:	mov    %rcx,-0x4c8(%rbp)
               :   49cf9:	callq  6a910 <_IO_padn>
               :   49cfe:	mov    -0x4c8(%rbp),%rcx
               :   49d05:	cmp    %rax,%rcx
               :   49d08:	jne    467fb <_IO_vfprintf+0x56b>
               :   49d0e:	mov    -0x4a8(%rbp),%ecx
               :   49d14:	mov    -0x508(%rbp),%rsi
               :   49d1b:	cmp    $0x7ffffffe,%ecx
               :   49d21:	ja     4a0db <_IO_vfprintf+0x3e4b>
               :   49d27:	mov    $0x7fffffff,%eax
               :   49d2c:	add    %esi,-0x4a8(%rbp)
               :   49d32:	sub    %ecx,%eax
               :   49d34:	cmp    %eax,%esi
               :   49d36:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   49d3c:	cmpl   $0x0,-0x4a8(%rbp)
               :   49d43:	js     4a0fa <_IO_vfprintf+0x3e6a>
               :   49d49:	mov    -0x510(%rbp),%rsi
               :   49d50:	mov    0xd8(%rbx),%rax
               :   49d57:	mov    %rbx,%rdi
               :   49d5a:	sub    %rsi,%r13
               :   49d5d:	mov    %r13,%rdx
               :   49d60:	callq  *0x38(%rax)
               :   49d63:	cmp    %rax,%r13
               :   49d66:	jne    467fb <_IO_vfprintf+0x56b>
               :   49d6c:	mov    $0x7fffffff,%r11d
               :   49d72:	mov    %r11d,%eax
               :   49d75:	sub    -0x4a8(%rbp),%eax
               :   49d7b:	cltq   
               :   49d7d:	cmp    %rax,%r13
               :   49d80:	jg     46d83 <_IO_vfprintf+0xaf3>
               :   49d86:	mov    -0x548(%rbp),%r9d
               :   49d8d:	sub    -0x508(%rbp),%r9d
               :   49d94:	add    -0x500(%rbp),%r9d
               :   49d9b:	mov    -0x4a8(%rbp),%r10d
               :   49da2:	mov    %r11d,-0x510(%rbp)
               :   49da9:	add    %r13d,%r10d
               :   49dac:	test   %r9d,%r9d
               :   49daf:	mov    %r10d,%ecx
               :   49db2:	mov    %r10d,-0x4c8(%rbp)
               :   49db9:	jle    46a05 <_IO_vfprintf+0x775>
               :   49dbf:	movslq %r9d,%r13
               :   49dc2:	mov    $0x20,%esi
               :   49dc7:	mov    %rbx,%rdi
               :   49dca:	mov    %r13,%rdx
               :   49dcd:	mov    %r9d,-0x4a8(%rbp)
               :   49dd4:	callq  6a910 <_IO_padn>
               :   49dd9:	cmp    %rax,%r13
               :   49ddc:	jne    467fb <_IO_vfprintf+0x56b>
               :   49de2:	mov    -0x4c8(%rbp),%r10d
               :   49de9:	cmp    $0x7ffffffe,%r10d
               :   49df0:	ja     4a0db <_IO_vfprintf+0x3e4b>
               :   49df6:	mov    -0x510(%rbp),%r11d
               :   49dfd:	mov    -0x4a8(%rbp),%r9d
               :   49e04:	sub    %r10d,%r11d
               :   49e07:	lea    (%r10,%r9,1),%ecx
               :   49e0b:	cmp    %r11d,%r9d
               :   49e0e:	jbe    46a05 <_IO_vfprintf+0x775>
               :   49e14:	jmpq   46d83 <_IO_vfprintf+0xaf3>
               :   49e19:	cmpl   $0x0,-0x520(%rbp)
               :   49e20:	je     4a032 <_IO_vfprintf+0x3da2>
               :   49e26:	mov    0x28(%rbx),%rax
               :   49e2a:	cmp    0x30(%rbx),%rax
               :   49e2e:	jae    4a017 <_IO_vfprintf+0x3d87>
               :   49e34:	lea    0x1(%rax),%rdx
               :   49e38:	mov    %rdx,0x28(%rbx)
               :   49e3c:	movb   $0x2b,(%rax)
               :   49e3f:	jmpq   49c3a <_IO_vfprintf+0x39aa>
               :   49e44:	mov    %r13,-0x510(%rbp)
               :   49e4b:	jmpq   46b79 <_IO_vfprintf+0x8e9>
               :   49e50:	mov    $0x2d,%esi
               :   49e55:	mov    %rbx,%rdi
               :   49e58:	callq  75590 <__overflow>
               :   49e5d:	add    $0x1,%eax
               :   49e60:	jne    49c3a <_IO_vfprintf+0x39aa>
               :   49e66:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49e6b:	cmpl   $0x0,-0x54c(%rbp)
               :   49e72:	je     49bac <_IO_vfprintf+0x391c>
               :   49e78:	mov    -0x510(%rbp),%rdi
               :   49e7f:	mov    %r13,%rdx
               :   49e82:	mov    %r13,%rsi
               :   49e85:	mov    %r10d,-0x548(%rbp)
               :   49e8c:	callq  1f6a5 <_i18n_number_rewrite>
               :   49e91:	mov    -0x548(%rbp),%r10d
               :   49e98:	mov    %rax,-0x510(%rbp)
               :   49e9f:	jmpq   49bac <_IO_vfprintf+0x391c>
               :   49ea4:	cmpl   $0x0,-0x548(%rbp)
               :   49eab:	je     49b9f <_IO_vfprintf+0x390f>
               :   49eb1:	mov    -0x4f8(%rbp),%rcx
               :   49eb8:	mov    -0x4e0(%rbp),%rdx
               :   49ebf:	mov    %r13,%rsi
               :   49ec2:	mov    %rax,%rdi
               :   49ec5:	mov    %r10d,-0x548(%rbp)
               :   49ecc:	callq  1f5b1 <group_number>
               :   49ed1:	mov    -0x548(%rbp),%r10d
               :   49ed8:	mov    %rax,-0x510(%rbp)
               :   49edf:	jmpq   49b9f <_IO_vfprintf+0x390f>
               :   49ee4:	movzbl -0x4c8(%rbp),%esi
               :   49eeb:	mov    %rbx,%rdi
               :   49eee:	mov    %r9d,-0x500(%rbp)
               :   49ef5:	callq  75590 <__overflow>
               :   49efa:	add    $0x1,%eax
               :   49efd:	mov    -0x500(%rbp),%r9d
               :   49f04:	jne    46cb8 <_IO_vfprintf+0xa28>
               :   49f0a:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49f0f:	mov    $0x30,%esi
               :   49f14:	mov    %rbx,%rdi
               :   49f17:	mov    %r9d,-0x500(%rbp)
               :   49f1e:	callq  75590 <__overflow>
               :   49f23:	add    $0x1,%eax
               :   49f26:	mov    -0x500(%rbp),%r9d
               :   49f2d:	jne    46c89 <_IO_vfprintf+0x9f9>
               :   49f33:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49f38:	mov    %rax,-0x538(%rbp)
               :   49f3f:	movl   $0xa,-0x53c(%rbp)
               :   49f49:	xor    %r10d,%r10d
               :   49f4c:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   49f51:	mov    0x8(%r15),%rax
               :   49f55:	lea    0x8(%rax),%rdx
               :   49f59:	mov    %rdx,0x8(%r15)
               :   49f5d:	jmpq   46b08 <_IO_vfprintf+0x878>
               :   49f62:	mov    $0x2b,%esi
               :   49f67:	mov    %rbx,%rdi
               :   49f6a:	mov    %r9d,-0x500(%rbp)
               :   49f71:	callq  75590 <__overflow>
               :   49f76:	add    $0x1,%eax
               :   49f79:	mov    -0x500(%rbp),%r9d
               :   49f80:	jne    46c3d <_IO_vfprintf+0x9ad>
               :   49f86:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49f8b:	cmpl   $0x0,-0x518(%rbp)
               :   49f92:	je     46c54 <_IO_vfprintf+0x9c4>
               :   49f98:	mov    0x28(%rbx),%rax
               :   49f9c:	cmp    0x30(%rbx),%rax
               :   49fa0:	jae    4a134 <_IO_vfprintf+0x3ea4>
               :   49fa6:	lea    0x1(%rax),%rdx
               :   49faa:	mov    %rdx,0x28(%rbx)
               :   49fae:	movb   $0x20,(%rax)
               :   49fb1:	jmpq   46c3d <_IO_vfprintf+0x9ad>
               :   49fb6:	mov    $0x2d,%esi
               :   49fbb:	mov    %rbx,%rdi
               :   49fbe:	mov    %r9d,-0x500(%rbp)
               :   49fc5:	callq  75590 <__overflow>
               :   49fca:	add    $0x1,%eax
               :   49fcd:	mov    -0x500(%rbp),%r9d
               :   49fd4:	jne    46c3d <_IO_vfprintf+0x9ad>
               :   49fda:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49fdf:	movzbl -0x4c8(%rbp),%esi
               :   49fe6:	mov    %rbx,%rdi
               :   49fe9:	callq  75590 <__overflow>
               :   49fee:	add    $0x1,%eax
               :   49ff1:	jne    49cbc <_IO_vfprintf+0x3a2c>
               :   49ff7:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   49ffc:	mov    $0x30,%esi
               :   4a001:	mov    %rbx,%rdi
               :   4a004:	callq  75590 <__overflow>
               :   4a009:	add    $0x1,%eax
               :   4a00c:	jne    49c8d <_IO_vfprintf+0x39fd>
               :   4a012:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a017:	mov    $0x2b,%esi
               :   4a01c:	mov    %rbx,%rdi
               :   4a01f:	callq  75590 <__overflow>
               :   4a024:	add    $0x1,%eax
               :   4a027:	jne    49c3a <_IO_vfprintf+0x39aa>
               :   4a02d:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a032:	cmpl   $0x0,-0x518(%rbp)
               :   4a039:	je     49c58 <_IO_vfprintf+0x39c8>
               :   4a03f:	mov    0x28(%rbx),%rax
               :   4a043:	cmp    0x30(%rbx),%rax
               :   4a047:	jae    4a119 <_IO_vfprintf+0x3e89>
               :   4a04d:	lea    0x1(%rax),%rdx
               :   4a051:	mov    %rdx,0x28(%rbx)
               :   4a055:	movb   $0x20,(%rax)
               :   4a058:	jmpq   49c3a <_IO_vfprintf+0x39aa>
               :   4a05d:	test   %r9d,%r9d
               :   4a060:	jle    4a15d <_IO_vfprintf+0x3ecd>
               :   4a066:	movslq %r9d,%rcx
               :   4a069:	mov    $0x20,%esi
               :   4a06e:	mov    %rbx,%rdi
               :   4a071:	mov    %rcx,%rdx
               :   4a074:	mov    %rcx,-0x500(%rbp)
               :   4a07b:	mov    %r10d,-0x514(%rbp)
               :   4a082:	mov    %r9d,-0x508(%rbp)
               :   4a089:	callq  6a910 <_IO_padn>
               :   4a08e:	mov    -0x500(%rbp),%rcx
               :   4a095:	cmp    %rax,%rcx
               :   4a098:	jne    467fb <_IO_vfprintf+0x56b>
               :   4a09e:	cmpl   $0x7ffffffe,-0x4a8(%rbp)
               :   4a0a8:	mov    -0x508(%rbp),%r9d
               :   4a0af:	mov    -0x514(%rbp),%r10d
               :   4a0b6:	ja     4a0db <_IO_vfprintf+0x3e4b>
               :   4a0b8:	mov    $0x7fffffff,%eax
               :   4a0bd:	sub    -0x4a8(%rbp),%eax
               :   4a0c3:	cmp    %eax,%r9d
               :   4a0c6:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   4a0cc:	add    %r9d,-0x4a8(%rbp)
               :   4a0d3:	xor    %r9d,%r9d
               :   4a0d6:	jmpq   46c1b <_IO_vfprintf+0x98b>
               :   4a0db:	lea    0x11e1fe(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   4a0e2:	lea    0x115d8f(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   4a0e9:	lea    0x119ff0(%rip),%rdi        # 1640e0 <__PRETTY_FUNCTION__.9742+0xfa5>
               :   4a0f0:	mov    $0x662,%edx
               :   4a0f5:	callq  2e190 <__assert_fail>
               :   4a0fa:	lea    0x11e1df(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   4a101:	lea    0x115d70(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   4a108:	lea    0x11a001(%rip),%rdi        # 164110 <__PRETTY_FUNCTION__.9742+0xfd5>
               :   4a10f:	mov    $0x662,%edx
               :   4a114:	callq  2e190 <__assert_fail>
               :   4a119:	mov    $0x20,%esi
               :   4a11e:	mov    %rbx,%rdi
               :   4a121:	callq  75590 <__overflow>
               :   4a126:	add    $0x1,%eax
               :   4a129:	jne    49c3a <_IO_vfprintf+0x39aa>
               :   4a12f:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a134:	mov    $0x20,%esi
               :   4a139:	mov    %rbx,%rdi
               :   4a13c:	mov    %r9d,-0x500(%rbp)
               :   4a143:	callq  75590 <__overflow>
               :   4a148:	add    $0x1,%eax
               :   4a14b:	mov    -0x500(%rbp),%r9d
               :   4a152:	jne    46c3d <_IO_vfprintf+0x9ad>
               :   4a158:	jmpq   467fb <_IO_vfprintf+0x56b>
     1 9.7e-04 :   4a15d:	xor    %r9d,%r9d
               :   4a160:	jmpq   46c1b <_IO_vfprintf+0x98b>
     1 9.7e-04 :   4a165:	cmpl   $0x0,-0x540(%rbp)
               :   4a16c:	je     4a1b1 <_IO_vfprintf+0x3f21>
               :   4a16e:	cmp    $0x30,%edx
               :   4a171:	jae    4a1a3 <_IO_vfprintf+0x3f13>
               :   4a173:	mov    %edx,%eax
               :   4a175:	add    0x10(%r15),%rax
               :   4a179:	add    $0x8,%edx
               :   4a17c:	mov    %edx,(%r15)
               :   4a17f:	movsbq (%rax),%rax
               :   4a183:	jmpq   46b0b <_IO_vfprintf+0x87b>
               :   4a188:	mov    $0x25,%esi
               :   4a18d:	mov    %rbx,%rdi
               :   4a190:	callq  75590 <__overflow>
               :   4a195:	add    $0x1,%eax
               :   4a198:	jne    49b0f <_IO_vfprintf+0x387f>
               :   4a19e:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a1a3:	mov    0x8(%r15),%rax
               :   4a1a7:	lea    0x8(%rax),%rdx
               :   4a1ab:	mov    %rdx,0x8(%r15)
               :   4a1af:	jmp    4a17f <_IO_vfprintf+0x3eef>
               :   4a1b1:	cmpl   $0x0,-0x538(%rbp)
               :   4a1b8:	jne    4a8fb <_IO_vfprintf+0x466b>
               :   4a1be:	cmp    $0x30,%edx
               :   4a1c1:	jae    4a8ea <_IO_vfprintf+0x465a>
               :   4a1c7:	mov    %edx,%eax
     1 9.7e-04 :   4a1c9:	add    0x10(%r15),%rax
               :   4a1cd:	add    $0x8,%edx
               :   4a1d0:	mov    %edx,(%r15)
               :   4a1d3:	movslq (%rax),%rax
               :   4a1d6:	jmpq   46b0b <_IO_vfprintf+0x87b>
               :   4a1db:	movl   $0xa,-0x53c(%rbp)
               :   4a1e5:	cmpl   $0x0,-0x510(%rbp)
               :   4a1ec:	mov    (%r15),%edx
               :   4a1ef:	je     4a22c <_IO_vfprintf+0x3f9c>
               :   4a1f1:	cmp    $0x30,%edx
               :   4a1f4:	jae    4a924 <_IO_vfprintf+0x4694>
               :   4a1fa:	mov    %edx,%eax
               :   4a1fc:	add    0x10(%r15),%rax
               :   4a200:	add    $0x8,%edx
               :   4a203:	mov    %edx,(%r15)
               :   4a206:	mov    (%rax),%rax
               :   4a209:	movl   $0x0,-0x520(%rbp)
               :   4a213:	xor    %r10d,%r10d
               :   4a216:	movl   $0x0,-0x518(%rbp)
               :   4a220:	mov    %rax,-0x538(%rbp)
               :   4a227:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   4a22c:	cmpl   $0x0,-0x540(%rbp)
               :   4a233:	je     4b230 <_IO_vfprintf+0x4fa0>
               :   4a239:	cmp    $0x30,%edx
               :   4a23c:	jae    4b21f <_IO_vfprintf+0x4f8f>
               :   4a242:	mov    %edx,%eax
               :   4a244:	add    0x10(%r15),%rax
               :   4a248:	add    $0x8,%edx
               :   4a24b:	mov    %edx,(%r15)
               :   4a24e:	movzbl (%rax),%eax
               :   4a251:	movl   $0x0,-0x520(%rbp)
               :   4a25b:	xor    %r10d,%r10d
               :   4a25e:	movl   $0x0,-0x518(%rbp)
               :   4a268:	mov    %rax,-0x538(%rbp)
               :   4a26f:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   4a274:	mov    -0x4a0(%rbp),%rax
               :   4a27b:	mov    %rax,%rdx
               :   4a27e:	lea    0x1(%rax),%rax
               :   4a282:	mov    %rax,-0x4a0(%rbp)
               :   4a289:	movzbl 0x1(%rdx),%ecx
               :   4a28d:	cmp    $0x2a,%cl
               :   4a290:	je     4a377 <_IO_vfprintf+0x40e7>
               :   4a296:	movzbl %cl,%edx
               :   4a299:	movl   $0x0,-0x508(%rbp)
               :   4a2a3:	sub    $0x30,%edx
               :   4a2a6:	cmp    $0x9,%edx
               :   4a2a9:	jbe    4a2e5 <_IO_vfprintf+0x4055>
               :   4a2ab:	movzbl (%rax),%eax
               :   4a2ae:	lea    -0x20(%rax),%edx
               :   4a2b1:	mov    %al,-0x4c8(%rbp)
               :   4a2b7:	xor    %eax,%eax
               :   4a2b9:	cmp    $0x5a,%dl
               :   4a2bc:	ja     4a2e0 <_IO_vfprintf+0x4050>
               :   4a2be:	movsbl -0x4c8(%rbp),%eax
               :   4a2c5:	lea    0x110114(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4a2cc:	sub    $0x20,%eax
               :   4a2cf:	cltq   
               :   4a2d1:	movzbl (%rdx,%rax,1),%edx
               :   4a2d5:	lea    0x10ff84(%rip),%rax        # 15a260 <step2_jumps.12110>
               :   4a2dc:	movslq (%rax,%rdx,4),%rax
               :   4a2e0:	add    %r12,%rax
               :   4a2e3:	jmpq   *%rax
               :   4a2e5:	mov    -0x578(%rbp),%rdi
               :   4a2ec:	callq  1f567 <read_int>
               :   4a2f1:	mov    %eax,-0x508(%rbp)
               :   4a2f7:	add    $0x1,%eax
               :   4a2fa:	je     46d83 <_IO_vfprintf+0xaf3>
               :   4a300:	cmpl   $0x3c8,-0x508(%rbp)
               :   4a30a:	jbe    4a48a <_IO_vfprintf+0x41fa>
               :   4a310:	mov    -0x500(%rbp),%eax
               :   4a316:	cmp    %eax,-0x508(%rbp)
               :   4a31c:	jle    4a48a <_IO_vfprintf+0x41fa>
               :   4a322:	cmpl   $0x7fffffde,-0x508(%rbp)
               :   4a32c:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   4a332:	movslq -0x508(%rbp),%r13
               :   4a339:	add    $0x20,%r13
               :   4a33d:	cmp    $0x1000,%r13
               :   4a344:	ja     4a45b <_IO_vfprintf+0x41cb>
               :   4a34a:	lea    0x1e(%r13),%rax
               :   4a34e:	mov    $0x10,%ecx
               :   4a353:	xor    %edx,%edx
               :   4a355:	div    %rcx
               :   4a358:	shl    $0x4,%rax
               :   4a35c:	sub    %rax,%rsp
               :   4a35f:	lea    0xf(%rsp),%rax
               :   4a364:	and    $0xfffffffffffffff0,%rax
               :   4a368:	add    %rax,%r13
               :   4a36b:	mov    -0x4a0(%rbp),%rax
               :   4a372:	jmpq   4a2ab <_IO_vfprintf+0x401b>
               :   4a377:	lea    0x2(%rdx),%rax
               :   4a37b:	mov    %rax,-0x4a0(%rbp)
               :   4a382:	mov    %rax,-0x470(%rbp)
               :   4a389:	movzbl 0x2(%rdx),%eax
               :   4a38d:	sub    $0x30,%eax
               :   4a390:	cmp    $0x9,%eax
               :   4a393:	jbe    4a429 <_IO_vfprintf+0x4199>
               :   4a399:	mov    (%r15),%edx
               :   4a39c:	cmp    $0x30,%edx
               :   4a39f:	jb     4a41b <_IO_vfprintf+0x418b>
               :   4a3a1:	mov    0x8(%r15),%rax
               :   4a3a5:	lea    0x8(%rax),%rdx
               :   4a3a9:	mov    %rdx,0x8(%r15)
               :   4a3ad:	mov    (%rax),%eax
               :   4a3af:	mov    $0xffffffff,%ecx
               :   4a3b4:	test   %eax,%eax
               :   4a3b6:	cmovns %eax,%ecx
               :   4a3b9:	mov    %ecx,-0x508(%rbp)
               :   4a3bf:	jmpq   4a300 <_IO_vfprintf+0x4070>
               :   4a3c4:	mov    -0x4a0(%rbp),%rax
               :   4a3cb:	lea    0x1(%rax),%rdx
               :   4a3cf:	mov    %rdx,-0x4a0(%rbp)
               :   4a3d6:	movzbl 0x1(%rax),%eax
               :   4a3da:	lea    -0x20(%rax),%edx
               :   4a3dd:	mov    %al,-0x4c8(%rbp)
               :   4a3e3:	xor    %eax,%eax
               :   4a3e5:	cmp    $0x5a,%dl
               :   4a3e8:	ja     4a40c <_IO_vfprintf+0x417c>
               :   4a3ea:	movsbl -0x4c8(%rbp),%eax
               :   4a3f1:	lea    0x10ffe8(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4a3f8:	sub    $0x20,%eax
               :   4a3fb:	cltq   
               :   4a3fd:	movzbl (%rdx,%rax,1),%edx
               :   4a401:	lea    0x10fdd8(%rip),%rax        # 15a1e0 <step3a_jumps.12111>
               :   4a408:	movslq (%rax,%rdx,4),%rax
               :   4a40c:	add    %r12,%rax
               :   4a40f:	movl   $0x1,-0x538(%rbp)
               :   4a419:	jmpq   *%rax
               :   4a41b:	mov    %edx,%eax
               :   4a41d:	add    $0x8,%edx
               :   4a420:	add    0x10(%r15),%rax
               :   4a424:	mov    %edx,(%r15)
               :   4a427:	jmp    4a3ad <_IO_vfprintf+0x411d>
               :   4a429:	mov    -0x5a0(%rbp),%rdi
               :   4a430:	callq  1f567 <read_int>
               :   4a435:	cmp    $0xffffffff,%eax
               :   4a438:	je     46d83 <_IO_vfprintf+0xaf3>
               :   4a43e:	test   %eax,%eax
               :   4a440:	je     4a399 <_IO_vfprintf+0x4109>
               :   4a446:	mov    -0x470(%rbp),%rax
               :   4a44d:	cmpb   $0x24,(%rax)
               :   4a450:	jne    4a399 <_IO_vfprintf+0x4109>
               :   4a456:	jmpq   48130 <_IO_vfprintf+0x1ea0>
               :   4a45b:	mov    %r13,%rdi
               :   4a45e:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4a463:	test   %eax,%eax
               :   4a465:	jne    4a34a <_IO_vfprintf+0x40ba>
               :   4a46b:	mov    %r13,%rdi
               :   4a46e:	callq  1f400 <memalign@plt>
               :   4a473:	test   %rax,%rax
               :   4a476:	mov    %rax,-0x4c0(%rbp)
               :   4a47d:	je     467fb <_IO_vfprintf+0x56b>
               :   4a483:	add    -0x4c0(%rbp),%r13
               :   4a48a:	mov    -0x4a0(%rbp),%rax
               :   4a491:	jmpq   4a2ab <_IO_vfprintf+0x401b>
               :   4a496:	mov    (%r15),%edx
               :   4a499:	cmp    $0x30,%edx
               :   4a49c:	jae    4a4d2 <_IO_vfprintf+0x4242>
               :   4a49e:	mov    %edx,%eax
               :   4a4a0:	add    0x10(%r15),%rax
               :   4a4a4:	add    $0x8,%edx
               :   4a4a7:	mov    %edx,(%r15)
               :   4a4aa:	mov    (%rax),%r13
               :   4a4ad:	jmpq   47d28 <_IO_vfprintf+0x1a98>
               :   4a4b2:	cmpb   $0x0,-0x4c8(%rbp)
               :   4a4b9:	jne    48130 <_IO_vfprintf+0x1ea0>
               :   4a4bf:	mov    0x356992(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   4a4c6:	movl   $0x16,%fs:(%rax)
               :   4a4cd:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a4d2:	mov    0x8(%r15),%rax
               :   4a4d6:	lea    0x8(%rax),%rdx
               :   4a4da:	mov    %rdx,0x8(%r15)
               :   4a4de:	jmp    4a4aa <_IO_vfprintf+0x421a>
               :   4a4e0:	mov    0x28(%rbx),%rax
               :   4a4e4:	cmp    0x30(%rbx),%rax
               :   4a4e8:	jae    4a569 <_IO_vfprintf+0x42d9>
               :   4a4ea:	lea    0x1(%rax),%rdx
               :   4a4ee:	mov    %rdx,0x28(%rbx)
               :   4a4f2:	movb   $0x25,(%rax)
               :   4a4f5:	cmpl   $0x7fffffff,-0x4a8(%rbp)
               :   4a4ff:	je     467fb <_IO_vfprintf+0x56b>
               :   4a505:	addl   $0x1,-0x4a8(%rbp)
               :   4a50c:	jmpq   470a9 <_IO_vfprintf+0xe19>
               :   4a511:	movslq -0x4e4(%rbp),%rax
               :   4a518:	imul   $0x48,%rax,%rax
               :   4a51c:	add    -0x4d0(%rbp),%rax
               :   4a523:	je     4a5ad <_IO_vfprintf+0x431d>
               :   4a529:	movslq 0x30(%rax),%rax
               :   4a52d:	mov    -0x4d8(%rbp),%rcx
               :   4a534:	shl    $0x4,%rax
               :   4a538:	cmpl   $0x0,-0x568(%rbp)
               :   4a53f:	je     4a59d <_IO_vfprintf+0x430d>
               :   4a541:	mov    (%rcx,%rax,1),%rax
               :   4a545:	test   %rax,%rax
               :   4a548:	jns    4a584 <_IO_vfprintf+0x42f4>
               :   4a54a:	neg    %rax
               :   4a54d:	movl   $0xa,-0x578(%rbp)
               :   4a557:	mov    $0x1,%r9d
               :   4a55d:	mov    %rax,-0x568(%rbp)
               :   4a564:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   4a569:	mov    $0x25,%esi
               :   4a56e:	mov    %rbx,%rdi
               :   4a571:	callq  75590 <__overflow>
               :   4a576:	add    $0x1,%eax
               :   4a579:	jne    4a4f5 <_IO_vfprintf+0x4265>
               :   4a57f:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4a584:	mov    %rax,-0x568(%rbp)
               :   4a58b:	movl   $0xa,-0x578(%rbp)
               :   4a595:	xor    %r9d,%r9d
               :   4a598:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   4a59d:	cmpl   $0x0,-0x598(%rbp)
               :   4a5a4:	je     4a5d2 <_IO_vfprintf+0x4342>
               :   4a5a6:	movsbq (%rcx,%rax,1),%rax
               :   4a5ab:	jmp    4a545 <_IO_vfprintf+0x42b5>
               :   4a5ad:	cmpl   $0x0,-0x568(%rbp)
               :   4a5b4:	mov    (%r15),%edx
               :   4a5b7:	je     4a5f2 <_IO_vfprintf+0x4362>
               :   4a5b9:	cmp    $0x30,%edx
               :   4a5bc:	jae    4a5e4 <_IO_vfprintf+0x4354>
               :   4a5be:	mov    %edx,%eax
               :   4a5c0:	add    0x10(%r15),%rax
               :   4a5c4:	add    $0x8,%edx
               :   4a5c7:	mov    %edx,(%r15)
               :   4a5ca:	mov    (%rax),%rax
               :   4a5cd:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a5d2:	cmpl   $0x0,-0x580(%rbp)
               :   4a5d9:	jne    4a615 <_IO_vfprintf+0x4385>
               :   4a5db:	movslq (%rcx,%rax,1),%rax
               :   4a5df:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a5e4:	mov    0x8(%r15),%rax
               :   4a5e8:	lea    0x8(%rax),%rdx
               :   4a5ec:	mov    %rdx,0x8(%r15)
               :   4a5f0:	jmp    4a5ca <_IO_vfprintf+0x433a>
               :   4a5f2:	cmpl   $0x0,-0x598(%rbp)
               :   4a5f9:	je     4a62d <_IO_vfprintf+0x439d>
               :   4a5fb:	cmp    $0x30,%edx
               :   4a5fe:	jae    4a61f <_IO_vfprintf+0x438f>
               :   4a600:	mov    %edx,%eax
               :   4a602:	add    0x10(%r15),%rax
               :   4a606:	add    $0x8,%edx
               :   4a609:	mov    %edx,(%r15)
               :   4a60c:	movsbq (%rax),%rax
               :   4a610:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a615:	movswq (%rcx,%rax,1),%rax
               :   4a61a:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a61f:	mov    0x8(%r15),%rax
               :   4a623:	lea    0x8(%rax),%rdx
               :   4a627:	mov    %rdx,0x8(%r15)
               :   4a62b:	jmp    4a60c <_IO_vfprintf+0x437c>
               :   4a62d:	cmpl   $0x0,-0x580(%rbp)
               :   4a634:	jne    4a797 <_IO_vfprintf+0x4507>
               :   4a63a:	cmp    $0x30,%edx
               :   4a63d:	jae    4a786 <_IO_vfprintf+0x44f6>
               :   4a643:	mov    %edx,%eax
               :   4a645:	add    0x10(%r15),%rax
               :   4a649:	add    $0x8,%edx
               :   4a64c:	mov    %edx,(%r15)
               :   4a64f:	movslq (%rax),%rax
               :   4a652:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a657:	mov    0x8(%r15),%rax
               :   4a65b:	lea    0x8(%rax),%rdx
               :   4a65f:	mov    %rdx,0x8(%r15)
               :   4a663:	jmpq   47cf0 <_IO_vfprintf+0x1a60>
               :   4a668:	cmpl   $0x0,-0x540(%rbp)
               :   4a66f:	je     4a86c <_IO_vfprintf+0x45dc>
               :   4a675:	cmp    $0x30,%edx
               :   4a678:	jae    4a7b5 <_IO_vfprintf+0x4525>
               :   4a67e:	mov    %edx,%eax
               :   4a680:	add    0x10(%r15),%rax
               :   4a684:	add    $0x8,%edx
               :   4a687:	mov    %edx,(%r15)
               :   4a68a:	mov    (%rax),%rax
               :   4a68d:	mov    -0x4a8(%rbp),%ecx
               :   4a693:	mov    %cl,(%rax)
               :   4a695:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   4a69a:	mov    %rdx,%rdi
               :   4a69d:	mov    %rdx,-0x4c8(%rbp)
               :   4a6a4:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4a6a9:	test   %eax,%eax
               :   4a6ab:	mov    -0x4c8(%rbp),%rdx
               :   4a6b2:	jne    47fd9 <_IO_vfprintf+0x1d49>
               :   4a6b8:	mov    %rdx,%rdi
               :   4a6bb:	mov    %rdx,-0x508(%rbp)
               :   4a6c2:	callq  1f400 <memalign@plt>
               :   4a6c7:	test   %rax,%rax
               :   4a6ca:	mov    %rax,%r13
               :   4a6cd:	je     467fb <_IO_vfprintf+0x56b>
               :   4a6d3:	movl   $0x1,-0x4c8(%rbp)
               :   4a6dd:	mov    -0x508(%rbp),%rdx
               :   4a6e4:	jmpq   47ff7 <_IO_vfprintf+0x1d67>
               :   4a6e9:	lea    -0x470(%rbp),%r10
               :   4a6f0:	mov    -0x578(%rbp),%rcx
               :   4a6f7:	xor    %edx,%edx
               :   4a6f9:	xor    %edi,%edi
               :   4a6fb:	mov    %r10,%rsi
               :   4a6fe:	mov    %r10,-0x4c8(%rbp)
               :   4a705:	callq  9bfb0 <wcsrtombs>
               :   4a70a:	cmp    $0xffffffffffffffff,%rax
               :   4a70e:	mov    %rax,%r9
               :   4a711:	je     467fb <_IO_vfprintf+0x56b>
               :   4a717:	cmpl   $0x0,-0x480(%rbp)
               :   4a71e:	mov    -0x4c8(%rbp),%r10
               :   4a725:	jne    4a84d <_IO_vfprintf+0x45bd>
               :   4a72b:	lea    0x1(%rax),%rdx
               :   4a72f:	mov    %r13,-0x470(%rbp)
               :   4a736:	cmp    $0x1000,%rdx
               :   4a73d:	ja     4a7c6 <_IO_vfprintf+0x4536>
               :   4a743:	lea    0x1e(%rdx),%rax
               :   4a747:	movl   $0x0,-0x4c8(%rbp)
               :   4a751:	and    $0xfffffffffffffff0,%rax
               :   4a755:	sub    %rax,%rsp
               :   4a758:	lea    0xf(%rsp),%r13
               :   4a75d:	and    $0xfffffffffffffff0,%r13
               :   4a761:	mov    -0x578(%rbp),%rcx
               :   4a768:	mov    %r10,%rsi
               :   4a76b:	mov    %r13,%rdi
               :   4a76e:	mov    %r9,-0x508(%rbp)
               :   4a775:	callq  9bfb0 <wcsrtombs>
               :   4a77a:	mov    -0x508(%rbp),%r9
               :   4a781:	jmpq   47d72 <_IO_vfprintf+0x1ae2>
               :   4a786:	mov    0x8(%r15),%rax
               :   4a78a:	lea    0x8(%rax),%rdx
               :   4a78e:	mov    %rdx,0x8(%r15)
               :   4a792:	jmpq   4a64f <_IO_vfprintf+0x43bf>
               :   4a797:	cmp    $0x30,%edx
               :   4a79a:	jae    4a896 <_IO_vfprintf+0x4606>
               :   4a7a0:	mov    %edx,%eax
               :   4a7a2:	add    0x10(%r15),%rax
               :   4a7a6:	add    $0x8,%edx
               :   4a7a9:	mov    %edx,(%r15)
               :   4a7ac:	movswq (%rax),%rax
               :   4a7b0:	jmpq   4a545 <_IO_vfprintf+0x42b5>
               :   4a7b5:	mov    0x8(%r15),%rax
               :   4a7b9:	lea    0x8(%rax),%rdx
               :   4a7bd:	mov    %rdx,0x8(%r15)
               :   4a7c1:	jmpq   4a68a <_IO_vfprintf+0x43fa>
               :   4a7c6:	mov    %rdx,%rdi
               :   4a7c9:	mov    %r10,-0x510(%rbp)
               :   4a7d0:	mov    %rdx,-0x4c8(%rbp)
               :   4a7d7:	mov    %rax,-0x508(%rbp)
               :   4a7de:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4a7e3:	test   %eax,%eax
               :   4a7e5:	mov    -0x4c8(%rbp),%rdx
               :   4a7ec:	mov    -0x508(%rbp),%r9
               :   4a7f3:	mov    -0x510(%rbp),%r10
               :   4a7fa:	jne    4a743 <_IO_vfprintf+0x44b3>
               :   4a800:	mov    %rdx,%rdi
               :   4a803:	mov    %r10,-0x520(%rbp)
               :   4a80a:	mov    %r9,-0x510(%rbp)
               :   4a811:	mov    %rdx,-0x508(%rbp)
               :   4a818:	callq  1f400 <memalign@plt>
               :   4a81d:	test   %rax,%rax
               :   4a820:	mov    %rax,%r13
               :   4a823:	je     467fb <_IO_vfprintf+0x56b>
               :   4a829:	movl   $0x1,-0x4c8(%rbp)
               :   4a833:	mov    -0x508(%rbp),%rdx
               :   4a83a:	mov    -0x510(%rbp),%r9
               :   4a841:	mov    -0x520(%rbp),%r10
               :   4a848:	jmpq   4a761 <_IO_vfprintf+0x44d1>
               :   4a84d:	lea    0x11da8c(%rip),%rcx        # 1682e0 <__PRETTY_FUNCTION__.12075>
               :   4a854:	lea    0x11561d(%rip),%rsi        # 15fe78 <__PRETTY_FUNCTION__.8053+0x69>
               :   4a85b:	lea    0x115621(%rip),%rdi        # 15fe83 <__PRETTY_FUNCTION__.8053+0x74>
               :   4a862:	mov    $0x663,%edx
               :   4a867:	callq  2e190 <__assert_fail>
               :   4a86c:	cmpl   $0x0,-0x538(%rbp)
               :   4a873:	jne    4a8b5 <_IO_vfprintf+0x4625>
               :   4a875:	cmp    $0x30,%edx
               :   4a878:	jae    4a8a7 <_IO_vfprintf+0x4617>
               :   4a87a:	mov    %edx,%eax
               :   4a87c:	add    0x10(%r15),%rax
               :   4a880:	add    $0x8,%edx
               :   4a883:	mov    %edx,(%r15)
               :   4a886:	mov    (%rax),%rax
               :   4a889:	mov    -0x4a8(%rbp),%ecx
               :   4a88f:	mov    %ecx,(%rax)
               :   4a891:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   4a896:	mov    0x8(%r15),%rax
               :   4a89a:	lea    0x8(%rax),%rdx
               :   4a89e:	mov    %rdx,0x8(%r15)
               :   4a8a2:	jmpq   4a7ac <_IO_vfprintf+0x451c>
               :   4a8a7:	mov    0x8(%r15),%rax
               :   4a8ab:	lea    0x8(%rax),%rdx
               :   4a8af:	mov    %rdx,0x8(%r15)
               :   4a8b3:	jmp    4a886 <_IO_vfprintf+0x45f6>
               :   4a8b5:	cmp    $0x30,%edx
               :   4a8b8:	jae    4ac38 <_IO_vfprintf+0x49a8>
               :   4a8be:	mov    %edx,%eax
               :   4a8c0:	add    0x10(%r15),%rax
               :   4a8c4:	add    $0x8,%edx
               :   4a8c7:	mov    %edx,(%r15)
               :   4a8ca:	mov    (%rax),%rax
               :   4a8cd:	mov    -0x4a8(%rbp),%ecx
               :   4a8d3:	mov    %cx,(%rax)
               :   4a8d6:	jmpq   46a05 <_IO_vfprintf+0x775>
               :   4a8db:	movl   $0x10,-0x53c(%rbp)
               :   4a8e5:	jmpq   4a1e5 <_IO_vfprintf+0x3f55>
               :   4a8ea:	mov    0x8(%r15),%rax
               :   4a8ee:	lea    0x8(%rax),%rdx
               :   4a8f2:	mov    %rdx,0x8(%r15)
               :   4a8f6:	jmpq   4a1d3 <_IO_vfprintf+0x3f43>
               :   4a8fb:	cmp    $0x30,%edx
               :   4a8fe:	jae    4a935 <_IO_vfprintf+0x46a5>
               :   4a900:	mov    %edx,%eax
               :   4a902:	add    0x10(%r15),%rax
               :   4a906:	add    $0x8,%edx
               :   4a909:	mov    %edx,(%r15)
               :   4a90c:	movswq (%rax),%rax
               :   4a910:	jmpq   46b0b <_IO_vfprintf+0x87b>
               :   4a915:	movl   $0x8,-0x53c(%rbp)
               :   4a91f:	jmpq   4a1e5 <_IO_vfprintf+0x3f55>
               :   4a924:	mov    0x8(%r15),%rax
               :   4a928:	lea    0x8(%rax),%rdx
               :   4a92c:	mov    %rdx,0x8(%r15)
               :   4a930:	jmpq   4a206 <_IO_vfprintf+0x3f76>
               :   4a935:	mov    0x8(%r15),%rax
               :   4a939:	lea    0x8(%rax),%rdx
               :   4a93d:	mov    %rdx,0x8(%r15)
               :   4a941:	jmp    4a90c <_IO_vfprintf+0x467c>
               :   4a943:	lea    -0x470(%rbp),%r10
               :   4a94a:	xor    %eax,%eax
               :   4a94c:	mov    $0x5,%ecx
               :   4a951:	mov    -0x53c(%rbp),%esi
               :   4a957:	movzbl -0x510(%rbp),%edx
               :   4a95e:	mov    %r10,%rdi
               :   4a961:	rep stos %eax,%es:(%rdi)
               :   4a963:	mov    -0x508(%rbp),%eax
               :   4a969:	movzbl -0x538(%rbp),%ecx
               :   4a970:	and    $0x1,%edx
               :   4a973:	shl    $0x2,%edx
               :   4a976:	mov    %eax,-0x470(%rbp)
               :   4a97c:	mov    -0x500(%rbp),%eax
               :   4a982:	and    $0x1,%ecx
               :   4a985:	add    %ecx,%ecx
               :   4a987:	mov    %eax,-0x46c(%rbp)
               :   4a98d:	movsbl -0x4c8(%rbp),%eax
               :   4a994:	mov    %eax,-0x468(%rbp)
               :   4a99a:	mov    %esi,%eax
               :   4a99c:	and    $0x1,%eax
               :   4a99f:	or     %ecx,%eax
               :   4a9a1:	movzbl -0x528(%rbp),%ecx
               :   4a9a8:	or     %edx,%eax
               :   4a9aa:	movzbl -0x518(%rbp),%edx
               :   4a9b1:	and    $0x1,%ecx
               :   4a9b4:	shl    $0x3,%ecx
               :   4a9b7:	and    $0x1,%edx
               :   4a9ba:	or     %ecx,%eax
               :   4a9bc:	movzbl -0x514(%rbp),%ecx
               :   4a9c3:	shl    $0x4,%edx
               :   4a9c6:	or     %edx,%eax
               :   4a9c8:	movzbl -0x520(%rbp),%edx
               :   4a9cf:	and    $0x1,%ecx
               :   4a9d2:	shl    $0x5,%ecx
               :   4a9d5:	and    $0x1,%edx
               :   4a9d8:	or     %ecx,%eax
               :   4a9da:	movzbl -0x548(%rbp),%ecx
               :   4a9e1:	shl    $0x6,%edx
               :   4a9e4:	or     %edx,%eax
               :   4a9e6:	shl    $0x7,%ecx
               :   4a9e9:	or     %ecx,%eax
               :   4a9eb:	test   %esi,%esi
               :   4a9ed:	mov    %al,-0x464(%rbp)
               :   4a9f3:	movzbl -0x521(%rbp),%eax
               :   4a9fa:	mov    %eax,-0x460(%rbp)
               :   4aa00:	je     4aac6 <_IO_vfprintf+0x4836>
               :   4aa06:	mov    0x8(%r15),%rax
               :   4aa0a:	add    $0xf,%rax
               :   4aa0e:	and    $0xfffffffffffffff0,%rax
               :   4aa12:	lea    0x10(%rax),%rdx
               :   4aa16:	mov    %rdx,0x8(%r15)
               :   4aa1a:	fldt   (%rax)
               :   4aa1c:	fstpt  -0x480(%rbp)
               :   4aa22:	lea    -0x480(%rbp),%rax
               :   4aa29:	lea    -0x488(%rbp),%rdx
               :   4aa30:	mov    %r10,%rsi
               :   4aa33:	mov    %rbx,%rdi
               :   4aa36:	mov    %rax,-0x488(%rbp)
               :   4aa3d:	callq  4de20 <__printf_fphex>
               :   4aa42:	test   %eax,%eax
               :   4aa44:	js     467fb <_IO_vfprintf+0x56b>
               :   4aa4a:	mov    -0x4a8(%rbp),%ecx
               :   4aa50:	cmp    $0x7ffffffe,%ecx
               :   4aa56:	ja     4a0db <_IO_vfprintf+0x3e4b>
               :   4aa5c:	mov    $0x7fffffff,%edx
               :   4aa61:	sub    %ecx,%edx
               :   4aa63:	add    %eax,%ecx
               :   4aa65:	cmp    %edx,%eax
               :   4aa67:	jbe    46a05 <_IO_vfprintf+0x775>
               :   4aa6d:	jmpq   46d83 <_IO_vfprintf+0xaf3>
               :   4aa72:	mov    (%r15),%edx
               :   4aa75:	cmp    $0x30,%edx
               :   4aa78:	jae    4ac70 <_IO_vfprintf+0x49e0>
               :   4aa7e:	mov    %edx,%eax
               :   4aa80:	add    0x10(%r15),%rax
               :   4aa84:	add    $0x8,%edx
               :   4aa87:	mov    %edx,(%r15)
               :   4aa8a:	mov    (%rax),%rax
               :   4aa8d:	test   %rax,%rax
               :   4aa90:	je     4aaf4 <_IO_vfprintf+0x4864>
               :   4aa92:	mov    %rax,-0x538(%rbp)
               :   4aa99:	movb   $0x78,-0x4c8(%rbp)
               :   4aaa0:	xor    %r10d,%r10d
               :   4aaa3:	movl   $0x0,-0x548(%rbp)
               :   4aaad:	movl   $0x1,-0x528(%rbp)
               :   4aab7:	movl   $0x10,-0x53c(%rbp)
               :   4aac1:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   4aac6:	mov    0x4(%r15),%edx
               :   4aaca:	cmp    $0xb0,%edx
               :   4aad0:	jae    4ac81 <_IO_vfprintf+0x49f1>
               :   4aad6:	mov    %edx,%eax
               :   4aad8:	add    0x10(%r15),%rax
               :   4aadc:	add    $0x10,%edx
               :   4aadf:	mov    %edx,0x4(%r15)
               :   4aae3:	movsd  (%rax),%xmm0
               :   4aae7:	movsd  %xmm0,-0x480(%rbp)
               :   4aaef:	jmpq   4aa22 <_IO_vfprintf+0x4792>
               :   4aaf4:	cmpl   $0x4,-0x508(%rbp)
               :   4aafb:	jg     4ab07 <_IO_vfprintf+0x4877>
               :   4aafd:	movl   $0x5,-0x508(%rbp)
               :   4ab07:	movl   $0x0,-0x510(%rbp)
               :   4ab11:	lea    0x11535a(%rip),%r13        # 15fe72 <__PRETTY_FUNCTION__.8053+0x63>
               :   4ab18:	jmpq   47d31 <_IO_vfprintf+0x1aa1>
               :   4ab1d:	lea    -0x470(%rbp),%r10
               :   4ab24:	xor    %eax,%eax
               :   4ab26:	mov    $0x5,%ecx
               :   4ab2b:	mov    -0x53c(%rbp),%esi
               :   4ab31:	movzbl -0x510(%rbp),%edx
               :   4ab38:	mov    %r10,%rdi
               :   4ab3b:	rep stos %eax,%es:(%rdi)
               :   4ab3d:	mov    -0x508(%rbp),%eax
               :   4ab43:	movzbl -0x538(%rbp),%ecx
               :   4ab4a:	and    $0x1,%edx
               :   4ab4d:	shl    $0x2,%edx
               :   4ab50:	mov    %eax,-0x470(%rbp)
               :   4ab56:	mov    -0x500(%rbp),%eax
               :   4ab5c:	and    $0x1,%ecx
               :   4ab5f:	add    %ecx,%ecx
               :   4ab61:	mov    %eax,-0x46c(%rbp)
               :   4ab67:	movsbl -0x4c8(%rbp),%eax
               :   4ab6e:	mov    %eax,-0x468(%rbp)
               :   4ab74:	mov    %esi,%eax
               :   4ab76:	and    $0x1,%eax
               :   4ab79:	or     %ecx,%eax
               :   4ab7b:	movzbl -0x528(%rbp),%ecx
               :   4ab82:	or     %edx,%eax
               :   4ab84:	movzbl -0x518(%rbp),%edx
               :   4ab8b:	and    $0x1,%ecx
               :   4ab8e:	shl    $0x3,%ecx
               :   4ab91:	and    $0x1,%edx
               :   4ab94:	or     %ecx,%eax
               :   4ab96:	movzbl -0x514(%rbp),%ecx
               :   4ab9d:	shl    $0x4,%edx
               :   4aba0:	or     %edx,%eax
               :   4aba2:	movzbl -0x520(%rbp),%edx
               :   4aba9:	and    $0x1,%ecx
               :   4abac:	shl    $0x5,%ecx
               :   4abaf:	and    $0x1,%edx
               :   4abb2:	or     %ecx,%eax
               :   4abb4:	movzbl -0x548(%rbp),%ecx
               :   4abbb:	shl    $0x6,%edx
               :   4abbe:	or     %edx,%eax
               :   4abc0:	shl    $0x7,%ecx
               :   4abc3:	or     %ecx,%eax
               :   4abc5:	mov    %al,-0x464(%rbp)
               :   4abcb:	movzbl -0x54c(%rbp),%eax
               :   4abd2:	and    $0x1,%eax
               :   4abd5:	shl    $0x3,%eax
               :   4abd8:	test   %esi,%esi
               :   4abda:	mov    %al,-0x463(%rbp)
               :   4abe0:	movzbl -0x521(%rbp),%eax
               :   4abe7:	mov    %eax,-0x460(%rbp)
               :   4abed:	je     4ac49 <_IO_vfprintf+0x49b9>
               :   4abef:	mov    0x8(%r15),%rax
               :   4abf3:	add    $0xf,%rax
               :   4abf7:	and    $0xfffffffffffffff0,%rax
               :   4abfb:	lea    0x10(%rax),%rdx
               :   4abff:	mov    %rdx,0x8(%r15)
               :   4ac03:	fldt   (%rax)
               :   4ac05:	fstpt  -0x480(%rbp)
               :   4ac0b:	lea    -0x480(%rbp),%rax
               :   4ac12:	lea    -0x490(%rbp),%rdx
               :   4ac19:	mov    %r10,%rsi
               :   4ac1c:	mov    %rbx,%rdi
               :   4ac1f:	mov    %rax,-0x490(%rbp)
               :   4ac26:	callq  4b770 <__printf_fp>
               :   4ac2b:	test   %eax,%eax
               :   4ac2d:	jns    4aa4a <_IO_vfprintf+0x47ba>
               :   4ac33:	jmpq   467fb <_IO_vfprintf+0x56b>
               :   4ac38:	mov    0x8(%r15),%rax
               :   4ac3c:	lea    0x8(%rax),%rdx
               :   4ac40:	mov    %rdx,0x8(%r15)
               :   4ac44:	jmpq   4a8ca <_IO_vfprintf+0x463a>
               :   4ac49:	mov    0x4(%r15),%edx
               :   4ac4d:	cmp    $0xb0,%edx
               :   4ac53:	jae    4ac92 <_IO_vfprintf+0x4a02>
               :   4ac55:	mov    %edx,%eax
               :   4ac57:	add    0x10(%r15),%rax
               :   4ac5b:	add    $0x10,%edx
               :   4ac5e:	mov    %edx,0x4(%r15)
               :   4ac62:	movsd  (%rax),%xmm0
               :   4ac66:	movsd  %xmm0,-0x480(%rbp)
               :   4ac6e:	jmp    4ac0b <_IO_vfprintf+0x497b>
               :   4ac70:	mov    0x8(%r15),%rax
               :   4ac74:	lea    0x8(%rax),%rdx
               :   4ac78:	mov    %rdx,0x8(%r15)
               :   4ac7c:	jmpq   4aa8a <_IO_vfprintf+0x47fa>
               :   4ac81:	mov    0x8(%r15),%rax
               :   4ac85:	lea    0x8(%rax),%rdx
               :   4ac89:	mov    %rdx,0x8(%r15)
               :   4ac8d:	jmpq   4aae3 <_IO_vfprintf+0x4853>
               :   4ac92:	mov    0x8(%r15),%rax
               :   4ac96:	lea    0x8(%rax),%rdx
               :   4ac9a:	mov    %rdx,0x8(%r15)
               :   4ac9e:	jmp    4ac62 <_IO_vfprintf+0x49d2>
               :   4aca0:	cmpq   $0xffffffffffffffff,-0x4e0(%rbp)
               :   4aca8:	je     4ad01 <_IO_vfprintf+0x4a71>
               :   4acaa:	mov    -0x4a0(%rbp),%rax
               :   4acb1:	lea    0x1(%rax),%rdx
               :   4acb5:	mov    %rdx,-0x4a0(%rbp)
               :   4acbc:	movzbl 0x1(%rax),%eax
               :   4acc0:	lea    -0x20(%rax),%edx
               :   4acc3:	mov    %al,-0x4c8(%rbp)
               :   4acc9:	xor    %eax,%eax
               :   4accb:	cmp    $0x5a,%dl
               :   4acce:	ja     4acf2 <_IO_vfprintf+0x4a62>
               :   4acd0:	movsbl -0x4c8(%rbp),%eax
               :   4acd7:	lea    0x10f702(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4acde:	sub    $0x20,%eax
               :   4ace1:	cltq   
               :   4ace3:	movzbl (%rdx,%rax,1),%edx
               :   4ace7:	lea    0x10f672(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   4acee:	movslq (%rax,%rdx,4),%rax
               :   4acf2:	add    %r12,%rax
               :   4acf5:	movl   $0x1,-0x548(%rbp)
               :   4acff:	jmpq   *%rax
               :   4ad01:	mov    0x3560a8(%rip),%rax        # 3a0db0 <_DYNAMIC+0x230>
               :   4ad08:	mov    %fs:(%rax),%rax
               :   4ad0c:	mov    0x8(%rax),%rax
               :   4ad10:	mov    0x48(%rax),%rcx
               :   4ad14:	mov    0x50(%rax),%rax
               :   4ad18:	mov    %rax,-0x4e0(%rbp)
               :   4ad1f:	movzbl (%rax),%eax
               :   4ad22:	mov    %rcx,-0x4f8(%rbp)
               :   4ad29:	cmp    $0x7f,%al
               :   4ad2b:	je     4ada4 <_IO_vfprintf+0x4b14>
               :   4ad2d:	test   %al,%al
               :   4ad2f:	je     4ada4 <_IO_vfprintf+0x4b14>
               :   4ad31:	cmpb   $0x0,(%rcx)
               :   4ad34:	mov    $0x0,%eax
               :   4ad39:	cmovne -0x4e0(%rbp),%rax
               :   4ad41:	mov    %rax,-0x4e0(%rbp)
               :   4ad48:	jmpq   4acaa <_IO_vfprintf+0x4a1a>
               :   4ad4d:	mov    -0x4a0(%rbp),%rax
               :   4ad54:	lea    0x1(%rax),%rdx
               :   4ad58:	mov    %rdx,-0x4a0(%rbp)
               :   4ad5f:	movzbl 0x1(%rax),%eax
               :   4ad63:	lea    -0x20(%rax),%edx
               :   4ad66:	mov    %al,-0x4c8(%rbp)
               :   4ad6c:	xor    %eax,%eax
               :   4ad6e:	cmp    $0x5a,%dl
               :   4ad71:	ja     4ad95 <_IO_vfprintf+0x4b05>
               :   4ad73:	movsbl -0x4c8(%rbp),%eax
               :   4ad7a:	lea    0x10f65f(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4ad81:	sub    $0x20,%eax
               :   4ad84:	cltq   
               :   4ad86:	movzbl (%rdx,%rax,1),%edx
               :   4ad8a:	lea    0x10f5cf(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   4ad91:	movslq (%rax,%rdx,4),%rax
               :   4ad95:	add    %r12,%rax
               :   4ad98:	movl   $0x1,-0x54c(%rbp)
               :   4ada2:	jmpq   *%rax
               :   4ada4:	movq   $0x0,-0x4e0(%rbp)
               :   4adaf:	jmpq   4acaa <_IO_vfprintf+0x4a1a>
               :   4adb4:	mov    -0x4a0(%rbp),%rax
               :   4adbb:	lea    0x1(%rax),%rdx
               :   4adbf:	mov    %rdx,-0x4a0(%rbp)
               :   4adc6:	mov    %rdx,-0x470(%rbp)
               :   4adcd:	movzbl 0x1(%rax),%eax
               :   4add1:	sub    $0x30,%eax
               :   4add4:	cmp    $0x9,%eax
               :   4add7:	jbe    4b000 <_IO_vfprintf+0x4d70>
               :   4addd:	mov    (%r15),%edx
               :   4ade0:	cmp    $0x30,%edx
               :   4ade3:	jb     4b032 <_IO_vfprintf+0x4da2>
               :   4ade9:	mov    0x8(%r15),%rax
               :   4aded:	lea    0x8(%rax),%rdx
               :   4adf1:	mov    %rdx,0x8(%r15)
               :   4adf5:	mov    (%rax),%eax
               :   4adf7:	test   %eax,%eax
               :   4adf9:	mov    %eax,-0x500(%rbp)
               :   4adff:	jns    4ae18 <_IO_vfprintf+0x4b88>
               :   4ae01:	negl   -0x500(%rbp)
               :   4ae07:	movb   $0x20,-0x521(%rbp)
               :   4ae0e:	movl   $0x1,-0x514(%rbp)
               :   4ae18:	cmpl   $0x7fffffde,-0x500(%rbp)
               :   4ae22:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   4ae28:	cmpl   $0x3c7,-0x500(%rbp)
               :   4ae32:	jbe    4ae6d <_IO_vfprintf+0x4bdd>
               :   4ae34:	movslq -0x500(%rbp),%r13
               :   4ae3b:	add    $0x20,%r13
               :   4ae3f:	cmp    $0x1000,%r13
               :   4ae46:	ja     4b043 <_IO_vfprintf+0x4db3>
               :   4ae4c:	lea    0x1e(%r13),%rax
               :   4ae50:	mov    $0x10,%ecx
               :   4ae55:	xor    %edx,%edx
               :   4ae57:	div    %rcx
               :   4ae5a:	shl    $0x4,%rax
               :   4ae5e:	sub    %rax,%rsp
               :   4ae61:	lea    0xf(%rsp),%rax
               :   4ae66:	and    $0xfffffffffffffff0,%rax
               :   4ae6a:	add    %rax,%r13
               :   4ae6d:	mov    -0x4a0(%rbp),%rax
               :   4ae74:	movzbl (%rax),%eax
               :   4ae77:	mov    %al,-0x4c8(%rbp)
               :   4ae7d:	sub    $0x20,%eax
               :   4ae80:	cmp    $0x5a,%al
               :   4ae82:	jbe    4b0fb <_IO_vfprintf+0x4e6b>
               :   4ae88:	xor    %eax,%eax
               :   4ae8a:	jmpq   4a2e0 <_IO_vfprintf+0x4050>
               :   4ae8f:	mov    -0x4a0(%rbp),%rax
               :   4ae96:	lea    0x1(%rax),%rdx
               :   4ae9a:	mov    %rdx,-0x4a0(%rbp)
               :   4aea1:	movzbl 0x1(%rax),%eax
               :   4aea5:	lea    -0x20(%rax),%edx
               :   4aea8:	mov    %al,-0x4c8(%rbp)
               :   4aeae:	xor    %eax,%eax
               :   4aeb0:	cmp    $0x5a,%dl
               :   4aeb3:	ja     4aed7 <_IO_vfprintf+0x4c47>
               :   4aeb5:	movsbl -0x4c8(%rbp),%eax
               :   4aebc:	lea    0x10f51d(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4aec3:	sub    $0x20,%eax
               :   4aec6:	cltq   
               :   4aec8:	movzbl (%rdx,%rax,1),%edx
               :   4aecc:	lea    0x10f28d(%rip),%rax        # 15a160 <step4_jumps.12114>
               :   4aed3:	movslq (%rax,%rdx,4),%rax
               :   4aed7:	add    %r12,%rax
               :   4aeda:	movl   $0x1,-0x510(%rbp)
               :   4aee4:	movl   $0x1,-0x53c(%rbp)
               :   4aeee:	jmpq   *%rax
               :   4aef0:	mov    -0x4a0(%rbp),%rax
               :   4aef7:	lea    0x1(%rax),%rdx
               :   4aefb:	mov    %rdx,-0x4a0(%rbp)
               :   4af02:	movzbl 0x1(%rax),%eax
               :   4af06:	lea    -0x20(%rax),%edx
               :   4af09:	mov    %al,-0x4c8(%rbp)
               :   4af0f:	xor    %eax,%eax
               :   4af11:	cmp    $0x5a,%dl
               :   4af14:	ja     4af38 <_IO_vfprintf+0x4ca8>
               :   4af16:	movsbl -0x4c8(%rbp),%eax
               :   4af1d:	lea    0x10f4bc(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4af24:	sub    $0x20,%eax
               :   4af27:	cltq   
               :   4af29:	movzbl (%rdx,%rax,1),%edx
               :   4af2d:	lea    0x10f42c(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   4af34:	movslq (%rax,%rdx,4),%rax
               :   4af38:	add    %r12,%rax
               :   4af3b:	movl   $0x1,-0x528(%rbp)
               :   4af45:	jmpq   *%rax
               :   4af47:	cmpl   $0x0,-0x514(%rbp)
               :   4af4e:	movzbl -0x521(%rbp),%ecx
               :   4af55:	mov    $0x30,%eax
               :   4af5a:	cmove  %eax,%ecx
               :   4af5d:	mov    -0x4a0(%rbp),%rax
               :   4af64:	mov    %cl,-0x521(%rbp)
               :   4af6a:	lea    0x1(%rax),%rdx
               :   4af6e:	mov    %rdx,-0x4a0(%rbp)
               :   4af75:	movzbl 0x1(%rax),%eax
               :   4af79:	lea    -0x20(%rax),%edx
               :   4af7c:	mov    %al,-0x4c8(%rbp)
               :   4af82:	xor    %eax,%eax
               :   4af84:	cmp    $0x5a,%dl
               :   4af87:	ja     4a2e0 <_IO_vfprintf+0x4050>
               :   4af8d:	movsbl -0x4c8(%rbp),%eax
               :   4af94:	lea    0x10f445(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4af9b:	sub    $0x20,%eax
               :   4af9e:	cltq   
               :   4afa0:	movzbl (%rdx,%rax,1),%edx
               :   4afa4:	lea    0x10f3b5(%rip),%rax        # 15a360 <step0_jumps.12078>
               :   4afab:	movslq (%rax,%rdx,4),%rax
               :   4afaf:	jmpq   4a2e0 <_IO_vfprintf+0x4050>
               :   4afb4:	mov    0x8(%r15),%rax
               :   4afb8:	lea    0x8(%rax),%rdx
               :   4afbc:	mov    %rdx,0x8(%r15)
               :   4afc0:	jmpq   49a1c <_IO_vfprintf+0x378c>
               :   4afc5:	cmp    $0x30,%edx
               :   4afc8:	jae    4b122 <_IO_vfprintf+0x4e92>
               :   4afce:	mov    %edx,%eax
               :   4afd0:	add    0x10(%r15),%rax
               :   4afd4:	add    $0x8,%edx
               :   4afd7:	mov    %edx,(%r15)
               :   4afda:	movzwl (%rax),%eax
               :   4afdd:	movl   $0x0,-0x550(%rbp)
               :   4afe7:	xor    %r9d,%r9d
               :   4afea:	movl   $0x0,-0x570(%rbp)
               :   4aff4:	mov    %rax,-0x568(%rbp)
               :   4affb:	jmpq   47676 <_IO_vfprintf+0x13e6>
               :   4b000:	mov    -0x5a0(%rbp),%rdi
               :   4b007:	callq  1f567 <read_int>
               :   4b00c:	cmp    $0xffffffff,%eax
               :   4b00f:	je     46d83 <_IO_vfprintf+0xaf3>
               :   4b015:	test   %eax,%eax
               :   4b017:	je     4addd <_IO_vfprintf+0x4b4d>
               :   4b01d:	mov    -0x470(%rbp),%rax
               :   4b024:	cmpb   $0x24,(%rax)
               :   4b027:	jne    4addd <_IO_vfprintf+0x4b4d>
               :   4b02d:	jmpq   48130 <_IO_vfprintf+0x1ea0>
               :   4b032:	mov    %edx,%eax
               :   4b034:	add    $0x8,%edx
               :   4b037:	add    0x10(%r15),%rax
               :   4b03b:	mov    %edx,(%r15)
               :   4b03e:	jmpq   4adf5 <_IO_vfprintf+0x4b65>
               :   4b043:	mov    %r13,%rdi
               :   4b046:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4b04b:	test   %eax,%eax
               :   4b04d:	jne    4ae4c <_IO_vfprintf+0x4bbc>
               :   4b053:	mov    %r13,%rdi
               :   4b056:	callq  1f400 <memalign@plt>
               :   4b05b:	test   %rax,%rax
               :   4b05e:	mov    %rax,-0x4c0(%rbp)
               :   4b065:	je     467fb <_IO_vfprintf+0x56b>
               :   4b06b:	add    -0x4c0(%rbp),%r13
               :   4b072:	jmpq   4ae6d <_IO_vfprintf+0x4bdd>
               :   4b077:	mov    -0x578(%rbp),%rdi
               :   4b07e:	callq  1f567 <read_int>
               :   4b083:	cmp    $0x7fffffde,%eax
               :   4b088:	mov    %eax,-0x500(%rbp)
               :   4b08e:	ja     46d83 <_IO_vfprintf+0xaf3>
               :   4b094:	cmpl   $0x3c7,-0x500(%rbp)
               :   4b09e:	jbe    4b0d5 <_IO_vfprintf+0x4e45>
               :   4b0a0:	movslq -0x500(%rbp),%r13
               :   4b0a7:	add    $0x20,%r13
               :   4b0ab:	cmp    $0x1000,%r13
               :   4b0b2:	ja     4b133 <_IO_vfprintf+0x4ea3>
               :   4b0b4:	lea    0x1e(%r13),%rax
               :   4b0b8:	mov    $0x10,%ecx
               :   4b0bd:	xor    %edx,%edx
               :   4b0bf:	div    %rcx
               :   4b0c2:	shl    $0x4,%rax
               :   4b0c6:	sub    %rax,%rsp
               :   4b0c9:	lea    0xf(%rsp),%rax
               :   4b0ce:	and    $0xfffffffffffffff0,%rax
               :   4b0d2:	add    %rax,%r13
               :   4b0d5:	mov    -0x4a0(%rbp),%rax
               :   4b0dc:	movzbl (%rax),%eax
               :   4b0df:	cmp    $0x24,%al
               :   4b0e1:	je     48130 <_IO_vfprintf+0x1ea0>
               :   4b0e7:	lea    -0x20(%rax),%edx
               :   4b0ea:	mov    %al,-0x4c8(%rbp)
               :   4b0f0:	xor    %eax,%eax
               :   4b0f2:	cmp    $0x5a,%dl
               :   4b0f5:	ja     4a2e0 <_IO_vfprintf+0x4050>
               :   4b0fb:	movsbl -0x4c8(%rbp),%eax
               :   4b102:	lea    0x10f2d7(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4b109:	sub    $0x20,%eax
               :   4b10c:	cltq   
               :   4b10e:	movzbl (%rdx,%rax,1),%edx
               :   4b112:	lea    0x10f1c7(%rip),%rax        # 15a2e0 <step1_jumps.12109>
               :   4b119:	movslq (%rax,%rdx,4),%rax
               :   4b11d:	jmpq   4a2e0 <_IO_vfprintf+0x4050>
               :   4b122:	mov    0x8(%r15),%rax
               :   4b126:	lea    0x8(%rax),%rdx
               :   4b12a:	mov    %rdx,0x8(%r15)
               :   4b12e:	jmpq   4afda <_IO_vfprintf+0x4d4a>
               :   4b133:	mov    %r13,%rdi
               :   4b136:	callq  f0fd0 <__libc_alloca_cutoff>
               :   4b13b:	test   %eax,%eax
               :   4b13d:	jne    4b0b4 <_IO_vfprintf+0x4e24>
               :   4b143:	mov    %r13,%rdi
               :   4b146:	callq  1f400 <memalign@plt>
               :   4b14b:	test   %rax,%rax
               :   4b14e:	mov    %rax,-0x4c0(%rbp)
               :   4b155:	je     467fb <_IO_vfprintf+0x56b>
               :   4b15b:	add    -0x4c0(%rbp),%r13
               :   4b162:	jmpq   4b0d5 <_IO_vfprintf+0x4e45>
               :   4b167:	mov    -0x4a0(%rbp),%rax
               :   4b16e:	lea    0x1(%rax),%rdx
               :   4b172:	mov    %rdx,-0x4a0(%rbp)
               :   4b179:	movzbl 0x1(%rax),%eax
               :   4b17d:	lea    -0x20(%rax),%edx
               :   4b180:	mov    %al,-0x4c8(%rbp)
               :   4b186:	xor    %eax,%eax
               :   4b188:	cmp    $0x5a,%dl
               :   4b18b:	ja     4b1af <_IO_vfprintf+0x4f1f>
               :   4b18d:	movsbl -0x4c8(%rbp),%eax
               :   4b194:	lea    0x10f245(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4b19b:	sub    $0x20,%eax
               :   4b19e:	cltq   
               :   4b1a0:	movzbl (%rdx,%rax,1),%edx
               :   4b1a4:	lea    0x10efb5(%rip),%rax        # 15a160 <step4_jumps.12114>
               :   4b1ab:	movslq (%rax,%rdx,4),%rax
               :   4b1af:	add    %r12,%rax
               :   4b1b2:	movl   $0x1,-0x540(%rbp)
               :   4b1bc:	movl   $0x0,-0x538(%rbp)
               :   4b1c6:	jmpq   *%rax
               :   4b1c8:	mov    -0x4a0(%rbp),%rax
               :   4b1cf:	lea    0x1(%rax),%rdx
               :   4b1d3:	mov    %rdx,-0x4a0(%rbp)
               :   4b1da:	movzbl 0x1(%rax),%eax
               :   4b1de:	lea    -0x20(%rax),%edx
               :   4b1e1:	mov    %al,-0x4c8(%rbp)
               :   4b1e7:	xor    %eax,%eax
               :   4b1e9:	cmp    $0x5a,%dl
               :   4b1ec:	ja     4b210 <_IO_vfprintf+0x4f80>
               :   4b1ee:	movsbl -0x4c8(%rbp),%eax
               :   4b1f5:	lea    0x10f1e4(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4b1fc:	sub    $0x20,%eax
               :   4b1ff:	cltq   
               :   4b201:	movzbl (%rdx,%rax,1),%edx
               :   4b205:	lea    0x10eed4(%rip),%rax        # 15a0e0 <step3b_jumps.12113>
               :   4b20c:	movslq (%rax,%rdx,4),%rax
               :   4b210:	add    %r12,%rax
               :   4b213:	movl   $0x1,-0x510(%rbp)
               :   4b21d:	jmpq   *%rax
               :   4b21f:	mov    0x8(%r15),%rax
               :   4b223:	lea    0x8(%rax),%rdx
               :   4b227:	mov    %rdx,0x8(%r15)
               :   4b22b:	jmpq   4a24e <_IO_vfprintf+0x3fbe>
               :   4b230:	cmpl   $0x0,-0x538(%rbp)
               :   4b237:	jne    4b2eb <_IO_vfprintf+0x505b>
               :   4b23d:	cmp    $0x30,%edx
               :   4b240:	jae    4b2da <_IO_vfprintf+0x504a>
               :   4b246:	mov    %edx,%eax
               :   4b248:	add    0x10(%r15),%rax
               :   4b24c:	add    $0x8,%edx
               :   4b24f:	mov    %edx,(%r15)
               :   4b252:	mov    (%rax),%eax
               :   4b254:	movl   $0x0,-0x520(%rbp)
               :   4b25e:	xor    %r10d,%r10d
               :   4b261:	movl   $0x0,-0x518(%rbp)
               :   4b26b:	mov    %rax,-0x538(%rbp)
               :   4b272:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   4b277:	mov    -0x4a0(%rbp),%rax
               :   4b27e:	lea    0x1(%rax),%rdx
               :   4b282:	mov    %rdx,-0x4a0(%rbp)
               :   4b289:	movzbl 0x1(%rax),%eax
               :   4b28d:	lea    -0x20(%rax),%edx
               :   4b290:	mov    %al,-0x4c8(%rbp)
               :   4b296:	xor    %eax,%eax
               :   4b298:	cmp    $0x5a,%dl
               :   4b29b:	ja     4b2bf <_IO_vfprintf+0x502f>
               :   4b29d:	movsbl -0x4c8(%rbp),%eax
               :   4b2a4:	lea    0x10f135(%rip),%rdx        # 15a3e0 <jump_table.12059>
               :   4b2ab:	sub    $0x20,%eax
               :   4b2ae:	cltq   
               :   4b2b0:	movzbl (%rdx,%rax,1),%edx
               :   4b2b4:	lea    0x10eea5(%rip),%rax        # 15a160 <step4_jumps.12114>
               :   4b2bb:	movslq (%rax,%rdx,4),%rax
               :   4b2bf:	add    %r12,%rax
               :   4b2c2:	movl   $0x1,-0x510(%rbp)
               :   4b2cc:	movl   $0x0,-0x53c(%rbp)
               :   4b2d6:	jmpq   *%rax
               :   4b2d8:	jmp    4b277 <_IO_vfprintf+0x4fe7>
               :   4b2da:	mov    0x8(%r15),%rax
               :   4b2de:	lea    0x8(%rax),%rdx
               :   4b2e2:	mov    %rdx,0x8(%r15)
               :   4b2e6:	jmpq   4b252 <_IO_vfprintf+0x4fc2>
               :   4b2eb:	cmp    $0x30,%edx
               :   4b2ee:	jae    4b322 <_IO_vfprintf+0x5092>
               :   4b2f0:	mov    %edx,%eax
               :   4b2f2:	add    0x10(%r15),%rax
               :   4b2f6:	add    $0x8,%edx
               :   4b2f9:	mov    %edx,(%r15)
               :   4b2fc:	movzwl (%rax),%eax
               :   4b2ff:	movl   $0x0,-0x520(%rbp)
               :   4b309:	xor    %r10d,%r10d
               :   4b30c:	movl   $0x0,-0x518(%rbp)
               :   4b316:	mov    %rax,-0x538(%rbp)
               :   4b31d:	jmpq   46b2e <_IO_vfprintf+0x89e>
               :   4b322:	mov    0x8(%r15),%rax
               :   4b326:	lea    0x8(%rax),%rdx
               :   4b32a:	mov    %rdx,0x8(%r15)
               :   4b32e:	jmp    4b2fc <_IO_vfprintf+0x506c>
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000d8d69 <__write_nocancel>: /* __write_nocancel total:      8  0.0078 */
               :   d8d69:	mov    $0x1,%eax
               :   d8d6e:	syscall 
     8  0.0078 :   d8d70:	cmp    $0xfffffffffffff001,%rax
               :   d8d76:	jae    d8da9 <__write_nocancel+0x40>
               :   d8d78:	retq   
               :   d8d79:	sub    $0x8,%rsp
               :   d8d7d:	callq  f1630 <__libc_enable_asynccancel>
               :   d8d82:	mov    %rax,(%rsp)
               :   d8d86:	mov    $0x1,%eax
               :   d8d8b:	syscall 
               :   d8d8d:	mov    (%rsp),%rdi
               :   d8d91:	mov    %rax,%rdx
               :   d8d94:	callq  f1690 <__libc_disable_asynccancel>
               :   d8d99:	mov    %rdx,%rax
               :   d8d9c:	add    $0x8,%rsp
               :   d8da0:	cmp    $0xfffffffffffff001,%rax
               :   d8da6:	jae    d8da9 <__write_nocancel+0x40>
               :   d8da8:	retq   
               :   d8da9:	mov    0x2c80a8(%rip),%rcx        # 3a0e58 <_DYNAMIC+0x2d8>
               :   d8db0:	neg    %eax
               :   d8db2:	mov    %eax,%fs:(%rcx)
               :   d8db5:	or     $0xffffffffffffffff,%rax
               :   d8db9:	retq   
               :   d8dba:	nopw   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000006cb70 <putchar>: /* putchar total:      6  0.0058 */
     1 9.7e-04 :   6cb70:	push   %rbx
               :   6cb71:	mov    0x335b98(%rip),%rbx        # 3a2710 <stdout>
               :   6cb78:	mov    %edi,%r8d
               :   6cb7b:	mov    (%rbx),%eax
     1 9.7e-04 :   6cb7d:	mov    %rbx,%rdi
               :   6cb80:	and    $0x8000,%eax
               :   6cb85:	jne    6cbe1 <putchar+0x71>
               :   6cb87:	mov    0x88(%rbx),%rdx
               :   6cb8e:	mov    %fs:0x10,%r9
               :   6cb97:	cmp    0x8(%rdx),%r9
               :   6cb9b:	je     6cc30 <putchar+0xc0>
     3  0.0029 :   6cba1:	mov    $0x1,%esi
               :   6cba6:	cmpl   $0x0,0x339c27(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   6cbad:	je     6cbbb <putchar+0x4b>
               :   6cbaf:	lock cmpxchg %esi,(%rdx)
               :   6cbb3:	jne    6cc85 <_L_lock_35>
               :   6cbb9:	jmp    6cbc4 <putchar+0x54>
               :   6cbbb:	cmpxchg %esi,(%rdx)
               :   6cbbe:	jne    6cc85 <_L_lock_35>
               :   6cbc4:	mov    0x88(%rbx),%rax
               :   6cbcb:	mov    0x88(%rbx),%rdx
               :   6cbd2:	mov    0x335b37(%rip),%rdi        # 3a2710 <stdout>
               :   6cbd9:	mov    %r9,0x8(%rax)
               :   6cbdd:	addl   $0x1,0x4(%rdx)
               :   6cbe1:	mov    0x28(%rdi),%rdx
               :   6cbe5:	cmp    0x30(%rdi),%rdx
               :   6cbe9:	jae    6cc35 <putchar+0xc5>
               :   6cbeb:	lea    0x1(%rdx),%rax
               :   6cbef:	mov    %rax,0x28(%rdi)
               :   6cbf3:	mov    %r8b,(%rdx)
               :   6cbf6:	movzbl %r8b,%edx
               :   6cbfa:	testl  $0x8000,(%rbx)
               :   6cc00:	jne    6cc2b <putchar+0xbb>
               :   6cc02:	mov    0x88(%rbx),%rsi
               :   6cc09:	subl   $0x1,0x4(%rsi)
               :   6cc0d:	jne    6cc2b <putchar+0xbb>
               :   6cc0f:	movq   $0x0,0x8(%rsi)
               :   6cc17:	cmpl   $0x0,0x339bb6(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   6cc1e:	je     6cc27 <putchar+0xb7>
               :   6cc20:	lock decl (%rsi)
               :   6cc23:	jne    6cca0 <_L_unlock_85>
               :   6cc25:	jmp    6cc2b <putchar+0xbb>
               :   6cc27:	decl   (%rsi)
     1 9.7e-04 :   6cc29:	jne    6cca0 <_L_unlock_85>
               :   6cc2b:	mov    %edx,%eax
               :   6cc2d:	pop    %rbx
               :   6cc2e:	retq   
               :   6cc2f:	nop
               :   6cc30:	mov    %rbx,%rdi
               :   6cc33:	jmp    6cbdd <putchar+0x6d>
               :   6cc35:	movzbl %r8b,%esi
               :   6cc39:	callq  75590 <__overflow>
               :   6cc3e:	mov    %eax,%edx
               :   6cc40:	jmp    6cbfa <putchar+0x8a>
               :   6cc42:	testl  $0x8000,(%rbx)
               :   6cc48:	mov    %rax,%rsi
               :   6cc4b:	jne    6cc7d <putchar+0x10d>
               :   6cc4d:	mov    0x88(%rbx),%rdx
               :   6cc54:	mov    0x4(%rdx),%eax
               :   6cc57:	lea    -0x1(%rax),%ecx
               :   6cc5a:	test   %ecx,%ecx
               :   6cc5c:	mov    %ecx,0x4(%rdx)
               :   6cc5f:	jne    6cc7d <putchar+0x10d>
               :   6cc61:	movq   $0x0,0x8(%rdx)
               :   6cc69:	cmpl   $0x0,0x339b64(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   6cc70:	je     6cc79 <putchar+0x109>
               :   6cc72:	lock decl (%rdx)
               :   6cc75:	jne    6ccbb <_L_unlock_158>
               :   6cc77:	jmp    6cc7d <putchar+0x10d>
               :   6cc79:	decl   (%rdx)
               :   6cc7b:	jne    6ccbb <_L_unlock_158>
               :   6cc7d:	mov    %rsi,%rdi
               :   6cc80:	callq  21d10 <_Unwind_Resume>
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000073f40 <_IO_file_xsputn@@GLIBC_2.2.5>: /* _IO_file_xsputn@@GLIBC_2.2.5 total:      5  0.0049 */
               :   73f40:	push   %r14
               :   73f42:	xor    %eax,%eax
               :   73f44:	test   %rdx,%rdx
               :   73f47:	push   %r13
               :   73f49:	push   %r12
               :   73f4b:	push   %rbp
               :   73f4c:	push   %rbx
               :   73f4d:	mov    %rdx,%rbx
               :   73f50:	je     73fb6 <_IO_file_xsputn@@GLIBC_2.2.5+0x76>
               :   73f52:	mov    (%rdi),%eax
               :   73f54:	mov    %rdi,%rbp
               :   73f57:	mov    %rsi,%r12
               :   73f5a:	and    $0xa00,%eax
               :   73f5f:	cmp    $0xa00,%eax
               :   73f64:	je     74030 <_IO_file_xsputn@@GLIBC_2.2.5+0xf0>
               :   73f6a:	mov    0x30(%rdi),%rdx
               :   73f6e:	mov    0x28(%rdi),%rdi
               :   73f72:	cmp    %rdi,%rdx
               :   73f75:	jbe    73fc0 <_IO_file_xsputn@@GLIBC_2.2.5+0x80>
               :   73f77:	sub    %rdi,%rdx
               :   73f7a:	xor    %r14d,%r14d
               :   73f7d:	test   %rdx,%rdx
               :   73f80:	mov    %rbx,%r13
               :   73f83:	je     73fa7 <_IO_file_xsputn@@GLIBC_2.2.5+0x67>
               :   73f85:	cmp    %rbx,%rdx
               :   73f88:	mov    %r12,%rsi
               :   73f8b:	cmova  %rbx,%rdx
               :   73f8f:	mov    %rdx,%r13
               :   73f92:	callq  84ee0 <__GI___mempcpy>
               :   73f97:	mov    %rax,0x28(%rbp)
               :   73f9b:	mov    %rbx,%rax
               :   73f9e:	add    %r13,%r12
               :   73fa1:	sub    %r13,%rax
               :   73fa4:	mov    %rax,%r13
               :   73fa7:	lea    (%r14,%r13,1),%rax
               :   73fab:	test   %rax,%rax
               :   73fae:	jne    73fcf <_IO_file_xsputn@@GLIBC_2.2.5+0x8f>
     1 9.7e-04 :   73fb0:	mov    %rbx,%rax
               :   73fb3:	sub    %r13,%rax
               :   73fb6:	pop    %rbx
               :   73fb7:	pop    %rbp
     1 9.7e-04 :   73fb8:	pop    %r12
               :   73fba:	pop    %r13
               :   73fbc:	pop    %r14
               :   73fbe:	retq   
               :   73fbf:	nop
               :   73fc0:	xor    %r14d,%r14d
               :   73fc3:	mov    %rbx,%r13
               :   73fc6:	lea    (%r14,%r13,1),%rax
               :   73fca:	test   %rax,%rax
               :   73fcd:	je     73fb0 <_IO_file_xsputn@@GLIBC_2.2.5+0x70>
               :   73fcf:	mov    0xd8(%rbp),%rax
               :   73fd6:	mov    $0xffffffff,%esi
               :   73fdb:	mov    %rbp,%rdi
               :   73fde:	callq  *0x18(%rax)
               :   73fe1:	cmp    $0xffffffff,%eax
               :   73fe4:	je     74080 <_IO_file_xsputn@@GLIBC_2.2.5+0x140>
               :   73fea:	mov    0x40(%rbp),%rcx
               :   73fee:	sub    0x38(%rbp),%rcx
               :   73ff2:	xor    %edx,%edx
               :   73ff4:	cmp    $0x7f,%rcx
               :   73ff8:	jbe    74002 <_IO_file_xsputn@@GLIBC_2.2.5+0xc2>
               :   73ffa:	mov    %r13,%rax
               :   73ffd:	xor    %edx,%edx
               :   73fff:	div    %rcx
     1 9.7e-04 :   74002:	mov    %r13,%r14
     1 9.7e-04 :   74005:	sub    %rdx,%r14
               :   74008:	jne    740b8 <_IO_file_xsputn@@GLIBC_2.2.5+0x178>
     1 9.7e-04 :   7400e:	test   %r13,%r13
               :   74011:	je     73fb0 <_IO_file_xsputn@@GLIBC_2.2.5+0x70>
               :   74013:	lea    (%r12,%r14,1),%rsi
               :   74017:	mov    %r13,%rdx
               :   7401a:	mov    %rbp,%rdi
               :   7401d:	callq  75860 <_IO_default_xsputn>
               :   74022:	sub    %rax,%r13
               :   74025:	jmp    73fb0 <_IO_file_xsputn@@GLIBC_2.2.5+0x70>
               :   74027:	nopw   0x0(%rax,%rax,1)
               :   74030:	mov    0x28(%rdi),%rdi
               :   74034:	mov    0x40(%rbp),%rdx
               :   74038:	sub    %rdi,%rdx
               :   7403b:	cmp    %rdx,%rbx
               :   7403e:	ja     74070 <_IO_file_xsputn@@GLIBC_2.2.5+0x130>
               :   74040:	lea    (%rsi,%rbx,1),%rcx
               :   74044:	cmp    %rcx,%rsi
               :   74047:	jae    74066 <_IO_file_xsputn@@GLIBC_2.2.5+0x126>
               :   74049:	cmpb   $0xa,-0x1(%rcx)
               :   7404d:	lea    -0x1(%rcx),%rax
               :   74051:	jne    74061 <_IO_file_xsputn@@GLIBC_2.2.5+0x121>
               :   74053:	jmp    740a0 <_IO_file_xsputn@@GLIBC_2.2.5+0x160>
               :   74055:	nopl   (%rax)
               :   74058:	sub    $0x1,%rax
               :   7405c:	cmpb   $0xa,(%rax)
               :   7405f:	je     740a0 <_IO_file_xsputn@@GLIBC_2.2.5+0x160>
               :   74061:	cmp    %r12,%rax
               :   74064:	jne    74058 <_IO_file_xsputn@@GLIBC_2.2.5+0x118>
               :   74066:	xor    %r14d,%r14d
               :   74069:	jmpq   73f85 <_IO_file_xsputn@@GLIBC_2.2.5+0x45>
               :   7406e:	xchg   %ax,%ax
               :   74070:	xor    %r14d,%r14d
               :   74073:	jmpq   73f7d <_IO_file_xsputn@@GLIBC_2.2.5+0x3d>
               :   74078:	nopl   0x0(%rax,%rax,1)
               :   74080:	sub    %r13,%rbx
               :   74083:	mov    $0xffffffffffffffff,%rax
               :   7408a:	test   %r13,%r13
               :   7408d:	cmovne %rbx,%rax
               :   74091:	jmpq   73fb6 <_IO_file_xsputn@@GLIBC_2.2.5+0x76>
               :   74096:	nopw   %cs:0x0(%rax,%rax,1)
               :   740a0:	sub    %r12,%rax
               :   740a3:	mov    $0x1,%r14d
               :   740a9:	lea    0x1(%rax),%rdx
               :   740ad:	jmpq   73f7d <_IO_file_xsputn@@GLIBC_2.2.5+0x3d>
               :   740b2:	nopw   0x0(%rax,%rax,1)
               :   740b8:	mov    %r14,%rdx
               :   740bb:	mov    %r12,%rsi
               :   740be:	mov    %rbp,%rdi
               :   740c1:	callq  73140 <new_do_write>
               :   740c6:	sub    %rax,%r13
               :   740c9:	cmp    %rax,%r14
               :   740cc:	jbe    7400e <_IO_file_xsputn@@GLIBC_2.2.5+0xce>
               :   740d2:	jmpq   73fb0 <_IO_file_xsputn@@GLIBC_2.2.5+0x70>
               :   740d7:	nopw   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000073a70 <_IO_file_write@@GLIBC_2.2.5>: /* _IO_file_write@@GLIBC_2.2.5 total:      4  0.0039 */
               :   73a70:	push   %r13
               :   73a72:	mov    %rdx,%r13
               :   73a75:	push   %r12
               :   73a77:	mov    %rdi,%r12
               :   73a7a:	push   %rbp
               :   73a7b:	push   %rbx
               :   73a7c:	sub    $0x8,%rsp
               :   73a80:	test   %rdx,%rdx
               :   73a83:	jle    73af8 <_IO_file_write@@GLIBC_2.2.5+0x88>
               :   73a85:	mov    %rsi,%rbp
               :   73a88:	mov    %rdx,%rbx
               :   73a8b:	jmp    73a9b <_IO_file_write@@GLIBC_2.2.5+0x2b>
               :   73a8d:	nopl   (%rax)
               :   73a90:	sub    %rax,%rbx
               :   73a93:	add    %rax,%rbp
               :   73a96:	test   %rbx,%rbx
               :   73a99:	jle    73af0 <_IO_file_write@@GLIBC_2.2.5+0x80>
               :   73a9b:	testb  $0x2,0x74(%r12)
               :   73aa1:	mov    0x70(%r12),%edi
               :   73aa6:	mov    %rbx,%rdx
               :   73aa9:	mov    %rbp,%rsi
               :   73aac:	jne    73afc <_IO_file_write@@GLIBC_2.2.5+0x8c>
     2  0.0019 :   73aae:	callq  d8d60 <__write>
               :   73ab3:	test   %rax,%rax
               :   73ab6:	jns    73a90 <_IO_file_write@@GLIBC_2.2.5+0x20>
               :   73ab8:	orl    $0x20,(%r12)
               :   73abd:	mov    %r13,%rax
               :   73ac0:	sub    %rbx,%rax
               :   73ac3:	mov    0x90(%r12),%rdx
               :   73acb:	test   %rdx,%rdx
               :   73ace:	js     73adb <_IO_file_write@@GLIBC_2.2.5+0x6b>
               :   73ad0:	add    %rax,%rdx
               :   73ad3:	mov    %rdx,0x90(%r12)
     1 9.7e-04 :   73adb:	add    $0x8,%rsp
               :   73adf:	pop    %rbx
     1 9.7e-04 :   73ae0:	pop    %rbp
               :   73ae1:	pop    %r12
               :   73ae3:	pop    %r13
               :   73ae5:	retq   
               :   73ae6:	nopw   %cs:0x0(%rax,%rax,1)
               :   73af0:	mov    %r13,%rax
               :   73af3:	sub    %rbx,%rax
               :   73af6:	jmp    73ac3 <_IO_file_write@@GLIBC_2.2.5+0x53>
               :   73af8:	xor    %eax,%eax
               :   73afa:	jmp    73ac3 <_IO_file_write@@GLIBC_2.2.5+0x53>
               :   73afc:	callq  d8d69 <__write_nocancel>
               :   73b01:	cltq   
               :   73b03:	jmp    73ab3 <_IO_file_write@@GLIBC_2.2.5+0x43>
               :   73b05:	data32 nopw %cs:0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000004b330 <buffered_vfprintf>: /* buffered_vfprintf total:      4  0.0039 */
               :   4b330:	push   %r13
               :   4b332:	push   %r12
               :   4b334:	push   %rbp
               :   4b335:	push   %rbx
               :   4b336:	mov    %rdi,%rbx
               :   4b339:	sub    $0x2128,%rsp
               :   4b340:	mov    0xc0(%rdi),%ecx
               :   4b346:	test   %ecx,%ecx
               :   4b348:	jne    4b490 <buffered_vfprintf+0x160>
               :   4b34e:	movl   $0xffffffff,0xc0(%rdi)
               :   4b358:	lea    0x120(%rsp),%rax
               :   4b360:	lea    0x20(%rsp),%rdi
               :   4b365:	mov    %rbx,0x100(%rsp)
               :   4b36d:	movl   $0xffffffff,0xe0(%rsp)
               :   4b378:	movl   $0xfbad8004,0x20(%rsp)
               :   4b380:	mov    %rax,0x48(%rsp)
               :   4b385:	mov    %rax,0x40(%rsp)
               :   4b38a:	lea    0x2120(%rsp),%rax
               :   4b392:	movq   $0x0,0xa8(%rsp)
               :   4b39e:	mov    %rax,0x50(%rsp)
               :   4b3a3:	mov    0x74(%rbx),%eax
               :   4b3a6:	mov    %eax,0x94(%rsp)
               :   4b3ad:	lea    0x35480c(%rip),%rax        # 39fbc0 <_IO_helper_jumps>
               :   4b3b4:	mov    %rax,0xf8(%rsp)
               :   4b3bc:	callq  46290 <_IO_vfprintf>
               :   4b3c1:	mov    0x35b408(%rip),%r13d        # 3a67d0 <__libc_pthread_functions_init>
               :   4b3c8:	mov    %eax,%r12d
               :   4b3cb:	test   %r13d,%r13d
               :   4b3ce:	jne    4b4f8 <buffered_vfprintf+0x1c8>
               :   4b3d4:	mov    0x355b75(%rip),%rax        # 3a0f50 <_DYNAMIC+0x3d0>
               :   4b3db:	mov    %rbx,0x8(%rsp)
               :   4b3e0:	mov    %rax,(%rsp)
               :   4b3e4:	mov    (%rbx),%eax
               :   4b3e6:	and    $0x8000,%eax
               :   4b3eb:	jne    4b43c <buffered_vfprintf+0x10c>
     1 9.7e-04 :   4b3ed:	mov    0x88(%rbx),%rdx
               :   4b3f4:	mov    %fs:0x10,%r8
               :   4b3fd:	cmp    0x8(%rdx),%r8
               :   4b401:	je     4b438 <buffered_vfprintf+0x108>
               :   4b403:	mov    $0x1,%esi
               :   4b408:	cmpl   $0x0,0x35b3c5(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   4b40f:	je     4b41d <buffered_vfprintf+0xed>
               :   4b411:	lock cmpxchg %esi,(%rdx)
               :   4b415:	jne    4b556 <_L_lock_12412>
               :   4b41b:	jmp    4b426 <buffered_vfprintf+0xf6>
               :   4b41d:	cmpxchg %esi,(%rdx)
               :   4b420:	jne    4b556 <_L_lock_12412>
               :   4b426:	mov    0x88(%rbx),%rax
               :   4b42d:	mov    0x88(%rbx),%rdx
               :   4b434:	mov    %r8,0x8(%rax)
               :   4b438:	addl   $0x1,0x4(%rdx)
               :   4b43c:	mov    0x40(%rsp),%rsi
               :   4b441:	mov    0x48(%rsp),%rbp
               :   4b446:	sub    %rsi,%rbp
               :   4b449:	test   %ebp,%ebp
               :   4b44b:	jle    4b468 <buffered_vfprintf+0x138>
               :   4b44d:	mov    0xd8(%rbx),%rax
               :   4b454:	movslq %ebp,%rdx
               :   4b457:	mov    %rbx,%rdi
               :   4b45a:	callq  *0x38(%rax)
               :   4b45d:	cmp    %eax,%ebp
               :   4b45f:	mov    $0xffffffff,%eax
               :   4b464:	cmovne %eax,%r12d
               :   4b468:	testl  $0x8000,(%rbx)
               :   4b46e:	je     4b4a0 <buffered_vfprintf+0x170>
               :   4b470:	test   %r13d,%r13d
               :   4b473:	jne    4b4d6 <buffered_vfprintf+0x1a6>
               :   4b475:	mov    %r12d,%eax
               :   4b478:	add    $0x2128,%rsp
               :   4b47f:	pop    %rbx
               :   4b480:	pop    %rbp
               :   4b481:	pop    %r12
               :   4b483:	pop    %r13
               :   4b485:	retq   
               :   4b486:	nopw   %cs:0x0(%rax,%rax,1)
               :   4b490:	mov    $0xffffffff,%eax
               :   4b495:	cmp    %eax,%ecx
               :   4b497:	je     4b358 <buffered_vfprintf+0x28>
               :   4b49d:	jmp    4b478 <buffered_vfprintf+0x148>
               :   4b49f:	nop
               :   4b4a0:	mov    0x88(%rbx),%rdx
               :   4b4a7:	subl   $0x1,0x4(%rdx)
     1 9.7e-04 :   4b4ab:	jne    4b470 <buffered_vfprintf+0x140>
               :   4b4ad:	movq   $0x0,0x8(%rdx)
               :   4b4b5:	cmpl   $0x0,0x35b318(%rip)        # 3a67d4 <__libc_multiple_threads>
               :   4b4bc:	je     4b4c9 <buffered_vfprintf+0x199>
               :   4b4be:	lock decl (%rdx)
               :   4b4c1:	jne    4b571 <_L_unlock_12522>
               :   4b4c7:	jmp    4b4d1 <buffered_vfprintf+0x1a1>
               :   4b4c9:	decl   (%rdx)
     2  0.0019 :   4b4cb:	jne    4b571 <_L_unlock_12522>
               :   4b4d1:	test   %r13d,%r13d
               :   4b4d4:	je     4b475 <buffered_vfprintf+0x145>
               :   4b4d6:	mov    0x35b2bb(%rip),%rax        # 3a6798 <__libc_pthread_functions+0x178>
               :   4b4dd:	mov    %rsp,%rdi
               :   4b4e0:	xor    %esi,%esi
               :   4b4e2:	ror    $0x11,%rax
               :   4b4e6:	xor    %fs:0x30,%rax
               :   4b4ef:	callq  *%rax
               :   4b4f1:	jmp    4b475 <buffered_vfprintf+0x145>
               :   4b4f3:	nopl   0x0(%rax,%rax,1)
               :   4b4f8:	mov    0x35b291(%rip),%rax        # 3a6790 <__libc_pthread_functions+0x170>
               :   4b4ff:	mov    %rsp,%rdi
               :   4b502:	mov    %rbx,%rdx
               :   4b505:	ror    $0x11,%rax
               :   4b509:	xor    %fs:0x30,%rax
               :   4b512:	mov    0x355a37(%rip),%rsi        # 3a0f50 <_DYNAMIC+0x3d0>
               :   4b519:	callq  *%rax
               :   4b51b:	jmpq   4b3e4 <buffered_vfprintf+0xb4>
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000460b0 <_itoa_word>: /* _itoa_word total:      3  0.0029 */
     1 9.7e-04 :   460b0:	lea    0x113e29(%rip),%r8        # 159ee0 <__GI__itoa_upper_digits>
               :   460b7:	lea    0x113de2(%rip),%rax        # 159ea0 <_itoa_lower_digits>
               :   460be:	test   %ecx,%ecx
               :   460c0:	cmove  %rax,%r8
               :   460c4:	cmp    $0xa,%edx
               :   460c7:	je     46140 <_itoa_word+0x90>
               :   460c9:	cmp    $0x10,%edx
               :   460cc:	je     46100 <_itoa_word+0x50>
               :   460ce:	cmp    $0x8,%edx
               :   460d1:	mov    %edx,%ecx
               :   460d3:	je     46120 <_itoa_word+0x70>
               :   460d5:	nopl   (%rax)
               :   460d8:	mov    %rdi,%rax
               :   460db:	xor    %edx,%edx
               :   460dd:	sub    $0x1,%rsi
               :   460e1:	div    %rcx
               :   460e4:	movzbl (%r8,%rdx,1),%edx
               :   460e9:	test   %rax,%rax
               :   460ec:	mov    %rax,%rdi
               :   460ef:	mov    %dl,(%rsi)
               :   460f1:	jne    460d8 <_itoa_word+0x28>
               :   460f3:	mov    %rsi,%rax
               :   460f6:	retq   
               :   460f7:	nopw   0x0(%rax,%rax,1)
               :   46100:	mov    %rdi,%rax
               :   46103:	shr    $0x4,%rdi
               :   46107:	sub    $0x1,%rsi
               :   4610b:	and    $0xf,%eax
               :   4610e:	test   %rdi,%rdi
               :   46111:	movzbl (%r8,%rax,1),%eax
               :   46116:	mov    %al,(%rsi)
               :   46118:	jne    46100 <_itoa_word+0x50>
               :   4611a:	jmp    460f3 <_itoa_word+0x43>
               :   4611c:	nopl   0x0(%rax)
               :   46120:	mov    %rdi,%rax
               :   46123:	shr    $0x3,%rdi
               :   46127:	sub    $0x1,%rsi
               :   4612b:	and    $0x7,%eax
               :   4612e:	test   %rdi,%rdi
               :   46131:	movzbl (%r8,%rax,1),%eax
               :   46136:	mov    %al,(%rsi)
               :   46138:	jne    46120 <_itoa_word+0x70>
               :   4613a:	jmp    460f3 <_itoa_word+0x43>
               :   4613c:	nopl   0x0(%rax)
               :   46140:	movabs $0xcccccccccccccccd,%rcx
               :   4614a:	nopw   0x0(%rax,%rax,1)
               :   46150:	mov    %rdi,%rax
               :   46153:	sub    $0x1,%rsi
               :   46157:	mul    %rcx
     1 9.7e-04 :   4615a:	shr    $0x3,%rdx
               :   4615e:	lea    (%rdx,%rdx,4),%rax
               :   46162:	add    %rax,%rax
               :   46165:	sub    %rax,%rdi
               :   46168:	test   %rdx,%rdx
               :   4616b:	movzbl (%r8,%rdi,1),%eax
     1 9.7e-04 :   46170:	mov    %rdx,%rdi
               :   46173:	mov    %al,(%rsi)
               :   46175:	jne    46150 <_itoa_word+0xa0>
               :   46177:	mov    %rsi,%rax
               :   4617a:	retq   
               :   4617b:	nopl   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000073140 <new_do_write>: /* new_do_write total:      3  0.0029 */
     1 9.7e-04 :   73140:	push   %r12
               :   73142:	mov    %rsi,%r12
               :   73145:	push   %rbp
     1 9.7e-04 :   73146:	mov    %rdx,%rbp
               :   73149:	push   %rbx
               :   7314a:	testl  $0x1000,(%rdi)
               :   73150:	mov    %rdi,%rbx
               :   73153:	je     731b8 <new_do_write+0x78>
               :   73155:	movq   $0xffffffffffffffff,0x90(%rdi)
               :   73160:	mov    0xd8(%rbx),%rax
               :   73167:	mov    %rbp,%rdx
               :   7316a:	mov    %rbx,%rdi
               :   7316d:	mov    %r12,%rsi
               :   73170:	callq  *0x78(%rax)
     1 9.7e-04 :   73173:	movzwl 0x80(%rbx),%edi
               :   7317a:	mov    %rax,%rbp
               :   7317d:	test   %di,%di
               :   73180:	jne    731f0 <new_do_write+0xb0>
               :   73182:	mov    0xc0(%rbx),%eax
               :   73188:	mov    0x38(%rbx),%rdx
               :   7318c:	test   %eax,%eax
               :   7318e:	mov    %rdx,0x18(%rbx)
               :   73192:	mov    %rdx,0x8(%rbx)
               :   73196:	mov    %rdx,0x10(%rbx)
               :   7319a:	mov    %rdx,0x28(%rbx)
               :   7319e:	mov    %rdx,0x20(%rbx)
               :   731a2:	jle    73218 <new_do_write+0xd8>
               :   731a4:	mov    0x40(%rbx),%rdx
               :   731a8:	mov    %rdx,0x30(%rbx)
               :   731ac:	mov    %rbp,%rax
               :   731af:	pop    %rbx
               :   731b0:	pop    %rbp
               :   731b1:	pop    %r12
               :   731b3:	retq   
               :   731b4:	nopl   0x0(%rax)
               :   731b8:	mov    0x10(%rdi),%rax
               :   731bc:	mov    0x20(%rdi),%rsi
               :   731c0:	cmp    %rsi,%rax
               :   731c3:	je     73160 <new_do_write+0x20>
               :   731c5:	mov    0xd8(%rdi),%rcx
               :   731cc:	sub    %rax,%rsi
               :   731cf:	mov    $0x1,%edx
               :   731d4:	callq  *0x80(%rcx)
               :   731da:	cmp    $0xffffffffffffffff,%rax
               :   731de:	je     73228 <new_do_write+0xe8>
               :   731e0:	mov    %rax,0x90(%rbx)
               :   731e7:	jmpq   73160 <new_do_write+0x20>
               :   731ec:	nopl   0x0(%rax)
               :   731f0:	test   %rax,%rax
               :   731f3:	je     73182 <new_do_write+0x42>
               :   731f5:	sub    $0x1,%edi
               :   731f8:	mov    %eax,%edx
               :   731fa:	mov    %r12,%rsi
               :   731fd:	callq  75db0 <_IO_adjust_column>
               :   73202:	add    $0x1,%eax
               :   73205:	mov    %ax,0x80(%rbx)
               :   7320c:	jmpq   73182 <new_do_write+0x42>
               :   73211:	nopl   0x0(%rax)
               :   73218:	testl  $0x202,(%rbx)
               :   7321e:	jne    731a8 <new_do_write+0x68>
               :   73220:	jmp    731a4 <new_do_write+0x64>
               :   73222:	nopw   0x0(%rax,%rax,1)
               :   73228:	xor    %eax,%eax
               :   7322a:	jmp    731af <new_do_write+0x6f>
               :   7322c:	nopl   0x0(%rax)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000075860 <_IO_default_xsputn>: /* _IO_default_xsputn total:      2  0.0019 */
     1 9.7e-04 :   75860:	push   %r14
               :   75862:	xor    %eax,%eax
               :   75864:	test   %rdx,%rdx
               :   75867:	push   %r13
               :   75869:	mov    %rdx,%r13
               :   7586c:	push   %r12
               :   7586e:	push   %rbp
               :   7586f:	push   %rbx
               :   75870:	je     7591e <_IO_default_xsputn+0xbe>
               :   75876:	mov    %rdi,%r12
               :   75879:	mov    %rsi,%rbx
               :   7587c:	mov    %rdx,%rbp
               :   7587f:	nop
               :   75880:	mov    0x28(%r12),%rdi
               :   75885:	mov    0x30(%r12),%r14
               :   7588a:	cmp    %r14,%rdi
               :   7588d:	jae    758cf <_IO_default_xsputn+0x6f>
               :   7588f:	sub    %rdi,%r14
               :   75892:	cmp    %r14,%rbp
               :   75895:	cmovbe %rbp,%r14
               :   75899:	cmp    $0x14,%r14
               :   7589d:	ja     75900 <_IO_default_xsputn+0xa0>
               :   7589f:	test   %r14,%r14
               :   758a2:	je     758cc <_IO_default_xsputn+0x6c>
               :   758a4:	xor    %eax,%eax
               :   758a6:	nopw   %cs:0x0(%rax,%rax,1)
               :   758b0:	movzbl (%rbx,%rax,1),%edx
               :   758b4:	mov    %dl,(%rdi,%rax,1)
               :   758b7:	add    $0x1,%rax
               :   758bb:	cmp    %r14,%rax
               :   758be:	jne    758b0 <_IO_default_xsputn+0x50>
               :   758c0:	lea    (%rdi,%r14,1),%rcx
     1 9.7e-04 :   758c4:	add    %r14,%rbx
               :   758c7:	mov    %rcx,0x28(%r12)
               :   758cc:	sub    %r14,%rbp
               :   758cf:	test   %rbp,%rbp
               :   758d2:	je     75918 <_IO_default_xsputn+0xb8>
               :   758d4:	mov    0xd8(%r12),%rax
               :   758dc:	movzbl (%rbx),%esi
               :   758df:	mov    %r12,%rdi
               :   758e2:	lea    0x1(%rbx),%r14
               :   758e6:	callq  *0x18(%rax)
               :   758e9:	cmp    $0xffffffff,%eax
               :   758ec:	je     75918 <_IO_default_xsputn+0xb8>
               :   758ee:	sub    $0x1,%rbp
               :   758f2:	mov    %r14,%rbx
               :   758f5:	jmp    75880 <_IO_default_xsputn+0x20>
               :   758f7:	nopw   0x0(%rax,%rax,1)
               :   75900:	mov    %rbx,%rsi
               :   75903:	mov    %r14,%rdx
               :   75906:	add    %r14,%rbx
               :   75909:	callq  84ee0 <__GI___mempcpy>
               :   7590e:	mov    %rax,0x28(%r12)
               :   75913:	jmp    758cc <_IO_default_xsputn+0x6c>
               :   75915:	nopl   (%rax)
               :   75918:	mov    %r13,%rax
               :   7591b:	sub    %rbp,%rax
               :   7591e:	pop    %rbx
               :   7591f:	pop    %rbp
               :   75920:	pop    %r12
               :   75922:	pop    %r13
               :   75924:	pop    %r14
               :   75926:	retq   
               :   75927:	nopw   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000074b50 <_IO_file_overflow@@GLIBC_2.2.5>: /* _IO_file_overflow@@GLIBC_2.2.5 total:      2  0.0019 */
               :   74b50:	push   %r12
               :   74b52:	push   %rbp
               :   74b53:	push   %rbx
               :   74b54:	mov    (%rdi),%ecx
               :   74b56:	mov    %rdi,%rbx
               :   74b59:	test   $0x8,%cl
               :   74b5c:	jne    74cc0 <_IO_file_overflow@@GLIBC_2.2.5+0x170>
               :   74b62:	test   $0x8,%ch
               :   74b65:	mov    %esi,%ebp
     1 9.7e-04 :   74b67:	je     74bb8 <_IO_file_overflow@@GLIBC_2.2.5+0x68>
               :   74b69:	cmpq   $0x0,0x20(%rdi)
               :   74b6e:	je     74ce0 <_IO_file_overflow@@GLIBC_2.2.5+0x190>
               :   74b74:	mov    0x28(%rdi),%rdx
               :   74b78:	cmp    $0xffffffff,%ebp
               :   74b7b:	je     74c90 <_IO_file_overflow@@GLIBC_2.2.5+0x140>
               :   74b81:	cmp    %rdx,0x40(%rbx)
               :   74b85:	je     74c50 <_IO_file_overflow@@GLIBC_2.2.5+0x100>
               :   74b8b:	lea    0x1(%rdx),%rax
               :   74b8f:	mov    %rax,0x28(%rbx)
               :   74b93:	mov    %bpl,(%rdx)
               :   74b96:	mov    (%rbx),%eax
               :   74b98:	test   $0x2,%al
               :   74b9a:	jne    74c20 <_IO_file_overflow@@GLIBC_2.2.5+0xd0>
               :   74ba0:	test   $0x2,%ah
               :   74ba3:	je     74baa <_IO_file_overflow@@GLIBC_2.2.5+0x5a>
               :   74ba5:	cmp    $0xa,%ebp
               :   74ba8:	je     74c20 <_IO_file_overflow@@GLIBC_2.2.5+0xd0>
     1 9.7e-04 :   74baa:	movzbl %bpl,%eax
               :   74bae:	pop    %rbx
               :   74baf:	pop    %rbp
               :   74bb0:	pop    %r12
               :   74bb2:	retq   
               :   74bb3:	nopl   0x0(%rax,%rax,1)
               :   74bb8:	cmpq   $0x0,0x20(%rdi)
               :   74bbd:	je     74ce0 <_IO_file_overflow@@GLIBC_2.2.5+0x190>
               :   74bc3:	mov    0x8(%rdi),%rdx
               :   74bc7:	test   $0x1,%ch
               :   74bca:	jne    74d1a <_IO_file_overflow@@GLIBC_2.2.5+0x1ca>
               :   74bd0:	mov    0x40(%rbx),%rsi
               :   74bd4:	cmp    %rdx,%rsi
               :   74bd7:	je     74ca8 <_IO_file_overflow@@GLIBC_2.2.5+0x158>
               :   74bdd:	mov    0x10(%rbx),%rax
               :   74be1:	mov    %rsi,0x30(%rbx)
               :   74be5:	mov    0xc0(%rbx),%esi
               :   74beb:	mov    %rax,0x8(%rbx)
               :   74bef:	mov    %rax,0x18(%rbx)
               :   74bf3:	mov    %ecx,%eax
               :   74bf5:	or     $0x8,%ah
               :   74bf8:	mov    %rdx,0x28(%rbx)
               :   74bfc:	mov    %rdx,0x20(%rbx)
               :   74c00:	test   %esi,%esi
               :   74c02:	mov    %eax,(%rbx)
               :   74c04:	jg     74b78 <_IO_file_overflow@@GLIBC_2.2.5+0x28>
               :   74c0a:	and    $0x202,%ecx
               :   74c10:	je     74b78 <_IO_file_overflow@@GLIBC_2.2.5+0x28>
               :   74c16:	mov    %rdx,0x30(%rbx)
               :   74c1a:	jmpq   74b78 <_IO_file_overflow@@GLIBC_2.2.5+0x28>
               :   74c1f:	nop
               :   74c20:	mov    0x20(%rbx),%rsi
               :   74c24:	mov    0x28(%rbx),%rdx
               :   74c28:	mov    %rbx,%rdi
               :   74c2b:	sub    %rsi,%rdx
               :   74c2e:	callq  748d0 <_IO_do_write@@GLIBC_2.2.5>
               :   74c33:	cmp    $0xffffffff,%eax
               :   74c36:	jne    74baa <_IO_file_overflow@@GLIBC_2.2.5+0x5a>
               :   74c3c:	mov    $0xffffffff,%eax
               :   74c41:	jmpq   74bae <_IO_file_overflow@@GLIBC_2.2.5+0x5e>
               :   74c46:	nopw   %cs:0x0(%rax,%rax,1)
               :   74c50:	mov    0xc0(%rbx),%eax
               :   74c56:	test   %eax,%eax
               :   74c58:	jle    74d00 <_IO_file_overflow@@GLIBC_2.2.5+0x1b0>
               :   74c5e:	mov    0xa0(%rbx),%rax
               :   74c65:	mov    %rbx,%rdi
               :   74c68:	mov    0x18(%rax),%rsi
               :   74c6c:	mov    0x20(%rax),%rdx
               :   74c70:	sub    %rsi,%rdx
               :   74c73:	sar    $0x2,%rdx
               :   74c77:	callq  6f7a0 <_IO_wdo_write>
               :   74c7c:	cmp    $0xffffffff,%eax
               :   74c7f:	sete   %al
               :   74c82:	test   %al,%al
               :   74c84:	jne    74c3c <_IO_file_overflow@@GLIBC_2.2.5+0xec>
               :   74c86:	mov    0x28(%rbx),%rdx
               :   74c8a:	jmpq   74b8b <_IO_file_overflow@@GLIBC_2.2.5+0x3b>
               :   74c8f:	nop
               :   74c90:	mov    0x20(%rbx),%rsi
               :   74c94:	mov    %rbx,%rdi
               :   74c97:	pop    %rbx
               :   74c98:	pop    %rbp
               :   74c99:	pop    %r12
               :   74c9b:	sub    %rsi,%rdx
               :   74c9e:	jmpq   748d0 <_IO_do_write@@GLIBC_2.2.5>
               :   74ca3:	nopl   0x0(%rax,%rax,1)
               :   74ca8:	mov    0x38(%rbx),%rax
               :   74cac:	mov    %rax,0x10(%rbx)
               :   74cb0:	mov    %rax,%rdx
               :   74cb3:	jmpq   74be1 <_IO_file_overflow@@GLIBC_2.2.5+0x91>
               :   74cb8:	nopl   0x0(%rax,%rax,1)
               :   74cc0:	mov    0x32c191(%rip),%rax        # 3a0e58 <_DYNAMIC+0x2d8>
               :   74cc7:	or     $0x20,%ecx
               :   74cca:	mov    %ecx,(%rdi)
               :   74ccc:	movl   $0x9,%fs:(%rax)
               :   74cd3:	mov    $0xffffffff,%eax
               :   74cd8:	jmpq   74bae <_IO_file_overflow@@GLIBC_2.2.5+0x5e>
               :   74cdd:	nopl   (%rax)
               :   74ce0:	mov    %rbx,%rdi
               :   74ce3:	callq  757d0 <_IO_doallocbuf>
               :   74ce8:	mov    0x38(%rbx),%rdx
               :   74cec:	mov    (%rbx),%ecx
               :   74cee:	mov    %rdx,0x18(%rbx)
               :   74cf2:	mov    %rdx,0x8(%rbx)
               :   74cf6:	mov    %rdx,0x10(%rbx)
               :   74cfa:	jmpq   74bc7 <_IO_file_overflow@@GLIBC_2.2.5+0x77>
               :   74cff:	nop
               :   74d00:	mov    0x20(%rbx),%rsi
               :   74d04:	mov    %rbx,%rdi
               :   74d07:	sub    %rsi,%rdx
               :   74d0a:	callq  748d0 <_IO_do_write@@GLIBC_2.2.5>
               :   74d0f:	cmp    $0xffffffff,%eax
               :   74d12:	sete   %al
               :   74d15:	jmpq   74c82 <_IO_file_overflow@@GLIBC_2.2.5+0x132>
               :   74d1a:	mov    0x10(%rbx),%r12
               :   74d1e:	mov    %rbx,%rdi
               :   74d21:	sub    %rdx,%r12
               :   74d24:	callq  75550 <_IO_free_backup_area>
               :   74d29:	mov    0x18(%rbx),%rdx
               :   74d2d:	mov    (%rbx),%ecx
               :   74d2f:	mov    %rdx,%rax
               :   74d32:	sub    0x38(%rbx),%rax
               :   74d36:	cmp    %rax,%r12
               :   74d39:	cmovbe %r12,%rax
               :   74d3d:	sub    %rax,%rdx
               :   74d40:	mov    %rdx,0x18(%rbx)
               :   74d44:	mov    %rdx,0x8(%rbx)
               :   74d48:	jmpq   74bd0 <_IO_file_overflow@@GLIBC_2.2.5+0x80>
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000075590 <__overflow>: /* __overflow total:      2  0.0019 */
     1 9.7e-04 :   75590:	mov    0xc0(%rdi),%eax
               :   75596:	test   %eax,%eax
               :   75598:	jne    755a4 <__overflow+0x14>
               :   7559a:	movl   $0xffffffff,0xc0(%rdi)
     1 9.7e-04 :   755a4:	mov    0xd8(%rdi),%rax
               :   755ab:	mov    0x18(%rax),%rax
               :   755af:	jmpq   *%rax
               :   755b1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000050520 <fprintf>: /* fprintf total:      2  0.0019 */
               :   50520:	sub    $0xd8,%rsp
               :   50527:	test   %al,%al
               :   50529:	mov    %rdx,0x30(%rsp)
     1 9.7e-04 :   5052e:	mov    %rcx,0x38(%rsp)
               :   50533:	mov    %r8,0x40(%rsp)
               :   50538:	mov    %r9,0x48(%rsp)
               :   5053d:	je     50576 <fprintf+0x56>
               :   5053f:	movaps %xmm0,0x50(%rsp)
               :   50544:	movaps %xmm1,0x60(%rsp)
               :   50549:	movaps %xmm2,0x70(%rsp)
               :   5054e:	movaps %xmm3,0x80(%rsp)
               :   50556:	movaps %xmm4,0x90(%rsp)
               :   5055e:	movaps %xmm5,0xa0(%rsp)
               :   50566:	movaps %xmm6,0xb0(%rsp)
               :   5056e:	movaps %xmm7,0xc0(%rsp)
               :   50576:	lea    0xe0(%rsp),%rax
     1 9.7e-04 :   5057e:	lea    0x8(%rsp),%rdx
               :   50583:	mov    %rax,0x10(%rsp)
               :   50588:	lea    0x20(%rsp),%rax
               :   5058d:	movl   $0x10,0x8(%rsp)
               :   50595:	movl   $0x30,0xc(%rsp)
               :   5059d:	mov    %rax,0x18(%rsp)
               :   505a2:	callq  46290 <_IO_vfprintf>
               :   505a7:	add    $0xd8,%rsp
               :   505ae:	retq   
               :   505af:	nop
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000008bec0 <strchrnul>: /* strchrnul total:      2  0.0019 */
               :   8bec0:	movd   %esi,%xmm1
               :   8bec4:	mov    %edi,%eax
               :   8bec6:	and    $0xfff,%eax
               :   8becb:	punpcklbw %xmm1,%xmm1
               :   8becf:	cmp    $0xfc0,%eax
               :   8bed4:	punpcklwd %xmm1,%xmm1
               :   8bed8:	pshufd $0x0,%xmm1,%xmm1
     1 9.7e-04 :   8bedd:	jg     8c030 <strchrnul+0x170>
               :   8bee3:	movdqu (%rdi),%xmm0
               :   8bee7:	pxor   %xmm3,%xmm3
               :   8beeb:	movdqa %xmm0,%xmm4
     1 9.7e-04 :   8beef:	pcmpeqb %xmm1,%xmm0
               :   8bef3:	pcmpeqb %xmm3,%xmm4
               :   8bef7:	por    %xmm4,%xmm0
               :   8befb:	pmovmskb %xmm0,%eax
               :   8beff:	test   %eax,%eax
               :   8bf01:	je     8bf10 <strchrnul+0x50>
               :   8bf03:	bsf    %eax,%eax
               :   8bf06:	lea    (%rdi,%rax,1),%rax
               :   8bf0a:	retq   
               :   8bf0b:	nopl   0x0(%rax,%rax,1)
               :   8bf10:	movdqu 0x10(%rdi),%xmm0
               :   8bf15:	movdqa %xmm0,%xmm4
               :   8bf19:	pcmpeqb %xmm1,%xmm0
               :   8bf1d:	pcmpeqb %xmm3,%xmm4
               :   8bf21:	por    %xmm4,%xmm0
               :   8bf25:	pmovmskb %xmm0,%ecx
               :   8bf29:	movdqu 0x20(%rdi),%xmm0
               :   8bf2e:	movdqa %xmm0,%xmm4
               :   8bf32:	pcmpeqb %xmm1,%xmm0
               :   8bf36:	shl    $0x10,%rcx
               :   8bf3a:	pcmpeqb %xmm3,%xmm4
               :   8bf3e:	por    %xmm4,%xmm0
               :   8bf42:	pmovmskb %xmm0,%eax
               :   8bf46:	movdqu 0x30(%rdi),%xmm0
               :   8bf4b:	pcmpeqb %xmm0,%xmm3
               :   8bf4f:	shl    $0x20,%rax
               :   8bf53:	pcmpeqb %xmm1,%xmm0
               :   8bf57:	or     %rcx,%rax
               :   8bf5a:	por    %xmm3,%xmm0
               :   8bf5e:	pmovmskb %xmm0,%ecx
               :   8bf62:	shl    $0x30,%rcx
               :   8bf66:	or     %rcx,%rax
               :   8bf69:	test   %rax,%rax
               :   8bf6c:	jne    8c020 <strchrnul+0x160>
               :   8bf72:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
               :   8bf80:	pxor   %xmm6,%xmm6
               :   8bf84:	and    $0xffffffffffffffc0,%rdi
               :   8bf88:	add    $0x40,%rdi
               :   8bf8c:	movdqa (%rdi),%xmm5
               :   8bf90:	movdqa 0x10(%rdi),%xmm2
               :   8bf95:	movdqa 0x20(%rdi),%xmm3
               :   8bf9a:	pxor   %xmm1,%xmm5
               :   8bf9e:	movdqa 0x30(%rdi),%xmm4
               :   8bfa3:	pxor   %xmm1,%xmm2
               :   8bfa7:	pxor   %xmm1,%xmm3
               :   8bfab:	pminub (%rdi),%xmm5
               :   8bfaf:	pxor   %xmm1,%xmm4
               :   8bfb3:	pminub 0x10(%rdi),%xmm2
               :   8bfb8:	pminub 0x20(%rdi),%xmm3
               :   8bfbd:	pminub %xmm2,%xmm5
               :   8bfc1:	pminub 0x30(%rdi),%xmm4
               :   8bfc6:	pminub %xmm3,%xmm5
               :   8bfca:	pminub %xmm4,%xmm5
               :   8bfce:	pcmpeqb %xmm6,%xmm5
               :   8bfd2:	pmovmskb %xmm5,%eax
               :   8bfd6:	test   %eax,%eax
               :   8bfd8:	je     8bf88 <strchrnul+0xc8>
               :   8bfda:	movdqa (%rdi),%xmm5
               :   8bfde:	movdqa %xmm5,%xmm0
               :   8bfe2:	pcmpeqb %xmm1,%xmm5
               :   8bfe6:	pcmpeqb %xmm6,%xmm0
               :   8bfea:	por    %xmm0,%xmm5
               :   8bfee:	pcmpeqb %xmm6,%xmm2
               :   8bff2:	pcmpeqb %xmm6,%xmm3
               :   8bff6:	pcmpeqb %xmm6,%xmm4
               :   8bffa:	pmovmskb %xmm5,%ecx
               :   8bffe:	pmovmskb %xmm2,%eax
               :   8c002:	shl    $0x10,%rax
               :   8c006:	pmovmskb %xmm3,%r8d
               :   8c00b:	pmovmskb %xmm4,%edx
               :   8c00f:	shl    $0x20,%r8
               :   8c013:	or     %r8,%rax
               :   8c016:	or     %rcx,%rax
               :   8c019:	shl    $0x30,%rdx
               :   8c01d:	or     %rdx,%rax
               :   8c020:	bsf    %rax,%rax
               :   8c024:	lea    (%rdi,%rax,1),%rax
               :   8c028:	retq   
               :   8c029:	nopl   0x0(%rax)
               :   8c030:	mov    %rdi,%rdx
               :   8c033:	pxor   %xmm2,%xmm2
               :   8c037:	and    $0xffffffffffffffc0,%rdx
               :   8c03b:	movdqa %xmm1,%xmm0
               :   8c03f:	movdqa (%rdx),%xmm3
               :   8c043:	movdqa %xmm3,%xmm4
               :   8c047:	pcmpeqb %xmm1,%xmm3
               :   8c04b:	pcmpeqb %xmm2,%xmm4
               :   8c04f:	por    %xmm4,%xmm3
               :   8c053:	pmovmskb %xmm3,%r8d
               :   8c058:	movdqa 0x10(%rdx),%xmm3
               :   8c05d:	movdqa %xmm3,%xmm4
               :   8c061:	pcmpeqb %xmm1,%xmm3
               :   8c065:	pcmpeqb %xmm2,%xmm4
               :   8c069:	por    %xmm4,%xmm3
               :   8c06d:	pmovmskb %xmm3,%eax
               :   8c071:	movdqa 0x20(%rdx),%xmm3
               :   8c076:	movdqa %xmm3,%xmm4
               :   8c07a:	pcmpeqb %xmm1,%xmm3
               :   8c07e:	shl    $0x10,%rax
               :   8c082:	pcmpeqb %xmm2,%xmm4
               :   8c086:	por    %xmm4,%xmm3
               :   8c08a:	pmovmskb %xmm3,%r9d
               :   8c08f:	movdqa 0x30(%rdx),%xmm3
               :   8c094:	pcmpeqb %xmm3,%xmm2
               :   8c098:	shl    $0x20,%r9
               :   8c09c:	pcmpeqb %xmm3,%xmm0
               :   8c0a0:	or     %r9,%rax
               :   8c0a3:	or     %r8,%rax
               :   8c0a6:	por    %xmm2,%xmm0
               :   8c0aa:	pmovmskb %xmm0,%ecx
               :   8c0ae:	shl    $0x30,%rcx
               :   8c0b2:	or     %rcx,%rax
               :   8c0b5:	mov    %edi,%ecx
               :   8c0b7:	sub    %dl,%cl
               :   8c0b9:	shr    %cl,%rax
               :   8c0bc:	test   %rax,%rax
               :   8c0bf:	jne    8c020 <strchrnul+0x160>
               :   8c0c5:	jmpq   8bf72 <strchrnul+0xb2>
               :   8c0ca:	nopw   0x0(%rax,%rax,1)
               :
               :/lib64/libc-2.19.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000021d90 <__init_cpu_features>: /* __init_cpu_features total:      1 9.7e-04 */
               :   21d90:	xor    %eax,%eax
               :   21d92:	push   %rbx
               :   21d93:	cpuid  
               :   21d95:	cmp    $0x756e6547,%ebx
               :   21d9b:	mov    %eax,0x3845e3(%rip)        # 3a6384 <__cpu_features+0x4>
               :   21da1:	jne    21db7 <__init_cpu_features+0x27>
               :   21da3:	cmp    $0x6c65746e,%ecx
               :   21da9:	jne    21db7 <__init_cpu_features+0x27>
               :   21dab:	cmp    $0x49656e69,%edx
               :   21db1:	je     21ef0 <__init_cpu_features+0x160>
               :   21db7:	cmp    $0x68747541,%ebx
               :   21dbd:	je     21e30 <__init_cpu_features+0xa0>
               :   21dbf:	xor    %edi,%edi
               :   21dc1:	xor    %esi,%esi
               :   21dc3:	mov    $0x3,%r9d
               :   21dc9:	cmpl   $0x6,0x3845b4(%rip)        # 3a6384 <__cpu_features+0x4>
               :   21dd0:	jle    21df3 <__init_cpu_features+0x63>
               :   21dd2:	mov    $0x7,%eax
               :   21dd7:	xor    %ecx,%ecx
               :   21dd9:	cpuid  
               :   21ddb:	mov    %eax,0x3845b7(%rip)        # 3a6398 <__cpu_features+0x18>
               :   21de1:	mov    %ebx,0x3845b5(%rip)        # 3a639c <__cpu_features+0x1c>
               :   21de7:	mov    %ecx,0x3845b3(%rip)        # 3a63a0 <__cpu_features+0x20>
               :   21ded:	mov    %edx,0x3845b1(%rip)        # 3a63a4 <__cpu_features+0x24>
               :   21df3:	mov    0x384596(%rip),%r8d        # 3a6390 <__cpu_features+0x10>
               :   21dfa:	test   $0x8000000,%r8d
               :   21e01:	je     21e14 <__init_cpu_features+0x84>
               :   21e03:	xor    %ecx,%ecx
               :   21e05:	xgetbv 
               :   21e08:	and    $0x6,%eax
               :   21e0b:	cmp    $0x6,%eax
               :   21e0e:	je     21eb0 <__init_cpu_features+0x120>
               :   21e14:	mov    %esi,0x38459e(%rip)        # 3a63b8 <__cpu_features+0x38>
               :   21e1a:	mov    %edi,0x38459c(%rip)        # 3a63bc <__cpu_features+0x3c>
               :   21e20:	mov    %r9d,0x384559(%rip)        # 3a6380 <__cpu_features>
               :   21e27:	pop    %rbx
               :   21e28:	retq   
               :   21e29:	nopl   0x0(%rax)
               :   21e30:	cmp    $0x444d4163,%ecx
               :   21e36:	jne    21dbf <__init_cpu_features+0x2f>
               :   21e38:	cmp    $0x69746e65,%edx
               :   21e3e:	jne    21dbf <__init_cpu_features+0x2f>
               :   21e44:	mov    $0x1,%eax
               :   21e49:	mov    $0x2,%r9d
               :   21e4f:	cpuid  
               :   21e51:	mov    %eax,%esi
               :   21e53:	mov    %eax,0x38452f(%rip)        # 3a6388 <__cpu_features+0x8>
               :   21e59:	shr    $0x4,%eax
               :   21e5c:	shr    $0x8,%esi
               :   21e5f:	mov    %eax,%edi
               :   21e61:	mov    %ebx,0x384525(%rip)        # 3a638c <__cpu_features+0xc>
               :   21e67:	mov    %ecx,0x384523(%rip)        # 3a6390 <__cpu_features+0x10>
               :   21e6d:	mov    %edx,0x384521(%rip)        # 3a6394 <__cpu_features+0x14>
               :   21e73:	and    $0xf,%esi
               :   21e76:	and    $0xf,%edi
               :   21e79:	mov    $0x80000000,%eax
               :   21e7e:	cpuid  
               :   21e80:	cmp    $0x80000000,%eax
               :   21e85:	jbe    21dc9 <__init_cpu_features+0x39>
               :   21e8b:	mov    $0x80000001,%eax
               :   21e90:	cpuid  
               :   21e92:	mov    %eax,0x384510(%rip)        # 3a63a8 <__cpu_features+0x28>
               :   21e98:	mov    %ebx,0x38450e(%rip)        # 3a63ac <__cpu_features+0x2c>
               :   21e9e:	mov    %ecx,0x38450c(%rip)        # 3a63b0 <__cpu_features+0x30>
               :   21ea4:	mov    %edx,0x38450a(%rip)        # 3a63b4 <__cpu_features+0x34>
               :   21eaa:	jmpq   21dc9 <__init_cpu_features+0x39>
               :   21eaf:	nop
               :   21eb0:	test   $0x10000000,%r8d
               :   21eb7:	je     21ec0 <__init_cpu_features+0x130>
               :   21eb9:	orl    $0x40,0x384500(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21ec0:	and    $0x1000,%r8d
               :   21ec7:	je     21ed3 <__init_cpu_features+0x143>
               :   21ec9:	orl    $0x80,0x3844ed(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21ed3:	testb  $0x1,0x3844d8(%rip)        # 3a63b2 <__cpu_features+0x32>
               :   21eda:	je     21e14 <__init_cpu_features+0x84>
               :   21ee0:	orl    $0x100,0x3844d6(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21eea:	jmpq   21e14 <__init_cpu_features+0x84>
               :   21eef:	nop
               :   21ef0:	mov    $0x1,%eax
               :   21ef5:	cpuid  
     1 9.7e-04 :   21ef7:	mov    %eax,%esi
               :   21ef9:	mov    %edx,0x384495(%rip)        # 3a6394 <__cpu_features+0x14>
               :   21eff:	mov    %eax,%edi
               :   21f01:	shr    $0x8,%esi
               :   21f04:	mov    %eax,%edx
               :   21f06:	shr    $0x4,%edi
               :   21f09:	shr    $0xc,%edx
               :   21f0c:	and    $0xf,%esi
               :   21f0f:	and    $0xf,%edi
               :   21f12:	and    $0xf0,%edx
               :   21f18:	cmp    $0xf,%esi
               :   21f1b:	mov    %ecx,%r8d
               :   21f1e:	mov    %eax,0x384464(%rip)        # 3a6388 <__cpu_features+0x8>
               :   21f24:	mov    %ebx,0x384462(%rip)        # 3a638c <__cpu_features+0xc>
               :   21f2a:	mov    %ecx,0x384460(%rip)        # 3a6390 <__cpu_features+0x10>
               :   21f30:	je     21f80 <__init_cpu_features+0x1f0>
               :   21f32:	cmp    $0x6,%esi
               :   21f35:	mov    $0x1,%r9d
               :   21f3b:	jne    21dc9 <__init_cpu_features+0x39>
               :   21f41:	add    %edx,%edi
               :   21f43:	lea    -0x1a(%rdi),%ecx
               :   21f46:	cmp    $0x1d,%ecx
               :   21f49:	ja     21fa0 <__init_cpu_features+0x210>
               :   21f4b:	mov    $0x1,%eax
               :   21f50:	shl    %cl,%rax
               :   21f53:	test   $0x340831,%eax
               :   21f58:	jne    21fb3 <__init_cpu_features+0x223>
               :   21f5a:	test   $0x1004,%eax
               :   21f5f:	jne    21fc5 <__init_cpu_features+0x235>
               :   21f61:	test   $0x20000000,%eax
               :   21f66:	je     21fa0 <__init_cpu_features+0x210>
               :   21f68:	orl    $0x230,0x38444e(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21f72:	jmpq   21dc9 <__init_cpu_features+0x39>
               :   21f77:	nopw   0x0(%rax,%rax,1)
               :   21f80:	shr    $0x14,%eax
               :   21f83:	add    %edx,%edi
               :   21f85:	mov    $0x1,%r9d
               :   21f8b:	movzbl %al,%esi
               :   21f8e:	add    $0xf,%esi
               :   21f91:	jmpq   21dc9 <__init_cpu_features+0x39>
               :   21f96:	nopw   %cs:0x0(%rax,%rax,1)
               :   21fa0:	and    $0x10000000,%r8d
               :   21fa7:	mov    $0x1,%r9d
               :   21fad:	je     21dc9 <__init_cpu_features+0x39>
               :   21fb3:	orl    $0x33,0x384406(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21fba:	mov    $0x1,%r9d
               :   21fc0:	jmpq   21dc9 <__init_cpu_features+0x39>
               :   21fc5:	orl    $0x4,0x3843f4(%rip)        # 3a63c0 <__cpu_features+0x40>
               :   21fcc:	jmpq   21dc9 <__init_cpu_features+0x39>
               :   21fd1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
/* 
 * Command line: opannotate --assembly pi.3 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Ivy Bridge microarchitecture, speed 3600 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
